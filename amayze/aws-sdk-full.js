// AWS SDK for JavaScript v2.0.0-rc9
// Copyright 2012-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// License at https://sdk.amazonaws.com/js/BUNDLE_LICENSE.txt
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
var Buffer = require('buffer').Buffer;
var intSize = 4;
var zeroBuffer = new Buffer(intSize); zeroBuffer.fill(0);
var chrsz = 8;

function toArray(buf, bigEndian) {
  if ((buf.length % intSize) !== 0) {
    var len = buf.length + (intSize - (buf.length % intSize));
    buf = Buffer.concat([buf, zeroBuffer], len);
  }

  var arr = [];
  var fn = bigEndian ? buf.readInt32BE : buf.readInt32LE;
  for (var i = 0; i < buf.length; i += intSize) {
    arr.push(fn.call(buf, i));
  }
  return arr;
}

function toBuffer(arr, size, bigEndian) {
  var buf = new Buffer(size);
  var fn = bigEndian ? buf.writeInt32BE : buf.writeInt32LE;
  for (var i = 0; i < arr.length; i++) {
    fn.call(buf, arr[i], i * 4, true);
  }
  return buf;
}

function hash(buf, fn, hashSize, bigEndian) {
  if (!Buffer.isBuffer(buf)) buf = new Buffer(buf);
  var arr = fn(toArray(buf, bigEndian), buf.length * chrsz);
  return toBuffer(arr, hashSize, bigEndian);
}

module.exports = { hash: hash };

},{"buffer":11}],3:[function(require,module,exports){
var Buffer = require('buffer').Buffer
var sha = require('./sha')
var sha256 = require('./sha256')
var rng = require('./rng')
var md5 = require('./md5')

var algorithms = {
  sha1: sha,
  sha256: sha256,
  md5: md5
}

var blocksize = 64
var zeroBuffer = new Buffer(blocksize); zeroBuffer.fill(0)
function hmac(fn, key, data) {
  if(!Buffer.isBuffer(key)) key = new Buffer(key)
  if(!Buffer.isBuffer(data)) data = new Buffer(data)

  if(key.length > blocksize) {
    key = fn(key)
  } else if(key.length < blocksize) {
    key = Buffer.concat([key, zeroBuffer], blocksize)
  }

  var ipad = new Buffer(blocksize), opad = new Buffer(blocksize)
  for(var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var hash = fn(Buffer.concat([ipad, data]))
  return fn(Buffer.concat([opad, hash]))
}

function hash(alg, key) {
  alg = alg || 'sha1'
  var fn = algorithms[alg]
  var bufs = []
  var length = 0
  if(!fn) error('algorithm:', alg, 'is not yet supported')
  return {
    update: function (data) {
      if(!Buffer.isBuffer(data)) data = new Buffer(data)
        
      bufs.push(data)
      length += data.length
      return this
    },
    digest: function (enc) {
      var buf = Buffer.concat(bufs)
      var r = key ? hmac(fn, key, buf) : fn(buf)
      bufs = null
      return enc ? r.toString(enc) : r
    }
  }
}

function error () {
  var m = [].slice.call(arguments).join(' ')
  throw new Error([
    m,
    'we accept pull requests',
    'http://github.com/dominictarr/crypto-browserify'
    ].join('\n'))
}

exports.createHash = function (alg) { return hash(alg) }
exports.createHmac = function (alg, key) { return hash(alg, key) }
exports.randomBytes = function(size, callback) {
  if (callback && callback.call) {
    try {
      callback.call(this, undefined, new Buffer(rng(size)))
    } catch (err) { callback(err) }
  } else {
    return new Buffer(rng(size))
  }
}

function each(a, f) {
  for(var i in a)
    f(a[i], i)
}

each(['createCredentials'
, 'createCipher'
, 'createCipheriv'
, 'createDecipher'
, 'createDecipheriv'
, 'createSign'
, 'createVerify'
, 'createDiffieHellman'
, 'pbkdf2'], function (name) {
  exports[name] = function () {
    error('sorry,', name, 'is not implemented yet')
  }
})

},{"./md5":4,"./rng":5,"./sha":6,"./sha256":7,"buffer":11}],4:[function(require,module,exports){


var helpers = require('./helpers');


function md5_vm_test()
{
  return hex_md5("abc") == "900150983cd24fb0d6963f7d28e17f72";
}


function core_md5(x, len)
{

  x[len >> 5] |= 0x80 << ((len) % 32);
  x[(((len + 64) >>> 9) << 4) + 14] = len;

  var a =  1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d =  271733878;

  for(var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;

    a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
    d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);
    c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
    b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
    a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
    d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
    c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
    b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
    a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
    d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
    c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
    b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
    a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
    d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
    c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
    b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);

    a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
    d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
    c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
    b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
    a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
    d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
    c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
    b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
    a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
    d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
    c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
    b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
    a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
    d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
    c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
    b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);

    a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
    d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
    c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
    b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
    a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
    d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
    c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
    b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
    a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
    d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
    c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
    b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
    a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
    d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
    c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
    b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);

    a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
    d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
    c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
    b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
    a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
    d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
    c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
    b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
    a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
    d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
    c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
    b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
    a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
    d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
    c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
    b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
  }
  return Array(a, b, c, d);

}


function md5_cmn(q, a, b, x, s, t)
{
  return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
}
function md5_ff(a, b, c, d, x, s, t)
{
  return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
function md5_gg(a, b, c, d, x, s, t)
{
  return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
function md5_hh(a, b, c, d, x, s, t)
{
  return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
function md5_ii(a, b, c, d, x, s, t)
{
  return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}


function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}


function bit_rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

module.exports = function md5(buf) {
  return helpers.hash(buf, core_md5, 16);
};

},{"./helpers":2}],5:[function(require,module,exports){
(function() {
  var _global = this;

  var mathRNG, whatwgRNG;

  mathRNG = function(size) {
    var bytes = new Array(size);
    var r;

    for (var i = 0, r; i < size; i++) {
      if ((i & 0x03) == 0) r = Math.random() * 0x100000000;
      bytes[i] = r >>> ((i & 0x03) << 3) & 0xff;
    }

    return bytes;
  }

  if (_global.crypto && crypto.getRandomValues) {
    whatwgRNG = function(size) {
      var bytes = new Uint8Array(size);
      crypto.getRandomValues(bytes);
      return bytes;
    }
  }

  module.exports = whatwgRNG || mathRNG;

}())

},{}],6:[function(require,module,exports){


var helpers = require('./helpers');


function core_sha1(x, len)
{

  x[len >> 5] |= 0x80 << (24 - len % 32);
  x[((len + 64 >> 9) << 4) + 15] = len;

  var w = Array(80);
  var a =  1732584193;
  var b = -271733879;
  var c = -1732584194;
  var d =  271733878;
  var e = -1009589776;

  for(var i = 0; i < x.length; i += 16)
  {
    var olda = a;
    var oldb = b;
    var oldc = c;
    var oldd = d;
    var olde = e;

    for(var j = 0; j < 80; j++)
    {
      if(j < 16) w[j] = x[i + j];
      else w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1);
      var t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),
                       safe_add(safe_add(e, w[j]), sha1_kt(j)));
      e = d;
      d = c;
      c = rol(b, 30);
      b = a;
      a = t;
    }

    a = safe_add(a, olda);
    b = safe_add(b, oldb);
    c = safe_add(c, oldc);
    d = safe_add(d, oldd);
    e = safe_add(e, olde);
  }
  return Array(a, b, c, d, e);

}


function sha1_ft(t, b, c, d)
{
  if(t < 20) return (b & c) | ((~b) & d);
  if(t < 40) return b ^ c ^ d;
  if(t < 60) return (b & c) | (b & d) | (c & d);
  return b ^ c ^ d;
}


function sha1_kt(t)
{
  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :
         (t < 60) ? -1894007588 : -899497514;
}


function safe_add(x, y)
{
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
}


function rol(num, cnt)
{
  return (num << cnt) | (num >>> (32 - cnt));
}

module.exports = function sha1(buf) {
  return helpers.hash(buf, core_sha1, 20, true);
};

},{"./helpers":2}],7:[function(require,module,exports){



var helpers = require('./helpers');

var safe_add = function(x, y) {
  var lsw = (x & 0xFFFF) + (y & 0xFFFF);
  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
  return (msw << 16) | (lsw & 0xFFFF);
};

var S = function(X, n) {
  return (X >>> n) | (X << (32 - n));
};

var R = function(X, n) {
  return (X >>> n);
};

var Ch = function(x, y, z) {
  return ((x & y) ^ ((~x) & z));
};

var Maj = function(x, y, z) {
  return ((x & y) ^ (x & z) ^ (y & z));
};

var Sigma0256 = function(x) {
  return (S(x, 2) ^ S(x, 13) ^ S(x, 22));
};

var Sigma1256 = function(x) {
  return (S(x, 6) ^ S(x, 11) ^ S(x, 25));
};

var Gamma0256 = function(x) {
  return (S(x, 7) ^ S(x, 18) ^ R(x, 3));
};

var Gamma1256 = function(x) {
  return (S(x, 17) ^ S(x, 19) ^ R(x, 10));
};

var core_sha256 = function(m, l) {
  var K = new Array(0x428A2F98,0x71374491,0xB5C0FBCF,0xE9B5DBA5,0x3956C25B,0x59F111F1,0x923F82A4,0xAB1C5ED5,0xD807AA98,0x12835B01,0x243185BE,0x550C7DC3,0x72BE5D74,0x80DEB1FE,0x9BDC06A7,0xC19BF174,0xE49B69C1,0xEFBE4786,0xFC19DC6,0x240CA1CC,0x2DE92C6F,0x4A7484AA,0x5CB0A9DC,0x76F988DA,0x983E5152,0xA831C66D,0xB00327C8,0xBF597FC7,0xC6E00BF3,0xD5A79147,0x6CA6351,0x14292967,0x27B70A85,0x2E1B2138,0x4D2C6DFC,0x53380D13,0x650A7354,0x766A0ABB,0x81C2C92E,0x92722C85,0xA2BFE8A1,0xA81A664B,0xC24B8B70,0xC76C51A3,0xD192E819,0xD6990624,0xF40E3585,0x106AA070,0x19A4C116,0x1E376C08,0x2748774C,0x34B0BCB5,0x391C0CB3,0x4ED8AA4A,0x5B9CCA4F,0x682E6FF3,0x748F82EE,0x78A5636F,0x84C87814,0x8CC70208,0x90BEFFFA,0xA4506CEB,0xBEF9A3F7,0xC67178F2);
  var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);
    var W = new Array(64);
    var a, b, c, d, e, f, g, h, i, j;
    var T1, T2;

  m[l >> 5] |= 0x80 << (24 - l % 32);
  m[((l + 64 >> 9) << 4) + 15] = l;
  for (var i = 0; i < m.length; i += 16) {
    a = HASH[0]; b = HASH[1]; c = HASH[2]; d = HASH[3]; e = HASH[4]; f = HASH[5]; g = HASH[6]; h = HASH[7];
    for (var j = 0; j < 64; j++) {
      if (j < 16) {
        W[j] = m[j + i];
      } else {
        W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);
      }
      T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);
      T2 = safe_add(Sigma0256(a), Maj(a, b, c));
      h = g; g = f; f = e; e = safe_add(d, T1); d = c; c = b; b = a; a = safe_add(T1, T2);
    }
    HASH[0] = safe_add(a, HASH[0]); HASH[1] = safe_add(b, HASH[1]); HASH[2] = safe_add(c, HASH[2]); HASH[3] = safe_add(d, HASH[3]);
    HASH[4] = safe_add(e, HASH[4]); HASH[5] = safe_add(f, HASH[5]); HASH[6] = safe_add(g, HASH[6]); HASH[7] = safe_add(h, HASH[7]);
  }
  return HASH;
};

module.exports = function sha256(buf) {
  return helpers.hash(buf, core_sha256, 32, true);
};

},{"./helpers":2}],8:[function(require,module,exports){

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

EventEmitter.defaultMaxListeners = 10;

EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        throw TypeError('Uncaught, unspecified "error" event.');
      }
      return false;
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      default:
        len = arguments.length;
        args = new Array(len - 1);
        for (i = 1; i < len; i++)
          args[i - 1] = arguments[i];
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    len = arguments.length;
    args = new Array(len - 1);
    for (i = 1; i < len; i++)
      args[i - 1] = arguments[i];

    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    this._events[type].push(listener);
  else
    this._events[type] = [this._events[type], listener];

  if (isObject(this._events[type]) && !this._events[type].warned) {
    var m;
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      console.trace();
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else {
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.listenerCount = function(emitter, type) {
  var ret;
  if (!emitter._events || !emitter._events[type])
    ret = 0;
  else if (isFunction(emitter._events[type]))
    ret = 1;
  else
    ret = emitter._events[type].length;
  return ret;
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}

},{}],9:[function(require,module,exports){
if (typeof Object.create === 'function') {
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}

},{}],10:[function(require,module,exports){

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    if (canPost) {
        var queue = [];
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

process.binding = function (name) {
    throw new Error('process.binding is not supported');
}

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],11:[function(require,module,exports){
var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = Buffer
exports.INSPECT_MAX_BYTES = 50
Buffer.poolSize = 8192


Buffer._useTypedArrays = (function () {
   if (typeof Uint8Array === 'undefined' || typeof ArrayBuffer === 'undefined')
      return false

  try {
    var arr = new Uint8Array(0)
    arr.foo = function () { return 42 }
    return 42 === arr.foo() &&
        typeof arr.subarray === 'function' // Chrome 9-10 lack `subarray`
  } catch (e) {
    return false
  }
})()


function Buffer (subject, encoding, noZero) {
  if (!(this instanceof Buffer))
    return new Buffer(subject, encoding, noZero)

  var type = typeof subject

  if (encoding === 'base64' && type === 'string') {
    subject = stringtrim(subject)
    while (subject.length % 4 !== 0) {
      subject = subject + '='
    }
  }

  var length
  if (type === 'number')
    length = coerce(subject)
  else if (type === 'string')
    length = Buffer.byteLength(subject, encoding)
  else if (type === 'object')
    length = coerce(subject.length) // Assume object is an array
  else
    throw new Error('First argument needs to be a number, array or string.')

  var buf
  if (Buffer._useTypedArrays) {
    buf = augment(new Uint8Array(length))
  } else {
    buf = this
    buf.length = length
    buf._isBuffer = true
  }

  var i
  if (Buffer._useTypedArrays && typeof Uint8Array === 'function' &&
      subject instanceof Uint8Array) {
    buf._set(subject)
  } else if (isArrayish(subject)) {
    for (i = 0; i < length; i++) {
      if (Buffer.isBuffer(subject))
        buf[i] = subject.readUInt8(i)
      else
        buf[i] = subject[i]
    }
  } else if (type === 'string') {
    buf.write(subject, 0, encoding)
  } else if (type === 'number' && !Buffer._useTypedArrays && !noZero) {
    for (i = 0; i < length; i++) {
      buf[i] = 0
    }
  }

  return buf
}


Buffer.isEncoding = function (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'binary':
    case 'base64':
    case 'raw':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.isBuffer = function (b) {
  return !!(b !== null && b !== undefined && b._isBuffer)
}

Buffer.byteLength = function (str, encoding) {
  var ret
  str = str + ''
  switch (encoding || 'utf8') {
    case 'hex':
      ret = str.length / 2
      break
    case 'utf8':
    case 'utf-8':
      ret = utf8ToBytes(str).length
      break
    case 'ascii':
    case 'binary':
    case 'raw':
      ret = str.length
      break
    case 'base64':
      ret = base64ToBytes(str).length
      break
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      ret = str.length * 2
      break
    default:
      throw new Error('Unknown encoding')
  }
  return ret
}

Buffer.concat = function (list, totalLength) {
  assert(isArray(list), 'Usage: Buffer.concat(list, [totalLength])\n' +
      'list should be an Array.')

  if (list.length === 0) {
    return new Buffer(0)
  } else if (list.length === 1) {
    return list[0]
  }

  var i
  if (typeof totalLength !== 'number') {
    totalLength = 0
    for (i = 0; i < list.length; i++) {
      totalLength += list[i].length
    }
  }

  var buf = new Buffer(totalLength)
  var pos = 0
  for (i = 0; i < list.length; i++) {
    var item = list[i]
    item.copy(buf, pos)
    pos += item.length
  }
  return buf
}


function _hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length
  assert(strLen % 2 === 0, 'Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; i++) {
    var byte = parseInt(string.substr(i * 2, 2), 16)
    assert(!isNaN(byte), 'Invalid hex string')
    buf[offset + i] = byte
  }
  Buffer._charsWritten = i * 2
  return i
}

function _utf8Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(utf8ToBytes(string), buf, offset, length)
  return charsWritten
}

function _asciiWrite (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(asciiToBytes(string), buf, offset, length)
  return charsWritten
}

function _binaryWrite (buf, string, offset, length) {
  return _asciiWrite(buf, string, offset, length)
}

function _base64Write (buf, string, offset, length) {
  var charsWritten = Buffer._charsWritten =
    blitBuffer(base64ToBytes(string), buf, offset, length)
  return charsWritten
}

Buffer.prototype.write = function (string, offset, length, encoding) {
  if (isFinite(offset)) {
    if (!isFinite(length)) {
      encoding = length
      length = undefined
    }
  } else {  // legacy
    var swap = encoding
    encoding = offset
    offset = length
    length = swap
  }

  offset = Number(offset) || 0
  var remaining = this.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }
  encoding = String(encoding || 'utf8').toLowerCase()

  switch (encoding) {
    case 'hex':
      return _hexWrite(this, string, offset, length)
    case 'utf8':
    case 'utf-8':
    case 'ucs2': // TODO: No support for ucs2 or utf16le encodings yet
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return _utf8Write(this, string, offset, length)
    case 'ascii':
      return _asciiWrite(this, string, offset, length)
    case 'binary':
      return _binaryWrite(this, string, offset, length)
    case 'base64':
      return _base64Write(this, string, offset, length)
    default:
      throw new Error('Unknown encoding')
  }
}

Buffer.prototype.toString = function (encoding, start, end) {
  var self = this

  encoding = String(encoding || 'utf8').toLowerCase()
  start = Number(start) || 0
  end = (end !== undefined)
    ? Number(end)
    : end = self.length

  if (end === start)
    return ''

  switch (encoding) {
    case 'hex':
      return _hexSlice(self, start, end)
    case 'utf8':
    case 'utf-8':
    case 'ucs2': // TODO: No support for ucs2 or utf16le encodings yet
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return _utf8Slice(self, start, end)
    case 'ascii':
      return _asciiSlice(self, start, end)
    case 'binary':
      return _binarySlice(self, start, end)
    case 'base64':
      return _base64Slice(self, start, end)
    default:
      throw new Error('Unknown encoding')
  }
}

Buffer.prototype.toJSON = function () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

Buffer.prototype.copy = function (target, target_start, start, end) {
  var source = this

  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (!target_start) target_start = 0

  if (end === start) return
  if (target.length === 0 || source.length === 0) return

  assert(end >= start, 'sourceEnd < sourceStart')
  assert(target_start >= 0 && target_start < target.length,
      'targetStart out of bounds')
  assert(start >= 0 && start < source.length, 'sourceStart out of bounds')
  assert(end >= 0 && end <= source.length, 'sourceEnd out of bounds')

  if (end > this.length)
    end = this.length
  if (target.length - target_start < end - start)
    end = target.length - target_start + start

  for (var i = 0; i < end - start; i++)
    target[i + target_start] = this[i + start]
}

function _base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function _utf8Slice (buf, start, end) {
  var res = ''
  var tmp = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++) {
    if (buf[i] <= 0x7F) {
      res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i])
      tmp = ''
    } else {
      tmp += '%' + buf[i].toString(16)
    }
  }

  return res + decodeUtf8Char(tmp)
}

function _asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; i++)
    ret += String.fromCharCode(buf[i])
  return ret
}

function _binarySlice (buf, start, end) {
  return _asciiSlice(buf, start, end)
}

function _hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; i++) {
    out += toHex(buf[i])
  }
  return out
}

Buffer.prototype.slice = function (start, end) {
  var len = this.length
  start = clamp(start, len, 0)
  end = clamp(end, len, len)

  if (Buffer._useTypedArrays) {
    return augment(this.subarray(start, end))
  } else {
    var sliceLen = end - start
    var newBuf = new Buffer(sliceLen, undefined, true)
    for (var i = 0; i < sliceLen; i++) {
      newBuf[i] = this[i + start]
    }
    return newBuf
  }
}

Buffer.prototype.get = function (offset) {
  console.log('.get() is deprecated. Access using array indexes instead.')
  return this.readUInt8(offset)
}

Buffer.prototype.set = function (v, offset) {
  console.log('.set() is deprecated. Access using array indexes instead.')
  return this.writeUInt8(v, offset)
}

Buffer.prototype.readUInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  return this[offset]
}

function _readUInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    val = buf[offset]
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
  } else {
    val = buf[offset] << 8
    if (offset + 1 < len)
      val |= buf[offset + 1]
  }
  return val
}

Buffer.prototype.readUInt16LE = function (offset, noAssert) {
  return _readUInt16(this, offset, true, noAssert)
}

Buffer.prototype.readUInt16BE = function (offset, noAssert) {
  return _readUInt16(this, offset, false, noAssert)
}

function _readUInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val
  if (littleEndian) {
    if (offset + 2 < len)
      val = buf[offset + 2] << 16
    if (offset + 1 < len)
      val |= buf[offset + 1] << 8
    val |= buf[offset]
    if (offset + 3 < len)
      val = val + (buf[offset + 3] << 24 >>> 0)
  } else {
    if (offset + 1 < len)
      val = buf[offset + 1] << 16
    if (offset + 2 < len)
      val |= buf[offset + 2] << 8
    if (offset + 3 < len)
      val |= buf[offset + 3]
    val = val + (buf[offset] << 24 >>> 0)
  }
  return val
}

Buffer.prototype.readUInt32LE = function (offset, noAssert) {
  return _readUInt32(this, offset, true, noAssert)
}

Buffer.prototype.readUInt32BE = function (offset, noAssert) {
  return _readUInt32(this, offset, false, noAssert)
}

Buffer.prototype.readInt8 = function (offset, noAssert) {
  if (!noAssert) {
    assert(offset !== undefined && offset !== null,
        'missing offset')
    assert(offset < this.length, 'Trying to read beyond buffer length')
  }

  if (offset >= this.length)
    return

  var neg = this[offset] & 0x80
  if (neg)
    return (0xff - this[offset] + 1) * -1
  else
    return this[offset]
}

function _readInt16 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt16(buf, offset, littleEndian, true)
  var neg = val & 0x8000
  if (neg)
    return (0xffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt16LE = function (offset, noAssert) {
  return _readInt16(this, offset, true, noAssert)
}

Buffer.prototype.readInt16BE = function (offset, noAssert) {
  return _readInt16(this, offset, false, noAssert)
}

function _readInt32 (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  var len = buf.length
  if (offset >= len)
    return

  var val = _readUInt32(buf, offset, littleEndian, true)
  var neg = val & 0x80000000
  if (neg)
    return (0xffffffff - val + 1) * -1
  else
    return val
}

Buffer.prototype.readInt32LE = function (offset, noAssert) {
  return _readInt32(this, offset, true, noAssert)
}

Buffer.prototype.readInt32BE = function (offset, noAssert) {
  return _readInt32(this, offset, false, noAssert)
}

function _readFloat (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 3 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 23, 4)
}

Buffer.prototype.readFloatLE = function (offset, noAssert) {
  return _readFloat(this, offset, true, noAssert)
}

Buffer.prototype.readFloatBE = function (offset, noAssert) {
  return _readFloat(this, offset, false, noAssert)
}

function _readDouble (buf, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset + 7 < buf.length, 'Trying to read beyond buffer length')
  }

  return ieee754.read(buf, offset, littleEndian, 52, 8)
}

Buffer.prototype.readDoubleLE = function (offset, noAssert) {
  return _readDouble(this, offset, true, noAssert)
}

Buffer.prototype.readDoubleBE = function (offset, noAssert) {
  return _readDouble(this, offset, false, noAssert)
}

Buffer.prototype.writeUInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'trying to write beyond buffer length')
    verifuint(value, 0xff)
  }

  if (offset >= this.length) return

  this[offset] = value
}

function _writeUInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 2); i < j; i++) {
    buf[offset + i] =
        (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
            (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt16BE = function (value, offset, noAssert) {
  _writeUInt16(this, value, offset, false, noAssert)
}

function _writeUInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'trying to write beyond buffer length')
    verifuint(value, 0xffffffff)
  }

  var len = buf.length
  if (offset >= len)
    return

  for (var i = 0, j = Math.min(len - offset, 4); i < j; i++) {
    buf[offset + i] =
        (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeUInt32BE = function (value, offset, noAssert) {
  _writeUInt32(this, value, offset, false, noAssert)
}

Buffer.prototype.writeInt8 = function (value, offset, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset < this.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7f, -0x80)
  }

  if (offset >= this.length)
    return

  if (value >= 0)
    this.writeUInt8(value, offset, noAssert)
  else
    this.writeUInt8(0xff + value + 1, offset, noAssert)
}

function _writeInt16 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 1 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fff, -0x8000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt16(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt16(buf, 0xffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt16LE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt16BE = function (value, offset, noAssert) {
  _writeInt16(this, value, offset, false, noAssert)
}

function _writeInt32 (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifsint(value, 0x7fffffff, -0x80000000)
  }

  var len = buf.length
  if (offset >= len)
    return

  if (value >= 0)
    _writeUInt32(buf, value, offset, littleEndian, noAssert)
  else
    _writeUInt32(buf, 0xffffffff + value + 1, offset, littleEndian, noAssert)
}

Buffer.prototype.writeInt32LE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, true, noAssert)
}

Buffer.prototype.writeInt32BE = function (value, offset, noAssert) {
  _writeInt32(this, value, offset, false, noAssert)
}

function _writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 3 < buf.length, 'Trying to write beyond buffer length')
    verifIEEE754(value, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 23, 4)
}

Buffer.prototype.writeFloatLE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function (value, offset, noAssert) {
  _writeFloat(this, value, offset, false, noAssert)
}

function _writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    assert(value !== undefined && value !== null, 'missing value')
    assert(typeof littleEndian === 'boolean', 'missing or invalid endian')
    assert(offset !== undefined && offset !== null, 'missing offset')
    assert(offset + 7 < buf.length,
        'Trying to write beyond buffer length')
    verifIEEE754(value, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }

  var len = buf.length
  if (offset >= len)
    return

  ieee754.write(buf, value, offset, littleEndian, 52, 8)
}

Buffer.prototype.writeDoubleLE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function (value, offset, noAssert) {
  _writeDouble(this, value, offset, false, noAssert)
}

Buffer.prototype.fill = function (value, start, end) {
  if (!value) value = 0
  if (!start) start = 0
  if (!end) end = this.length

  if (typeof value === 'string') {
    value = value.charCodeAt(0)
  }

  assert(typeof value === 'number' && !isNaN(value), 'value is not a number')
  assert(end >= start, 'end < start')

  if (end === start) return
  if (this.length === 0) return

  assert(start >= 0 && start < this.length, 'start out of bounds')
  assert(end >= 0 && end <= this.length, 'end out of bounds')

  for (var i = start; i < end; i++) {
    this[i] = value
  }
}

Buffer.prototype.inspect = function () {
  var out = []
  var len = this.length
  for (var i = 0; i < len; i++) {
    out[i] = toHex(this[i])
    if (i === exports.INSPECT_MAX_BYTES) {
      out[i + 1] = '...'
      break
    }
  }
  return '<Buffer ' + out.join(' ') + '>'
}


Buffer.prototype.toArrayBuffer = function () {
  if (typeof Uint8Array === 'function') {
    if (Buffer._useTypedArrays) {
      return (new Buffer(this)).buffer
    } else {
      var buf = new Uint8Array(this.length)
      for (var i = 0, len = buf.length; i < len; i += 1)
        buf[i] = this[i]
      return buf.buffer
    }
  } else {
    throw new Error('Buffer.toArrayBuffer not supported in this browser')
  }
}


function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

var BP = Buffer.prototype


function augment (arr) {
  arr._isBuffer = true

  arr._get = arr.get
  arr._set = arr.set

  arr.get = BP.get
  arr.set = BP.set

  arr.write = BP.write
  arr.toString = BP.toString
  arr.toLocaleString = BP.toString
  arr.toJSON = BP.toJSON
  arr.copy = BP.copy
  arr.slice = BP.slice
  arr.readUInt8 = BP.readUInt8
  arr.readUInt16LE = BP.readUInt16LE
  arr.readUInt16BE = BP.readUInt16BE
  arr.readUInt32LE = BP.readUInt32LE
  arr.readUInt32BE = BP.readUInt32BE
  arr.readInt8 = BP.readInt8
  arr.readInt16LE = BP.readInt16LE
  arr.readInt16BE = BP.readInt16BE
  arr.readInt32LE = BP.readInt32LE
  arr.readInt32BE = BP.readInt32BE
  arr.readFloatLE = BP.readFloatLE
  arr.readFloatBE = BP.readFloatBE
  arr.readDoubleLE = BP.readDoubleLE
  arr.readDoubleBE = BP.readDoubleBE
  arr.writeUInt8 = BP.writeUInt8
  arr.writeUInt16LE = BP.writeUInt16LE
  arr.writeUInt16BE = BP.writeUInt16BE
  arr.writeUInt32LE = BP.writeUInt32LE
  arr.writeUInt32BE = BP.writeUInt32BE
  arr.writeInt8 = BP.writeInt8
  arr.writeInt16LE = BP.writeInt16LE
  arr.writeInt16BE = BP.writeInt16BE
  arr.writeInt32LE = BP.writeInt32LE
  arr.writeInt32BE = BP.writeInt32BE
  arr.writeFloatLE = BP.writeFloatLE
  arr.writeFloatBE = BP.writeFloatBE
  arr.writeDoubleLE = BP.writeDoubleLE
  arr.writeDoubleBE = BP.writeDoubleBE
  arr.fill = BP.fill
  arr.inspect = BP.inspect
  arr.toArrayBuffer = BP.toArrayBuffer

  return arr
}

function clamp (index, len, defaultValue) {
  if (typeof index !== 'number') return defaultValue
  index = ~~index;  // Coerce to integer.
  if (index >= len) return len
  if (index >= 0) return index
  index += len
  if (index >= 0) return index
  return 0
}

function coerce (length) {
  length = ~~Math.ceil(+length)
  return length < 0 ? 0 : length
}

function isArray (subject) {
  return (Array.isArray || function (subject) {
    return Object.prototype.toString.call(subject) === '[object Array]'
  })(subject)
}

function isArrayish (subject) {
  return isArray(subject) || Buffer.isBuffer(subject) ||
      subject && typeof subject === 'object' &&
      typeof subject.length === 'number'
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    var b = str.charCodeAt(i)
    if (b <= 0x7F)
      byteArray.push(str.charCodeAt(i))
    else {
      var start = i
      if (b >= 0xD800 && b <= 0xDFFF) i++
      var h = encodeURIComponent(str.slice(start, i+1)).substr(1).split('%')
      for (var j = 0; j < h.length; j++)
        byteArray.push(parseInt(h[j], 16))
    }
  }
  return byteArray
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; i++) {
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(str)
}

function blitBuffer (src, dst, offset, length) {
  var pos
  for (var i = 0; i < length; i++) {
    if ((i + offset >= dst.length) || (i >= src.length))
      break
    dst[i + offset] = src[i]
  }
  return i
}

function decodeUtf8Char (str) {
  try {
    return decodeURIComponent(str)
  } catch (err) {
    return String.fromCharCode(0xFFFD) // UTF 8 invalid char
  }
}


function verifuint (value, max) {
  assert(typeof value == 'number', 'cannot write a non-number as a number')
  assert(value >= 0,
      'specified a negative value for writing an unsigned value')
  assert(value <= max, 'value is larger than maximum value for type')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifsint(value, max, min) {
  assert(typeof value == 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
  assert(Math.floor(value) === value, 'value has a fractional component')
}

function verifIEEE754(value, max, min) {
  assert(typeof value == 'number', 'cannot write a non-number as a number')
  assert(value <= max, 'value larger than maximum allowed value')
  assert(value >= min, 'value smaller than minimum allowed value')
}

function assert (test, message) {
  if (!test) throw new Error(message || 'Failed assertion')
}

},{"base64-js":12,"ieee754":13}],12:[function(require,module,exports){
var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

;(function (exports) {
	'use strict';

  var Arr = (typeof Uint8Array !== 'undefined')
    ? Uint8Array
    : Array

	var ZERO   = '0'.charCodeAt(0)
	var PLUS   = '+'.charCodeAt(0)
	var SLASH  = '/'.charCodeAt(0)
	var NUMBER = '0'.charCodeAt(0)
	var LOWER  = 'a'.charCodeAt(0)
	var UPPER  = 'A'.charCodeAt(0)

	function decode (elt) {
		var code = elt.charCodeAt(0)
		if (code === PLUS)
			return 62 // '+'
		if (code === SLASH)
			return 63 // '/'
		if (code < NUMBER)
			return -1 //no match
		if (code < NUMBER + 10)
			return code - NUMBER + 26 + 26
		if (code < UPPER + 26)
			return code - UPPER
		if (code < LOWER + 26)
			return code - LOWER + 26
	}

	function b64ToByteArray (b64) {
		var i, j, l, tmp, placeHolders, arr

		if (b64.length % 4 > 0) {
			throw new Error('Invalid string. Length must be a multiple of 4')
		}

		var len = b64.length
		placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0

		arr = new Arr(b64.length * 3 / 4 - placeHolders)

		l = placeHolders > 0 ? b64.length - 4 : b64.length

		var L = 0

		function push (v) {
			arr[L++] = v
		}

		for (i = 0, j = 0; i < l; i += 4, j += 3) {
			tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))
			push((tmp & 0xFF0000) >> 16)
			push((tmp & 0xFF00) >> 8)
			push(tmp & 0xFF)
		}

		if (placeHolders === 2) {
			tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)
			push(tmp & 0xFF)
		} else if (placeHolders === 1) {
			tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)
			push((tmp >> 8) & 0xFF)
			push(tmp & 0xFF)
		}

		return arr
	}

	function uint8ToBase64 (uint8) {
		var i,
			extraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes
			output = "",
			temp, length

		function encode (num) {
			return lookup.charAt(num)
		}

		function tripletToBase64 (num) {
			return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)
		}

		for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
			temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
			output += tripletToBase64(temp)
		}

		switch (extraBytes) {
			case 1:
				temp = uint8[uint8.length - 1]
				output += encode(temp >> 2)
				output += encode((temp << 4) & 0x3F)
				output += '=='
				break
			case 2:
				temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])
				output += encode(temp >> 10)
				output += encode((temp >> 4) & 0x3F)
				output += encode((temp << 2) & 0x3F)
				output += '='
				break
		}

		return output
	}

	module.exports.toByteArray = b64ToByteArray
	module.exports.fromByteArray = uint8ToBase64
}())

},{}],13:[function(require,module,exports){
exports.read = function(buffer, offset, isLE, mLen, nBytes) {
  var e, m,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      nBits = -7,
      i = isLE ? (nBytes - 1) : 0,
      d = isLE ? -1 : 1,
      s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity);
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};

exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c,
      eLen = nBytes * 8 - mLen - 1,
      eMax = (1 << eLen) - 1,
      eBias = eMax >> 1,
      rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0),
      i = isLE ? 0 : (nBytes - 1),
      d = isLE ? 1 : -1,
      s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8);

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8);

  buffer[offset + i - d] |= s * 128;
};

},{}],14:[function(require,module,exports){
(function (global){/*! http://mths.be/punycode v1.2.3 by @mathias */
;(function(root) {


	var freeExports = typeof exports == 'object' && exports;
	var freeModule = typeof module == 'object' && module &&
		module.exports == freeExports && module;
	var freeGlobal = typeof global == 'object' && global;
	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
		root = freeGlobal;
	}


	var punycode,


	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1


	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'


	regexPunycode = /^xn--/,
	regexNonASCII = /[^ -~]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /\x2E|\u3002|\uFF0E|\uFF61/g, // RFC 3490 separators


	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},


	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,


	key;




	function error(type) {
		throw RangeError(errors[type]);
	}


	function map(array, fn) {
		var length = array.length;
		while (length--) {
			array[length] = fn(array[length]);
		}
		return array;
	}


	function mapDomain(string, fn) {
		return map(string.split(regexSeparators), fn).join('.');
	}


	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}


	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}


	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}


	function digitToBasic(digit, flag) {
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}


	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}


	function decode(input) {
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    length,

		    baseMinusT;


		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}


		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}


	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],

		    inputLength,

		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		input = ucs2decode(input);

		inputLength = input.length;

		n = initialN;
		delta = 0;
		bias = initialBias;

		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;


		if (basicLength) {
			output.push(delimiter);
		}

		while (handledCPCount < inputLength) {

			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}


	function toUnicode(domain) {
		return mapDomain(domain, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}


	function toASCII(domain) {
		return mapDomain(domain, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}




	punycode = {

		'version': '1.2.3',

		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};


	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define(function() {
			return punycode;
		});
	}	else if (freeExports && !freeExports.nodeType) {
		if (freeModule) { // in Node.js or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else { // in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else { // in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));
}).call(this,typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],15:[function(require,module,exports){

'use strict';

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],16:[function(require,module,exports){

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return obj[k].map(function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],17:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":15,"./encode":16}],18:[function(require,module,exports){


module.exports = Duplex;
var inherits = require('inherits');
var setImmediate = require('process/browser.js').nextTick;
var Readable = require('./readable.js');
var Writable = require('./writable.js');

inherits(Duplex, Readable);

Duplex.prototype.write = Writable.prototype.write;
Duplex.prototype.end = Writable.prototype.end;
Duplex.prototype._write = Writable.prototype._write;

function Duplex(options) {
  if (!(this instanceof Duplex))
    return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false)
    this.readable = false;

  if (options && options.writable === false)
    this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false)
    this.allowHalfOpen = false;

  this.once('end', onend);
}

function onend() {
  if (this.allowHalfOpen || this._writableState.ended)
    return;

  var self = this;
  setImmediate(function () {
    self.end();
  });
}

},{"./readable.js":22,"./writable.js":24,"inherits":9,"process/browser.js":20}],19:[function(require,module,exports){

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('./readable.js');
Stream.Writable = require('./writable.js');
Stream.Duplex = require('./duplex.js');
Stream.Transform = require('./transform.js');
Stream.PassThrough = require('./passthrough.js');

Stream.Stream = Stream;




function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  return dest;
};

},{"./duplex.js":18,"./passthrough.js":21,"./readable.js":22,"./transform.js":23,"./writable.js":24,"events":8,"inherits":9}],20:[function(require,module,exports){
module.exports=require(10)
},{}],21:[function(require,module,exports){


module.exports = PassThrough;

var Transform = require('./transform.js');
var inherits = require('inherits');
inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough))
    return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function(chunk, encoding, cb) {
  cb(null, chunk);
};

},{"./transform.js":23,"inherits":9}],22:[function(require,module,exports){
(function (process){// Copyright Joyent, Inc. and other Node contributors.

module.exports = Readable;
Readable.ReadableState = ReadableState;

var EE = require('events').EventEmitter;
var Stream = require('./index.js');
var Buffer = require('buffer').Buffer;
var setImmediate = require('process/browser.js').nextTick;
var StringDecoder;

var inherits = require('inherits');
inherits(Readable, Stream);

function ReadableState(options, stream) {
  options = options || {};

  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  this.highWaterMark = ~~this.highWaterMark;

  this.buffer = [];
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = false;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  this.calledRead = false;

  this.sync = true;

  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;


  this.objectMode = !!options.objectMode;

  this.defaultEncoding = options.defaultEncoding || 'utf8';

  this.ranOut = false;

  this.awaitDrain = 0;

  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder)
      StringDecoder = require('string_decoder').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  if (!(this instanceof Readable))
    return new Readable(options);

  this._readableState = new ReadableState(options, this);

  this.readable = true;

  Stream.call(this);
}

Readable.prototype.push = function(chunk, encoding) {
  var state = this._readableState;

  if (typeof chunk === 'string' && !state.objectMode) {
    encoding = encoding || state.defaultEncoding;
    if (encoding !== state.encoding) {
      chunk = new Buffer(chunk, encoding);
      encoding = '';
    }
  }

  return readableAddChunk(this, state, chunk, encoding, false);
};

Readable.prototype.unshift = function(chunk) {
  var state = this._readableState;
  return readableAddChunk(this, state, chunk, '', true);
};

function readableAddChunk(stream, state, chunk, encoding, addToFront) {
  var er = chunkInvalid(state, chunk);
  if (er) {
    stream.emit('error', er);
  } else if (chunk === null || chunk === undefined) {
    state.reading = false;
    if (!state.ended)
      onEofChunk(stream, state);
  } else if (state.objectMode || chunk && chunk.length > 0) {
    if (state.ended && !addToFront) {
      var e = new Error('stream.push() after EOF');
      stream.emit('error', e);
    } else if (state.endEmitted && addToFront) {
      var e = new Error('stream.unshift() after end event');
      stream.emit('error', e);
    } else {
      if (state.decoder && !addToFront && !encoding)
        chunk = state.decoder.write(chunk);

      state.length += state.objectMode ? 1 : chunk.length;
      if (addToFront) {
        state.buffer.unshift(chunk);
      } else {
        state.reading = false;
        state.buffer.push(chunk);
      }

      if (state.needReadable)
        emitReadable(stream);

      maybeReadMore(stream, state);
    }
  } else if (!addToFront) {
    state.reading = false;
  }

  return needMoreData(state);
}



function needMoreData(state) {
  return !state.ended &&
         (state.needReadable ||
          state.length < state.highWaterMark ||
          state.length === 0);
}

Readable.prototype.setEncoding = function(enc) {
  if (!StringDecoder)
    StringDecoder = require('string_decoder').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
};

var MAX_HWM = 0x800000;
function roundUpToNextPowerOf2(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    n--;
    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
    n++;
  }
  return n;
}

function howMuchToRead(n, state) {
  if (state.length === 0 && state.ended)
    return 0;

  if (state.objectMode)
    return n === 0 ? 0 : 1;

  if (isNaN(n) || n === null) {
    if (state.flowing && state.buffer.length)
      return state.buffer[0].length;
    else
      return state.length;
  }

  if (n <= 0)
    return 0;

  if (n > state.highWaterMark)
    state.highWaterMark = roundUpToNextPowerOf2(n);

  if (n > state.length) {
    if (!state.ended) {
      state.needReadable = true;
      return 0;
    } else
      return state.length;
  }

  return n;
}

Readable.prototype.read = function(n) {
  var state = this._readableState;
  state.calledRead = true;
  var nOrig = n;

  if (typeof n !== 'number' || n > 0)
    state.emittedReadable = false;

  if (n === 0 &&
      state.needReadable &&
      (state.length >= state.highWaterMark || state.ended)) {
    emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  if (n === 0 && state.ended) {
    if (state.length === 0)
      endReadable(this);
    return null;
  }


  var doRead = state.needReadable;

  if (state.length - n <= state.highWaterMark)
    doRead = true;

  if (state.ended || state.reading)
    doRead = false;

  if (doRead) {
    state.reading = true;
    state.sync = true;
    if (state.length === 0)
      state.needReadable = true;
    this._read(state.highWaterMark);
    state.sync = false;
  }

  if (doRead && !state.reading)
    n = howMuchToRead(nOrig, state);

  var ret;
  if (n > 0)
    ret = fromList(n, state);
  else
    ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  }

  state.length -= n;

  if (state.length === 0 && !state.ended)
    state.needReadable = true;

  if (state.ended && !state.endEmitted && state.length === 0)
    endReadable(this);

  return ret;
};

function chunkInvalid(state, chunk) {
  var er = null;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode &&
      !er) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}


function onEofChunk(stream, state) {
  if (state.decoder && !state.ended) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  if (state.length > 0)
    emitReadable(stream);
  else
    endReadable(stream);
}

function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (state.emittedReadable)
    return;

  state.emittedReadable = true;
  if (state.sync)
    setImmediate(function() {
      emitReadable_(stream);
    });
  else
    emitReadable_(stream);
}

function emitReadable_(stream) {
  stream.emit('readable');
}


function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    setImmediate(function() {
      maybeReadMore_(stream, state);
    });
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended &&
         state.length < state.highWaterMark) {
    stream.read(0);
    if (len === state.length)
      break;
    else
      len = state.length;
  }
  state.readingMore = false;
}

Readable.prototype._read = function(n) {
  this.emit('error', new Error('not implemented'));
};

Readable.prototype.pipe = function(dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;

  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
              dest !== process.stdout &&
              dest !== process.stderr;

  var endFn = doEnd ? onend : cleanup;
  if (state.endEmitted)
    setImmediate(endFn);
  else
    src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable) {
    if (readable !== src) return;
    cleanup();
  }

  function onend() {
    dest.end();
  }

  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  function cleanup() {
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', cleanup);

    if (!dest._writableState || dest._writableState.needDrain)
      ondrain();
  }

  var errListeners = EE.listenerCount(dest, 'error');
  function onerror(er) {
    unpipe();
    if (errListeners === 0 && EE.listenerCount(dest, 'error') === 0)
      dest.emit('error', er);
  }
  dest.once('error', onerror);

  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    src.unpipe(dest);
  }

  dest.emit('pipe', src);

  if (!state.flowing) {
    this.on('readable', pipeOnReadable);

    state.flowing = true;
    setImmediate(function() {
      flow(src);
    });
  }

  return dest;
};

function pipeOnDrain(src) {
  return function() {
    var dest = this;
    var state = src._readableState;
    state.awaitDrain--;
    if (state.awaitDrain === 0)
      flow(src);
  };
}

function flow(src) {
  var state = src._readableState;
  var chunk;
  state.awaitDrain = 0;

  function write(dest, i, list) {
    var written = dest.write(chunk);
    if (false === written) {
      state.awaitDrain++;
    }
  }

  while (state.pipesCount && null !== (chunk = src.read())) {

    if (state.pipesCount === 1)
      write(state.pipes, 0, null);
    else
      forEach(state.pipes, write);

    src.emit('data', chunk);

    if (state.awaitDrain > 0)
      return;
  }

  if (state.pipesCount === 0) {
    state.flowing = false;

    if (EE.listenerCount(src, 'data') > 0)
      emitDataEvents(src);
    return;
  }

  state.ranOut = true;
}

function pipeOnReadable() {
  if (this._readableState.ranOut) {
    this._readableState.ranOut = false;
    flow(this);
  }
}


Readable.prototype.unpipe = function(dest) {
  var state = this._readableState;

  if (state.pipesCount === 0)
    return this;

  if (state.pipesCount === 1) {
    if (dest && dest !== state.pipes)
      return this;

    if (!dest)
      dest = state.pipes;

    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;
    if (dest)
      dest.emit('unpipe', this);
    return this;
  }


  if (!dest) {
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    this.removeListener('readable', pipeOnReadable);
    state.flowing = false;

    for (var i = 0; i < len; i++)
      dests[i].emit('unpipe', this);
    return this;
  }

  var i = indexOf(state.pipes, dest);
  if (i === -1)
    return this;

  state.pipes.splice(i, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1)
    state.pipes = state.pipes[0];

  dest.emit('unpipe', this);

  return this;
};

Readable.prototype.on = function(ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data' && !this._readableState.flowing)
    emitDataEvents(this);

  if (ev === 'readable' && this.readable) {
    var state = this._readableState;
    if (!state.readableListening) {
      state.readableListening = true;
      state.emittedReadable = false;
      state.needReadable = true;
      if (!state.reading) {
        this.read(0);
      } else if (state.length) {
        emitReadable(this, state);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

Readable.prototype.resume = function() {
  emitDataEvents(this);
  this.read(0);
  this.emit('resume');
};

Readable.prototype.pause = function() {
  emitDataEvents(this, true);
  this.emit('pause');
};

function emitDataEvents(stream, startPaused) {
  var state = stream._readableState;

  if (state.flowing) {
    throw new Error('Cannot switch to old mode now.');
  }

  var paused = startPaused || false;
  var readable = false;

  stream.readable = true;
  stream.pipe = Stream.prototype.pipe;
  stream.on = stream.addListener = Stream.prototype.on;

  stream.on('readable', function() {
    readable = true;

    var c;
    while (!paused && (null !== (c = stream.read())))
      stream.emit('data', c);

    if (c === null) {
      readable = false;
      stream._readableState.needReadable = true;
    }
  });

  stream.pause = function() {
    paused = true;
    this.emit('pause');
  };

  stream.resume = function() {
    paused = false;
    if (readable)
      setImmediate(function() {
        stream.emit('readable');
      });
    else
      this.read(0);
    this.emit('resume');
  };

  stream.emit('readable');
}

Readable.prototype.wrap = function(stream) {
  var state = this._readableState;
  var paused = false;

  var self = this;
  stream.on('end', function() {
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length)
        self.push(chunk);
    }

    self.push(null);
  });

  stream.on('data', function(chunk) {
    if (state.decoder)
      chunk = state.decoder.write(chunk);
    if (!chunk || !state.objectMode && !chunk.length)
      return;

    var ret = self.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  for (var i in stream) {
    if (typeof stream[i] === 'function' &&
        typeof this[i] === 'undefined') {
      this[i] = function(method) { return function() {
        return stream[method].apply(stream, arguments);
      }}(i);
    }
  }

  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
  forEach(events, function(ev) {
    stream.on(ev, function (x) {
      return self.emit.apply(self, ev, x);
    });
  });

  self._read = function(n) {
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return self;
};



Readable._fromList = fromList;

function fromList(n, state) {
  var list = state.buffer;
  var length = state.length;
  var stringMode = !!state.decoder;
  var objectMode = !!state.objectMode;
  var ret;

  if (list.length === 0)
    return null;

  if (length === 0)
    ret = null;
  else if (objectMode)
    ret = list.shift();
  else if (!n || n >= length) {
    if (stringMode)
      ret = list.join('');
    else
      ret = Buffer.concat(list, length);
    list.length = 0;
  } else {
    if (n < list[0].length) {
      var buf = list[0];
      ret = buf.slice(0, n);
      list[0] = buf.slice(n);
    } else if (n === list[0].length) {
      ret = list.shift();
    } else {
      if (stringMode)
        ret = '';
      else
        ret = new Buffer(n);

      var c = 0;
      for (var i = 0, l = list.length; i < l && c < n; i++) {
        var buf = list[0];
        var cpy = Math.min(n - c, buf.length);

        if (stringMode)
          ret += buf.slice(0, cpy);
        else
          buf.copy(ret, c, 0, cpy);

        if (cpy < buf.length)
          list[0] = buf.slice(cpy);
        else
          list.shift();

        c += cpy;
      }
    }
  }

  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  if (state.length > 0)
    throw new Error('endReadable called on non-empty stream');

  if (!state.endEmitted && state.calledRead) {
    state.ended = true;
    setImmediate(function() {
      if (!state.endEmitted && state.length === 0) {
        state.endEmitted = true;
        stream.readable = false;
        stream.emit('end');
      }
    });
  }
}

function forEach (xs, f) {
  for (var i = 0, l = xs.length; i < l; i++) {
    f(xs[i], i);
  }
}

function indexOf (xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
}).call(this,require("C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js"))
},{"./index.js":19,"C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js":10,"buffer":11,"events":8,"inherits":9,"process/browser.js":20,"string_decoder":25}],23:[function(require,module,exports){


module.exports = Transform;

var Duplex = require('./duplex.js');
var inherits = require('inherits');
inherits(Transform, Duplex);


function TransformState(options, stream) {
  this.afterTransform = function(er, data) {
    return afterTransform(stream, er, data);
  };

  this.needTransform = false;
  this.transforming = false;
  this.writecb = null;
  this.writechunk = null;
}

function afterTransform(stream, er, data) {
  var ts = stream._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb)
    return stream.emit('error', new Error('no writecb in Transform class'));

  ts.writechunk = null;
  ts.writecb = null;

  if (data !== null && data !== undefined)
    stream.push(data);

  if (cb)
    cb(er);

  var rs = stream._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    stream._read(rs.highWaterMark);
  }
}


function Transform(options) {
  if (!(this instanceof Transform))
    return new Transform(options);

  Duplex.call(this, options);

  var ts = this._transformState = new TransformState(options, this);

  var stream = this;

  this._readableState.needReadable = true;

  this._readableState.sync = false;

  this.once('finish', function() {
    if ('function' === typeof this._flush)
      this._flush(function(er) {
        done(stream, er);
      });
    else
      done(stream);
  });
}

Transform.prototype.push = function(chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

Transform.prototype._transform = function(chunk, encoding, cb) {
  throw new Error('not implemented');
};

Transform.prototype._write = function(chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform ||
        rs.needReadable ||
        rs.length < rs.highWaterMark)
      this._read(rs.highWaterMark);
  }
};

Transform.prototype._read = function(n) {
  var ts = this._transformState;

  if (ts.writechunk && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    ts.needTransform = true;
  }
};


function done(stream, er) {
  if (er)
    return stream.emit('error', er);

  var ws = stream._writableState;
  var rs = stream._readableState;
  var ts = stream._transformState;

  if (ws.length)
    throw new Error('calling transform done when ws.length != 0');

  if (ts.transforming)
    throw new Error('calling transform done when still transforming');

  return stream.push(null);
}

},{"./duplex.js":18,"inherits":9}],24:[function(require,module,exports){


module.exports = Writable;
Writable.WritableState = WritableState;

var isUint8Array = typeof Uint8Array !== 'undefined'
  ? function (x) { return x instanceof Uint8Array }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'Uint8Array'
  }
;
var isArrayBuffer = typeof ArrayBuffer !== 'undefined'
  ? function (x) { return x instanceof ArrayBuffer }
  : function (x) {
    return x && x.constructor && x.constructor.name === 'ArrayBuffer'
  }
;

var inherits = require('inherits');
var Stream = require('./index.js');
var setImmediate = require('process/browser.js').nextTick;
var Buffer = require('buffer').Buffer;

inherits(Writable, Stream);

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
}

function WritableState(options, stream) {
  options = options || {};

  var hwm = options.highWaterMark;
  this.highWaterMark = (hwm || hwm === 0) ? hwm : 16 * 1024;

  this.objectMode = !!options.objectMode;

  this.highWaterMark = ~~this.highWaterMark;

  this.needDrain = false;
  this.ending = false;
  this.ended = false;
  this.finished = false;

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  this.defaultEncoding = options.defaultEncoding || 'utf8';

  this.length = 0;

  this.writing = false;

  this.sync = true;

  this.bufferProcessing = false;

  this.onwrite = function(er) {
    onwrite(stream, er);
  };

  this.writecb = null;

  this.writelen = 0;

  this.buffer = [];
}

function Writable(options) {
  if (!(this instanceof Writable) && !(this instanceof Stream.Duplex))
    return new Writable(options);

  this._writableState = new WritableState(options, this);

  this.writable = true;

  Stream.call(this);
}

Writable.prototype.pipe = function() {
  this.emit('error', new Error('Cannot pipe. Not readable.'));
};


function writeAfterEnd(stream, state, cb) {
  var er = new Error('write after end');
  stream.emit('error', er);
  setImmediate(function() {
    cb(er);
  });
}

function validChunk(stream, state, chunk, cb) {
  var valid = true;
  if (!Buffer.isBuffer(chunk) &&
      'string' !== typeof chunk &&
      chunk !== null &&
      chunk !== undefined &&
      !state.objectMode) {
    var er = new TypeError('Invalid non-string/buffer chunk');
    stream.emit('error', er);
    setImmediate(function() {
      cb(er);
    });
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function(chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (!Buffer.isBuffer(chunk) && isUint8Array(chunk))
    chunk = new Buffer(chunk);
  if (isArrayBuffer(chunk) && typeof Uint8Array !== 'undefined')
    chunk = new Buffer(new Uint8Array(chunk));
  
  if (Buffer.isBuffer(chunk))
    encoding = 'buffer';
  else if (!encoding)
    encoding = state.defaultEncoding;

  if (typeof cb !== 'function')
    cb = function() {};

  if (state.ended)
    writeAfterEnd(this, state, cb);
  else if (validChunk(this, state, chunk, cb))
    ret = writeOrBuffer(this, state, chunk, encoding, cb);

  return ret;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode &&
      state.decodeStrings !== false &&
      typeof chunk === 'string') {
    chunk = new Buffer(chunk, encoding);
  }
  return chunk;
}

function writeOrBuffer(stream, state, chunk, encoding, cb) {
  chunk = decodeChunk(state, chunk, encoding);
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  state.needDrain = !ret;

  if (state.writing)
    state.buffer.push(new WriteReq(chunk, encoding, cb));
  else
    doWrite(stream, state, len, chunk, encoding, cb);

  return ret;
}

function doWrite(stream, state, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  if (sync)
    setImmediate(function() {
      cb(er);
    });
  else
    cb(er);

  stream.emit('error', er);
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er)
    onwriteError(stream, state, sync, er, cb);
  else {
    var finished = needFinish(stream, state);

    if (!finished && !state.bufferProcessing && state.buffer.length)
      clearBuffer(stream, state);

    if (sync) {
      setImmediate(function() {
        afterWrite(stream, state, finished, cb);
      });
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished)
    onwriteDrain(stream, state);
  cb();
  if (finished)
    finishMaybe(stream, state);
}

function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}


function clearBuffer(stream, state) {
  state.bufferProcessing = true;

  for (var c = 0; c < state.buffer.length; c++) {
    var entry = state.buffer[c];
    var chunk = entry.chunk;
    var encoding = entry.encoding;
    var cb = entry.callback;
    var len = state.objectMode ? 1 : chunk.length;

    doWrite(stream, state, len, chunk, encoding, cb);

    if (state.writing) {
      c++;
      break;
    }
  }

  state.bufferProcessing = false;
  if (c < state.buffer.length)
    state.buffer = state.buffer.slice(c);
  else
    state.buffer.length = 0;
}

Writable.prototype._write = function(chunk, encoding, cb) {
  cb(new Error('not implemented'));
};

Writable.prototype.end = function(chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (typeof chunk !== 'undefined' && chunk !== null)
    this.write(chunk, encoding);

  if (!state.ending && !state.finished)
    endWritable(this, state, cb);
};


function needFinish(stream, state) {
  return (state.ending &&
          state.length === 0 &&
          !state.finished &&
          !state.writing);
}

function finishMaybe(stream, state) {
  var need = needFinish(stream, state);
  if (need) {
    state.finished = true;
    stream.emit('finish');
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished)
      setImmediate(cb);
    else
      stream.once('finish', cb);
  }
  state.ended = true;
}

},{"./index.js":19,"buffer":11,"inherits":9,"process/browser.js":20}],25:[function(require,module,exports){

var Buffer = require('buffer').Buffer;

function assertEncoding(encoding) {
  if (encoding && !Buffer.isEncoding(encoding)) {
    throw new Error('Unknown encoding: ' + encoding);
  }
}

var StringDecoder = exports.StringDecoder = function(encoding) {
  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
  assertEncoding(encoding);
  switch (this.encoding) {
    case 'utf8':
      this.surrogateSize = 3;
      break;
    case 'ucs2':
    case 'utf16le':
      this.surrogateSize = 2;
      this.detectIncompleteChar = utf16DetectIncompleteChar;
      break;
    case 'base64':
      this.surrogateSize = 3;
      this.detectIncompleteChar = base64DetectIncompleteChar;
      break;
    default:
      this.write = passThroughWrite;
      return;
  }

  this.charBuffer = new Buffer(6);
  this.charReceived = 0;
  this.charLength = 0;
};


StringDecoder.prototype.write = function(buffer) {
  var charStr = '';
  var offset = 0;

  while (this.charLength) {
    var i = (buffer.length >= this.charLength - this.charReceived) ?
                this.charLength - this.charReceived :
                buffer.length;

    buffer.copy(this.charBuffer, this.charReceived, offset, i);
    this.charReceived += (i - offset);
    offset = i;

    if (this.charReceived < this.charLength) {
      return '';
    }

    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

    var charCode = charStr.charCodeAt(charStr.length - 1);
    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
      this.charLength += this.surrogateSize;
      charStr = '';
      continue;
    }
    this.charReceived = this.charLength = 0;

    if (i == buffer.length) return charStr;

    buffer = buffer.slice(i, buffer.length);
    break;
  }

  var lenIncomplete = this.detectIncompleteChar(buffer);

  var end = buffer.length;
  if (this.charLength) {
    buffer.copy(this.charBuffer, 0, buffer.length - lenIncomplete, end);
    this.charReceived = lenIncomplete;
    end -= lenIncomplete;
  }

  charStr += buffer.toString(this.encoding, 0, end);

  var end = charStr.length - 1;
  var charCode = charStr.charCodeAt(end);
  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
    var size = this.surrogateSize;
    this.charLength += size;
    this.charReceived += size;
    this.charBuffer.copy(this.charBuffer, size, 0, size);
    this.charBuffer.write(charStr.charAt(charStr.length - 1), this.encoding);
    return charStr.substring(0, end);
  }

  return charStr;
};

StringDecoder.prototype.detectIncompleteChar = function(buffer) {
  var i = (buffer.length >= 3) ? 3 : buffer.length;

  for (; i > 0; i--) {
    var c = buffer[buffer.length - i];


    if (i == 1 && c >> 5 == 0x06) {
      this.charLength = 2;
      break;
    }

    if (i <= 2 && c >> 4 == 0x0E) {
      this.charLength = 3;
      break;
    }

    if (i <= 3 && c >> 3 == 0x1E) {
      this.charLength = 4;
      break;
    }
  }

  return i;
};

StringDecoder.prototype.end = function(buffer) {
  var res = '';
  if (buffer && buffer.length)
    res = this.write(buffer);

  if (this.charReceived) {
    var cr = this.charReceived;
    var buf = this.charBuffer;
    var enc = this.encoding;
    res += buf.slice(0, cr).toString(enc);
  }

  return res;
};

function passThroughWrite(buffer) {
  return buffer.toString(this.encoding);
}

function utf16DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 2;
  this.charLength = incomplete ? 2 : 0;
  return incomplete;
}

function base64DetectIncompleteChar(buffer) {
  var incomplete = this.charReceived = buffer.length % 3;
  this.charLength = incomplete ? 3 : 0;
  return incomplete;
}

},{"buffer":11}],26:[function(require,module,exports){

(function () {
  "use strict";


var punycode = require('punycode');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    unwise = ['{', '}', '|', '\\', '^', '~', '`'].concat(delims),

    autoEscape = ['\''].concat(delims),
    nonHostChars = ['%', '/', '?', ';', '#']
      .concat(unwise).concat(autoEscape),
    nonAuthChars = ['/', '@', '?', '#'].concat(delims),
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[a-zA-Z0-9][a-z0-9A-Z_-]{0,62}$/,
    hostnamePartStart = /^([a-zA-Z0-9][a-z0-9A-Z_-]{0,62})(.*)$/,
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    pathedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && typeof(url) === 'object' && url.href) return url;

  if (typeof url !== 'string') {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  var out = {},
      rest = url;

  rest = rest.trim();

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    out.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      out.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    var atSign = rest.indexOf('@');
    if (atSign !== -1) {
      var auth = rest.slice(0, atSign);

      var hasAuth = true;
      for (var i = 0, l = nonAuthChars.length; i < l; i++) {
        if (auth.indexOf(nonAuthChars[i]) !== -1) {
          hasAuth = false;
          break;
        }
      }

      if (hasAuth) {
        out.auth = decodeURIComponent(auth);
        rest = rest.substr(atSign + 1);
      }
    }

    var firstNonHost = -1;
    for (var i = 0, l = nonHostChars.length; i < l; i++) {
      var index = rest.indexOf(nonHostChars[i]);
      if (index !== -1 &&
          (firstNonHost < 0 || index < firstNonHost)) firstNonHost = index;
    }

    if (firstNonHost !== -1) {
      out.host = rest.substr(0, firstNonHost);
      rest = rest.substr(firstNonHost);
    } else {
      out.host = rest;
      rest = '';
    }

    var p = parseHost(out.host);
    var keys = Object.keys(p);
    for (var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      out[key] = p[key];
    }

    out.hostname = out.hostname || '';

    var ipv6Hostname = out.hostname[0] === '[' &&
        out.hostname[out.hostname.length - 1] === ']';

    if (out.hostname.length > hostnameMaxLen) {
      out.hostname = '';
    } else if (!ipv6Hostname) {
      var hostparts = out.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            out.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    out.hostname = out.hostname.toLowerCase();

    if (!ipv6Hostname) {
      var domainArray = out.hostname.split('.');
      var newOut = [];
      for (var i = 0; i < domainArray.length; ++i) {
        var s = domainArray[i];
        newOut.push(s.match(/[^A-Za-z0-9_-]/) ?
            'xn--' + punycode.encode(s) : s);
      }
      out.hostname = newOut.join('.');
    }

    out.host = (out.hostname || '') +
        ((out.port) ? ':' + out.port : '');
    out.href += out.host;

    if (ipv6Hostname) {
      out.hostname = out.hostname.substr(1, out.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  if (!unsafeProtocol[lowerProto]) {

    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  var hash = rest.indexOf('#');
  if (hash !== -1) {
    out.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    out.search = rest.substr(qm);
    out.query = rest.substr(qm + 1);
    if (parseQueryString) {
      out.query = querystring.parse(out.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    out.search = '';
    out.query = {};
  }
  if (rest) out.pathname = rest;
  if (slashedProtocol[proto] &&
      out.hostname && !out.pathname) {
    out.pathname = '/';
  }

  if (out.pathname || out.search) {
    out.path = (out.pathname ? out.pathname : '') +
               (out.search ? out.search : '');
  }

  out.href = urlFormat(out);
  return out;
}

function urlFormat(obj) {
  if (typeof(obj) === 'string') obj = urlParse(obj);

  var auth = obj.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = obj.protocol || '',
      pathname = obj.pathname || '',
      hash = obj.hash || '',
      host = false,
      query = '';

  if (obj.host !== undefined) {
    host = auth + obj.host;
  } else if (obj.hostname !== undefined) {
    host = auth + (obj.hostname.indexOf(':') === -1 ?
        obj.hostname :
        '[' + obj.hostname + ']');
    if (obj.port) {
      host += ':' + obj.port;
    }
  }

  if (obj.query && typeof obj.query === 'object' &&
      Object.keys(obj.query).length) {
    query = querystring.stringify(obj.query);
  }

  var search = obj.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  if (obj.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  return protocol + host + pathname + search + hash;
}

function urlResolve(source, relative) {
  return urlFormat(urlResolveObject(source, relative));
}

function urlResolveObject(source, relative) {
  if (!source) return relative;

  source = urlParse(urlFormat(source), false, true);
  relative = urlParse(urlFormat(relative), false, true);

  source.hash = relative.hash;

  if (relative.href === '') {
    source.href = urlFormat(source);
    return source;
  }

  if (relative.slashes && !relative.protocol) {
    relative.protocol = source.protocol;
    if (slashedProtocol[relative.protocol] &&
        relative.hostname && !relative.pathname) {
      relative.path = relative.pathname = '/';
    }
    relative.href = urlFormat(relative);
    return relative;
  }

  if (relative.protocol && relative.protocol !== source.protocol) {
    if (!slashedProtocol[relative.protocol]) {
      relative.href = urlFormat(relative);
      return relative;
    }
    source.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      relative.pathname = relPath.join('/');
    }
    source.pathname = relative.pathname;
    source.search = relative.search;
    source.query = relative.query;
    source.host = relative.host || '';
    source.auth = relative.auth;
    source.hostname = relative.hostname || relative.host;
    source.port = relative.port;
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.slashes = source.slashes || relative.slashes;
    source.href = urlFormat(source);
    return source;
  }

  var isSourceAbs = (source.pathname && source.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host !== undefined ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (source.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = source.pathname && source.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = source.protocol &&
          !slashedProtocol[source.protocol];

  if (psychotic) {

    delete source.hostname;
    delete source.port;
    if (source.host) {
      if (srcPath[0] === '') srcPath[0] = source.host;
      else srcPath.unshift(source.host);
    }
    delete source.host;
    if (relative.protocol) {
      delete relative.hostname;
      delete relative.port;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      delete relative.host;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    source.host = (relative.host || relative.host === '') ?
                      relative.host : source.host;
    source.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : source.hostname;
    source.search = relative.search;
    source.query = relative.query;
    srcPath = relPath;
  } else if (relPath.length) {
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    source.search = relative.search;
    source.query = relative.query;
  } else if ('search' in relative) {
    if (psychotic) {
      source.hostname = source.host = srcPath.shift();
      var authInHost = source.host && source.host.indexOf('@') > 0 ?
                       source.host.split('@') : false;
      if (authInHost) {
        source.auth = authInHost.shift();
        source.host = source.hostname = authInHost.shift();
      }
    }
    source.search = relative.search;
    source.query = relative.query;
    if (source.pathname !== undefined || source.search !== undefined) {
      source.path = (source.pathname ? source.pathname : '') +
                    (source.search ? source.search : '');
    }
    source.href = urlFormat(source);
    return source;
  }
  if (!srcPath.length) {
    delete source.pathname;
    if (!source.search) {
      source.path = '/' + source.search;
    } else {
      delete source.path;
    }
    source.href = urlFormat(source);
    return source;
  }
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (source.host || relative.host) && (last === '.' || last === '..') ||
      last === '');

  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last == '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  if (psychotic) {
    source.hostname = source.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    var authInHost = source.host && source.host.indexOf('@') > 0 ?
                     source.host.split('@') : false;
    if (authInHost) {
      source.auth = authInHost.shift();
      source.host = source.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (source.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  source.pathname = srcPath.join('/');
  if (source.pathname !== undefined || source.search !== undefined) {
    source.path = (source.pathname ? source.pathname : '') +
                  (source.search ? source.search : '');
  }
  source.auth = relative.auth || source.auth;
  source.slashes = source.slashes || relative.slashes;
  source.href = urlFormat(source);
  return source;
}

function parseHost(host) {
  var out = {};
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      out.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) out.hostname = host;
  return out;
}

}());

},{"punycode":14,"querystring":17}],27:[function(require,module,exports){
module.exports = function isBuffer(arg) {
  return arg && typeof arg === 'object'
    && typeof arg.copy === 'function'
    && typeof arg.fill === 'function'
    && typeof arg.readUInt8 === 'function';
}
},{}],28:[function(require,module,exports){
(function (process,global){// Copyright Joyent, Inc. and other Node contributors.

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


exports.deprecate = function(fn, msg) {
  if (isUndefined(global.process)) {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  if (process.noDeprecation === true) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};




function inspect(obj, opts) {
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    ctx.showHidden = opts;
  } else if (opts) {
    exports._extend(ctx, opts);
  }
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      value.inspect !== exports.inspect &&
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var numLinesEst = 0;
  var length = output.reduce(function(prev, cur) {
    numLinesEst++;
    if (cur.indexOf('\n') >= 0) numLinesEst++;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = require('./support/isBuffer');

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};



exports.inherits = require('inherits');

exports._extend = function(origin, add) {
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}
}).call(this,require("C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js"),typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./support/isBuffer":27,"C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js":10,"inherits":9}],29:[function(require,module,exports){
var AWS = require('../core');



function Shape(rules, options) {
  if (!rules) {
    this.rules = { type: 'structure', members: {} };
    return;
  }

  this.options = options;
  this.rules = {};
  this.set_type(rules.type);
  AWS.util.each.call(this, rules, function (key, value) {
    if (key !== 'type') this['set_' + key](value);
  });

  if (this.rules.type === 'blob') {
    if (this.rules.payload || this.rules.streaming) {
      this.rules.type = 'binary';
    } else {
      this.rules.type = 'base64';
    }
  }
}

function InputShape(rules, options) {
  Shape.call(this, rules, options);
}

function OutputShape(rules, options) {
  Shape.call(this, rules, options);
}

Shape.prototype = {
  shapeClass: function() {
    if (this instanceof InputShape) return InputShape;
    if (this instanceof OutputShape) return OutputShape;
  },

  xmlname: function() {
    if (this.rules.flattened) {
      return this._xmlname || (this.rules.members || {}).name;
    } else {
      return this._xmlname;
    }
  },

  set_type: function(name) {
    var types = {
      structure: 'structure',
      list: 'list',
      map: 'map',
      boolean: 'boolean',
      timestamp: 'timestamp',
      character: 'string',
      double: 'float',
      float: 'float',
      integer: 'integer',
      long: 'integer',
      short: 'integer',
      string: 'string',
      blob: 'blob',
      biginteger: 'integer',
      bigdecimal: 'float'
    };
    if (name === 'string') { // omit string to reduce size

    } else if (types[name]) {
      this.rules.type = types[name];
    } else {
      throw new Error('unhandled shape type ' + name);
    }
  },

  set_members: function(members) {
    var type = this.rules.type;
    var ShapeClass = this.shapeClass();
    if (type === 'structure') {
      this.rules.members = {};
      AWS.util.each.call(this, members, function(memberName, memberRules) {
        var shape = new ShapeClass(memberRules, this.options);
        if (this.swapNames(shape)) {
          shape.rules.name = memberName;
          memberName = shape.xmlname();
        }
        this.rules.members[memberName] = shape.rules;
      });
    } else if (type === 'list') {
      this.rules.members = new ShapeClass(members, this.options).rules;
    } else if (type === 'map') {
      this.rules.members = new ShapeClass(members, this.options).rules;
    } else if (type === 'blob') {
      this.rules.members = {};
    } else {
      throw new Error('unhandled complex shape `' + type + '\'');
    }
  },

  set_keys: function(rules) {
    var ShapeClass = this.shapeClass();
    this.rules.keys = new ShapeClass(rules, this.options).rules;
  },

  set_timestamp_format: function(format) {
    this.rules.format = format;
  },

  set_xmlname: function(name) {
    this._xmlname = name;
    this.rules.name = name;
  },

  set_location: function (location) {
    this.rules.location = (location === 'http_status' ? 'status' : location);
  },

  set_location_name: function(header_name) {
    this.rules.name = header_name;
  },

  set_payload: function(state) {
    if (state) this.rules.payload = true;
  },

  set_flattened: function(state) {
    if (state) this.rules.flattened = true;
  },

  set_streaming: function(state) {
    if (state) this.rules.streaming = true;
  },

  set_wrapper: function(state) {
    if (state) this.rules.wrapper = true;
  },

  set_xmlattribute: function(state) {
    if (state) this.rules.attribute = true;
  },

  set_xmlnamespace: function(ns) {
    this.rules.xmlns = ns;
  },

  set_documentation: function(docs) {
    if (this.options.documentation) this.rules.documentation = docs;
  },

  set_enum: function(values) {
    if (this.options.documentation) this.rules['enum'] = values;
  },

  set_shape_name: function() {},
  set_box: function() {},
  set_sensitive: function() {}
};

InputShape.prototype = AWS.util.merge(Shape.prototype, {
  swapNames: function() { return false; },

  set_required: function() { this.rules.required = true; },
  set_member_order: function(order) { this.rules.order = order; },

  set_min_length: function(min) {
    if (this.options.documentation) this.rules.min_length = min;
  },

  set_max_length: function(max) {
    if (this.options.documentation) this.rules.max_length = max;
  },

  set_pattern: function(pattern) {
    if (this.options.documentation) this.rules.pattern = pattern;
  }
});

OutputShape.prototype = AWS.util.merge(Shape.prototype, {
  swapNames: function(shape) {
    if (this.options.documentation) return false;
    return shape.xmlname() && ['query', 'rest-xml'].indexOf(this.options.type) >= 0;
  },

  set_required: function() {},
  set_member_order: function() {},
  set_min_length: function() {},
  set_max_length: function() {},
  set_pattern: function() {}
});

function Operation(rules, options) {
  var origRules = rules;

  function normalizeInputs() {
    if (options.type.indexOf('rest') < 0) return;

    var xml = options.type.indexOf('xml') >= 0;
    var payload = false;
    var wrapper = false;

    var hasPayload = false;
    AWS.util.each(rules.input.members, function (name, rule) {
      if (rule.payload) {
        hasPayload = true;
        payload = name;
        delete rule.payload;
        return AWS.util.abort;
      }
    });

    if (!hasPayload) {
      var list = [];
      AWS.util.each(rules.input.members, function (name, rule) {
        if (!rule.location) { list.push(name); }
      });

      if (list.length > 0) {
        payload = list;
        if (xml) wrapper = origRules.input.shape_name;
      }
    }

    if (wrapper) rules.input = AWS.util.merge({wrapper: wrapper}, rules.input);
    if (payload) rules.input = AWS.util.merge({payload: payload}, rules.input);
  }

  function normalizeOutputs() {
    var moveUp = null;

    AWS.util.each(rules.output.members, function(memberName, rule) {
      if (rule.payload && rule.type === 'structure') {
        delete rule.payload;
        moveUp = memberName;
      }
      else if (rule.payload || rule.streaming) {
        delete rule.payload;
        rules.output.payload = memberName;
      }
    });

    if (moveUp) {
      var rule = rules.output.members[moveUp];
      delete rules.output.members[moveUp];
      AWS.util.update(rules.output.members, rule.members);
    }
  }

  rules = AWS.util.copy(rules);

  rules.input = new InputShape(rules.input, options).rules;
  rules.output = new OutputShape(rules.output, options).rules;
  rules.input.members = rules.input.members || {};
  rules.output.members = rules.output.members || {};

  normalizeInputs();
  normalizeOutputs();

  if (rules.http) delete rules.http.response_code;
  if (options.documentation) {
    rules.errors = rules.errors.map(function(e) { return e.shape_name; });
  } else {
    delete rules.errors;
    delete rules.documentation;
    delete rules.documentation_url;
    delete rules.response_code;
  }

  return rules;
}

function Translator(api, options) {
  function inflect(key) {
    return key.replace(/_(\w)/g, function (_, m) { return m.toUpperCase(); });
  }

  function setTranslatedKeys() {
    var list = Object.keys(api);
    list.push('timestamp_format');
    list.sort().forEach(function (key) { translate[inflect(key)] = api[key]; });
    translate.timestampFormat = translate.timestampFormat || 'iso8601';
    if (translate.jsonVersion) translate.jsonVersion = translate.jsonVersion.toString();
    if (translate.jsonVersion === '1') translate.jsonVersion = '1.0';
    if (!options.documentation) delete translate.documentation;
    if (!translate.resultWrapped) delete translate.resultWrapped;
    if (!api.type.match(/xml/)) delete translate.xmlnamespace;
    delete translate.operations;
    delete translate.pagination;
    delete translate.waiters;
    delete translate.type;
  }

  function setOperations() {
    translate.operations = {};
    AWS.util.each(api.operations, function (key, value) {
      var methodName = key[0].toLowerCase() + key.substr(1);
      methodName = methodName.replace(/\d{4}_\d{2}_\d{2}$/, '');
      var operation = new Operation(value, options);
      translate.operations[methodName] = operation;
    });
  }

  function setPagination() {
    if (api.pagination) {
      translate.pagination = {};
      AWS.util.each(api.pagination, function (key, value) {
        var object = {};
        AWS.util.each(value, function (k2, v2) { object[inflect(k2)] = v2; });
        translate.pagination[key[0].toLowerCase() + key.substr(1)] = object;
      });
    }
  }

  if (typeof api === 'string' || AWS.util.Buffer.isBuffer(api)) {
    api = JSON.parse(api);
  }

  options = options || {};
  options.type = api.type;

  var translate = {};
  translate.format = api.type;

  setTranslatedKeys();
  setOperations();
  setPagination();

  return translate;
}

AWS.API = { Translator: Translator };

module.exports = Translator;

},{"../core":32}],30:[function(require,module,exports){
window.AWS = module.exports = require('./core');
require('./http/xhr');
require('./services');

},{"./core":32,"./http/xhr":40,"./services":51}],31:[function(require,module,exports){
var AWS = require('./core');
require('./credentials');
require('./credentials/credential_provider_chain');


AWS.Config = AWS.util.inherit({


  constructor: function Config(options) {
    if (options === undefined) options = {};
    options = this.extractCredentials(options);

    AWS.util.each.call(this, this.keys, function (key, value) {
      this.set(key, options[key], value);
    });
  },


  update: function update(options, allowUnknownKeys) {
    allowUnknownKeys = allowUnknownKeys || false;
    options = this.extractCredentials(options);
    AWS.util.each.call(this, options, function (key, value) {
      if (allowUnknownKeys || this.keys.hasOwnProperty(key)) this[key] = value;
    });
  },


  getCredentials: function getCredentials(callback) {
    var self = this;

    function finish(err) {
      callback(err, err ? null : self.credentials);
    }

    function credError(msg, err) {
      return new AWS.util.error(err || new Error(), {
        code: 'CredentialsError', message: msg
      });
    }

    function getAsyncCredentials() {
      self.credentials.get(function(err) {
        if (err) {
          var msg = 'Could not load credentials from ' +
            self.credentials.constructor.name;
          err = credError(msg, err);
        }
        finish(err);
      });
    }

    function getStaticCredentials() {
      var err = null;
      if (!self.credentials.accessKeyId || !self.credentials.secretAccessKey) {
        err = credError('Missing credentials');
      }
      finish(err);
    }

    if (self.credentials) {
      if (typeof self.credentials.get === 'function') {
        getAsyncCredentials();
      } else { // static credentials
        getStaticCredentials();
      }
    } else if (self.credentialProvider) {
      self.credentialProvider.resolve(function(err, creds) {
        if (err) {
          err = credError('Could not load credentials from any providers', err);
        }
        self.credentials = creds;
        finish(err);
      });
    } else {
      finish(credError('No credentials to load'));
    }
  },


  loadFromPath: function loadFromPath(path) {
    this.clear();

    var options = JSON.parse(AWS.util.readFileSync(path));
    var fileSystemCreds = new AWS.FileSystemCredentials(path);
    var chain = new AWS.CredentialProviderChain();
    chain.providers.unshift(fileSystemCreds);
    chain.resolve(function (err, creds) {
      if (err) throw err;
      else options.credentials = creds;
    });

    this.constructor(options);

    return this;
  },


  clear: function clear() {

    AWS.util.each.call(this, this.keys, function (key) {
      delete this[key];
    });

    this.set('credentials', undefined);
    this.set('credentialProvider', undefined);
  },


  set: function set(property, value, defaultValue) {
    if (value === undefined) {
      if (defaultValue === undefined) {
        defaultValue = this.keys[property];
      }
      if (typeof defaultValue === 'function') {
        this[property] = defaultValue.call(this);
      } else {
        this[property] = defaultValue;
      }
    } else {
      this[property] = value;
    }
  },


  keys: {
    credentials: null,
    credentialProvider: null,
    region: null,
    logger: null,
    apiVersions: {},
    apiVersion: null,
    endpoint: undefined,
    httpOptions: {},
    maxRetries: undefined,
    maxRedirects: 10,
    paramValidation: true,
    sslEnabled: true,
    s3ForcePathStyle: false,
    computeChecksums: true,
    dynamoDbCrc32: true
  },


  extractCredentials: function extractCredentials(options) {
    if (options.accessKeyId && options.secretAccessKey) {
      options = AWS.util.copy(options);
      options.credentials = new AWS.Credentials(options);
    }
    return options;
  }
});


AWS.config = new AWS.Config();

},{"./core":32,"./credentials":33,"./credentials/credential_provider_chain":34}],32:[function(require,module,exports){

var AWS = {};
module.exports = AWS;
require('./util');

AWS.util.update(AWS, {


  VERSION: '2.0.0-rc9',


  ServiceInterface: {},


  Signers: {},


  XML: {}

});

require('./service');

require('./credentials');
require('./credentials/credential_provider_chain');
require('./credentials/temporary_credentials');
require('./credentials/web_identity_credentials');
require('./credentials/saml_credentials');

require('./config');
require('./http');
require('./sequential_executor');
require('./event_listeners');
require('./request');
require('./signers/request_signer');
require('./param_validator');


AWS.events = new AWS.SequentialExecutor();

if (typeof window !== 'undefined') window.AWS = AWS;

},{"./config":31,"./credentials":33,"./credentials/credential_provider_chain":34,"./credentials/saml_credentials":35,"./credentials/temporary_credentials":36,"./credentials/web_identity_credentials":37,"./event_listeners":38,"./http":39,"./param_validator":42,"./request":43,"./sequential_executor":44,"./service":45,"./signers/request_signer":85,"./util":91}],33:[function(require,module,exports){
var AWS = require('./core');


AWS.Credentials = AWS.util.inherit({

  constructor: function Credentials() {
    AWS.util.hideProperties(this, ['secretAccessKey']);

    this.expired = false;
    this.expireTime = null;
    if (arguments.length == 1 && typeof arguments[0] === 'object') {
      var creds = arguments[0].credentials || arguments[0];
      this.accessKeyId = creds.accessKeyId;
      this.secretAccessKey = creds.secretAccessKey;
      this.sessionToken = creds.sessionToken;
    } else {
      this.accessKeyId = arguments[0];
      this.secretAccessKey = arguments[1];
      this.sessionToken = arguments[2];
    }
  },


  expiryWindow: 15,


  needsRefresh: function needsRefresh() {
    var currentTime = AWS.util.date.getDate().getTime();
    var adjustedTime = new Date(currentTime + this.expiryWindow * 1000);

    if (this.expireTime && adjustedTime > this.expireTime) {
      return true;
    } else {
      return this.expired || !this.accessKeyId || !this.secretAccessKey;
    }
  },


  get: function get(callback) {
    var self = this;
    if (this.needsRefresh()) {
      this.refresh(function(err) {
        if (!err) self.expired = false; // reset expired flag
        if (callback) callback(err);
      });
    } else if (callback) {
      callback();
    }
  },


  refresh: function refresh(callback) {
    this.expired = false;
    callback();
  }
});

},{"./core":32}],34:[function(require,module,exports){
var AWS = require('../core');


AWS.CredentialProviderChain = AWS.util.inherit(AWS.Credentials, {


  constructor: function CredentialProviderChain(providers) {
    if (providers) {
      this.providers = providers;
    } else {
      this.providers = AWS.CredentialProviderChain.defaultProviders.slice(0);
    }
  },


  resolve: function resolve(callback) {
    if (this.providers.length === 0) {
      callback(new Error('No providers'));
      return;
    }

    var index = 0;
    var providers = this.providers.slice(0);

    function resolveNext(err, creds) {
      if ((!err && creds) || index === providers.length) {
        callback(err, creds);
        return;
      }

      var provider = providers[index++];
      if (typeof provider === 'function') {
        creds = provider.call();
      } else {
        creds = provider;
      }

      if (creds.get) {
        creds.get(function(err) {
          resolveNext(err, err ? null : creds);
        });
      } else {
        resolveNext(null, creds);
      }
    }

    resolveNext();
    return this;
  }

});


AWS.CredentialProviderChain.defaultProviders = [];

},{"../core":32}],35:[function(require,module,exports){
var AWS = require('../core');


AWS.SAMLCredentials = AWS.util.inherit(AWS.Credentials, {

  constructor: function SAMLCredentials(params) {
    AWS.Credentials.call(this);
    this.expired = true;
    this.service = new AWS.STS();
    this.params = params;
  },


  refresh: function refresh(callback) {
    var self = this;
    if (!callback) callback = function(err) { if (err) throw err; };

    self.service.assumeRoleWithSAML(self.params, function (err, data) {
      if (!err) {
        self.service.credentialsFrom(data, self);
      }
      callback(err);
    });
  }
});

},{"../core":32}],36:[function(require,module,exports){
var AWS = require('../core');


AWS.TemporaryCredentials = AWS.util.inherit(AWS.Credentials, {

  constructor: function TemporaryCredentials(params) {
    AWS.Credentials.call(this);
    this.loadMasterCredentials();
    this.service = new AWS.STS();
    this.expired = true;

    this.params = params || {};
    if (this.params.RoleArn) {
      this.params.RoleSessionName =
        this.params.RoleSessionName || 'temporary-credentials';
    }
  },


  refresh: function refresh(callback) {
    var self = this;
    if (!callback) callback = function(err) { if (err) throw err; };

    self.service.config.credentials = self.masterCredentials;
    var operation = self.params.RoleArn ?
      self.service.assumeRole : self.service.getSessionToken;
    operation.call(self.service, self.params, function (err, data) {
      if (!err) {
        self.service.credentialsFrom(data, self);
      }
      callback(err);
    });
  },


  loadMasterCredentials: function loadMasterCredentials() {
    this.masterCredentials = AWS.config.credentials;
    while (this.masterCredentials.masterCredentials) {
      this.masterCredentials = this.masterCredentials.masterCredentials;
    }
  }
});

},{"../core":32}],37:[function(require,module,exports){
var AWS = require('../core');


AWS.WebIdentityCredentials = AWS.util.inherit(AWS.Credentials, {

  constructor: function WebIdentityCredentials(params) {
    AWS.Credentials.call(this);
    this.expired = true;
    this.service = new AWS.STS();
    this.params = params;
    this.params.RoleSessionName = this.params.RoleSessionName || 'web-identity';
  },


  refresh: function refresh(callback) {
    var self = this;
    if (!callback) callback = function(err) { if (err) throw err; };

    self.service.assumeRoleWithWebIdentity(self.params, function (err, data) {
      if (!err) {
        self.service.credentialsFrom(data, self);
      }
      callback(err);
    });
  }
});

},{"../core":32}],38:[function(require,module,exports){
var AWS = require('./core');
require('./sequential_executor');
require('./service_interface/json');
require('./service_interface/query');
require('./service_interface/rest');
require('./service_interface/rest_json');
require('./service_interface/rest_xml');


AWS.EventListeners = {

  Core: {} /* doc hack */
};

AWS.EventListeners = {
  Core: new AWS.SequentialExecutor().addNamedListeners(function(add, addAsync) {
    addAsync('VALIDATE_CREDENTIALS', 'validate',
        function VALIDATE_CREDENTIALS(req, doneCallback) {
      req.service.config.getCredentials(function(err) {
        if (err) {
          err = AWS.util.error(err,
            {code: 'SigningError', message: 'Missing credentials in config'});
        }
        doneCallback(err);
      });
    });

    add('VALIDATE_REGION', 'validate', function VALIDATE_REGION(req) {
      if (!req.service.config.region && !req.service.hasGlobalEndpoint()) {
        throw AWS.util.error(new Error(),
          {code: 'SigningError', message: 'Missing region in config'});
      }
    });

    add('VALIDATE_PARAMETERS', 'validate', function VALIDATE_PARAMETERS(req) {
      var rules = req.service.api.operations[req.operation].input;
      new AWS.ParamValidator().validate(rules, req.params);
    });

    add('SET_CONTENT_LENGTH', 'afterBuild', function SET_CONTENT_LENGTH(req) {
      if (req.httpRequest.headers['Content-Length'] === undefined) {
        var length = AWS.util.string.byteLength(req.httpRequest.body);
        req.httpRequest.headers['Content-Length'] = length;
      }
    });

    add('SET_HTTP_HOST', 'afterBuild', function SET_HTTP_HOST(req) {
      req.httpRequest.headers['Host'] = req.httpRequest.endpoint.host;
    });

    addAsync('SIGN', 'sign', function SIGN(req, doneCallback) {
      if (!req.service.api.signatureVersion) return doneCallback(); // none

      req.service.config.getCredentials(function (err, credentials) {
        try {
          if (err) return doneCallback(err);

          var date = AWS.util.date.getDate();
          var SignerClass = req.service.getSignerClass(req);
          var signer = new SignerClass(req.httpRequest,
            req.service.api.signingName || req.service.api.endpointPrefix);

          delete req.httpRequest.headers['Authorization'];
          delete req.httpRequest.headers['Date'];
          delete req.httpRequest.headers['X-Amz-Date'];

          signer.addAuthorization(credentials, date);
          doneCallback();
        } catch (e) {
          doneCallback(e);
        }
      });
    });

    add('SETUP_ERROR', 'extractError', function SETUP_ERROR(resp) {
      if (this.service.successfulResponse(resp, this)) {
        throw null;
      }

      resp.error = AWS.util.error(new Error(),
        {code: 'UnknownError', message: 'An unknown error occurred.'});
      resp.data = null;
    });

    add('SETUP_DATA', 'extractData', function SETUP_DATA(resp) {
      resp.data = {};
      resp.error = null;
    });

    add('SEND', 'send', function SEND(resp) {
      function callback(httpResp) {
        resp.httpResponse.stream = httpResp;

        httpResp.on('headers', function onHeaders(statusCode, headers) {
          resp.request.emitEvent('httpHeaders', [statusCode, headers, resp]);

          if (!resp.request.httpRequest._streaming) {
            if (AWS.HttpClient.streamsApiVersion === 2) { // streams2 API check
              httpResp.on('readable', function onReadable() {
                var data = httpResp.read();
                if (data !== null) {
                  resp.request.emitEvent('httpData', [data, resp]);
                }
              });
            } else { // legacy streams API
              httpResp.on('data', function onData(data) {
                resp.request.emitEvent('httpData', [data, resp]);
              });
            }
          }
        });

        httpResp.on('end', function onEnd() {
          resp.request.emitEvent('httpDone', [resp]);
        });
      }

      function progress(httpResp) {
        httpResp.on('sendProgress', function onSendProgress(progress) {
          resp.request.emitEvent('httpUploadProgress', [progress, resp]);
        });

        httpResp.on('receiveProgress', function onReceiveProgress(progress) {
          resp.request.emitEvent('httpDownloadProgress', [progress, resp]);
        });
      }

      function error(err) {
        err = AWS.util.error(err, {
          code: 'NetworkingError',
          region: resp.request.httpRequest.region,
          hostname: resp.request.httpRequest.endpoint.hostname,
          retryable: true
        });
        resp.request.emitEvent('httpError', [err, resp]);
      }

      resp.error = null;
      resp.data = null;

      var http = AWS.HttpClient.getInstance();
      var httpOptions = resp.request.service.config.httpOptions || {};
      var s = http.handleRequest(this.httpRequest, httpOptions, callback, error);
      progress(s);
    });

    add('HTTP_HEADERS', 'httpHeaders',
        function HTTP_HEADERS(statusCode, headers, resp) {
      resp.httpResponse.statusCode = statusCode;
      resp.httpResponse.headers = headers;
      resp.httpResponse.body = new AWS.util.Buffer('');
      resp.httpResponse.buffers = [];
      resp.httpResponse.numBytes = 0;
    });

    add('HTTP_DATA', 'httpData', function HTTP_DATA(chunk, resp) {
      if (chunk) {
        if (AWS.util.isNode()) {
          resp.httpResponse.numBytes += chunk.length;

          var total = resp.httpResponse.headers['content-length'];
          var progress = { loaded: resp.httpResponse.numBytes, total: total };
          resp.request.emitEvent('httpDownloadProgress', [progress, resp]);
        }

        resp.httpResponse.buffers.push(new AWS.util.Buffer(chunk));
      }
    });

    add('HTTP_DONE', 'httpDone', function HTTP_DONE(resp) {
      if (resp.httpResponse.buffers && resp.httpResponse.buffers.length > 0) {
        var body = AWS.util.buffer.concat(resp.httpResponse.buffers);
        resp.httpResponse.body = body;
      }
      delete resp.httpResponse.numBytes;
      delete resp.httpResponse.buffers;

      this.completeRequest(resp);
    });

    add('HTTP_ERROR', 'httpError', function HTTP_ERROR(error, resp) {
      resp.error = error;
      this.completeRequest(resp);
    });

    add('FINALIZE_ERROR', 'retry', function FINALIZE_ERROR(resp) {
      resp.error.statusCode = resp.httpResponse.statusCode;
      if (resp.error.retryable === undefined) {
        resp.error.retryable = this.service.retryableError(resp.error, this);
      }
    });

    add('INVALIDATE_CREDENTIALS', 'retry', function INVALIDATE_CREDENTIALS(resp) {
      switch (resp.error.code) {
        case 'RequestExpired': // EC2 only
        case 'ExpiredTokenException':
        case 'ExpiredToken':
          resp.error.retryable = true;
          resp.request.service.config.credentials.expired = true;
      }
    });

    add('REDIRECT', 'retry', function REDIRECT(resp) {
      if (resp.error && resp.error.statusCode >= 300 &&
          resp.error.statusCode < 400 && resp.httpResponse.headers['location']) {
        this.httpRequest.endpoint =
          new AWS.Endpoint(resp.httpResponse.headers['location']);
        resp.error.redirect = true;
        resp.error.retryable = true;
      }
    });

    add('RETRY_CHECK', 'retry', function RETRY_CHECK(resp) {
      if (resp.error) {
        if (resp.error.redirect && resp.redirectCount < this.service.config.maxRedirects) {
          resp.redirectCount++;
        } else if (resp.error.retryable && resp.retryCount < this.service.numRetries()) {
          resp.retryCount++;
        } else {
          throw resp.error;
        }
      }
    });

    addAsync('RETRY_SIGN', 'retry', function RETRY_SIGN(resp, doneCallback) {
      this.emitEvent('sign', resp, doneCallback);
    });

    addAsync('RETRY_DELAY_SEND', 'retry', function RETRY_DELAY_SEND(resp, doneCallback) {
      var delay = 0;
      if (!resp.error.redirect) {
        delay = this.service.retryDelays()[resp.retryCount-1] || 0;
      }

      setTimeout(function() {
        resp.request.emitEvent('send', resp, doneCallback);
      }, delay);

    });

  }),

  Logger: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    add('LOG_REQUEST', 'complete', function LOG_REQUEST(resp) {
      var req = resp.request;
      var logger = req.service.config.logger;
      if (!logger) return;

      function buildMessage() {
        var time = AWS.util.date.getDate().getTime();
        var delta = (time - req.startTime.getTime()) / 1000;
        var ansi = logger.isTTY ? true : false;
        var status = resp.httpResponse.statusCode;
        var params = require('util').inspect(req.params, true, true);

        var message = '';
        if (ansi) message += '\x1B[33m';
        message += '[AWS ' + req.service.serviceIdentifier + ' ' + status;
        message += ' ' + delta.toString() + 's ' + resp.retryCount + ' retries]';
        if (ansi) message += '\x1B[0;1m';
        message += ' ' + req.operation + '(' + params + ')';
        if (ansi) message += '\x1B[0m';
        return message;
      }

      var message = buildMessage();
      if (typeof logger.log === 'function') {
        logger.log(message);
      } else if (typeof logger.write === 'function') {
        logger.write(message + '\n');
      }
    });
  }),

  Json: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    var svc = AWS.ServiceInterface.Json;
    add('BUILD', 'build', svc.buildRequest);
    add('EXTRACT_DATA', 'extractData', svc.extractData);
    add('EXTRACT_ERROR', 'extractError', svc.extractError);
  }),

  Rest: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    var svc = AWS.ServiceInterface.Rest;
    add('BUILD', 'build', svc.buildRequest);
    add('EXTRACT_DATA', 'extractData', svc.extractData);
    add('EXTRACT_ERROR', 'extractError', svc.extractError);
  }),

  RestJson: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    var svc = AWS.ServiceInterface.RestJson;
    add('BUILD', 'build', svc.buildRequest);
    add('EXTRACT_DATA', 'extractData', svc.extractData);
    add('EXTRACT_ERROR', 'extractError', svc.extractError);
  }),

  RestXml: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    var svc = AWS.ServiceInterface.RestXml;
    add('BUILD', 'build', svc.buildRequest);
    add('EXTRACT_DATA', 'extractData', svc.extractData);
    add('EXTRACT_ERROR', 'extractError', svc.extractError);
  }),

  Query: new AWS.SequentialExecutor().addNamedListeners(function(add) {
    var svc = AWS.ServiceInterface.Query;
    add('BUILD', 'build', svc.buildRequest);
    add('EXTRACT_DATA', 'extractData', svc.extractData);
    add('EXTRACT_ERROR', 'extractError', svc.extractError);
  })
};

},{"./core":32,"./sequential_executor":44,"./service_interface/json":46,"./service_interface/query":47,"./service_interface/rest":48,"./service_interface/rest_json":49,"./service_interface/rest_xml":50,"util":28}],39:[function(require,module,exports){
var AWS = require('./core');
var inherit = AWS.util.inherit;


AWS.Endpoint = inherit({


  constructor: function Endpoint(endpoint, config) {
    AWS.util.hideProperties(this, ['slashes', 'auth', 'hash', 'search', 'query']);

    if (typeof endpoint === 'undefined' || endpoint === null) {
      throw new Error('Invalid endpoint: ' + endpoint);
    } else if (typeof endpoint !== 'string') {
      return AWS.util.copy(endpoint);
    }

    if (!endpoint.match(/^http/)) {
      var useSSL = config && config.sslEnabled !== undefined ?
        config.sslEnabled : AWS.config.sslEnabled;
      endpoint = (useSSL ? 'https' : 'http') + '://' + endpoint;
    }

    AWS.util.update(this, AWS.util.urlParse(endpoint));

    if (this.port) {
      this.port = parseInt(this.port, 10);
    } else {
      this.port = this.protocol === 'https:' ? 443 : 80;
    }
  }

});


AWS.HttpRequest = inherit({


  constructor: function HttpRequest(endpoint, region) {
    endpoint = new AWS.Endpoint(endpoint);
    this.method = 'POST';
    this.path = endpoint.path || '/';
    this.headers = {};
    this.body = '';
    this.endpoint = endpoint;
    this.region = region;
    this.setUserAgent();
  },


  setUserAgent: function setUserAgent() {
    var prefix = AWS.util.isBrowser() ? 'X-Amz-' : '';
    this.headers[prefix + 'User-Agent'] = AWS.util.userAgent();
  },


  pathname: function pathname() {
    return this.path.split('?', 1)[0];
  },


  search: function search() {
    return this.path.split('?', 2)[1] || '';
  }

});


AWS.HttpResponse = inherit({


  constructor: function HttpResponse() {
    this.statusCode = undefined;
    this.headers = {};
    this.body = undefined;
  }
});


AWS.HttpClient = inherit({});


AWS.HttpClient.getInstance = function getInstance() {

  if (this.singleton === undefined) {
    this.singleton = new this();
  }
  return this.singleton;
};

},{"./core":32}],40:[function(require,module,exports){
var AWS = require('../core');
var EventEmitter = require('events').EventEmitter;
require('../http');


AWS.XHRClient = AWS.util.inherit({
  handleRequest: function handleRequest(httpRequest, httpOptions, callback, errCallback) {
    var self = this;
    var endpoint = httpRequest.endpoint;
    var emitter = new EventEmitter();
    var href = endpoint.protocol + '//' + endpoint.hostname;
    if (endpoint.port != 80 && endpoint.port != 443) {
      href += ':' + endpoint.port;
    }
    href += httpRequest.path;

    var xhr = new XMLHttpRequest();
    httpRequest.stream = xhr;

    if (httpOptions.timeout) {
      xhr.timeout = httpOptions.timeout;
    }

    xhr.addEventListener('readystatechange', function() {
      if (xhr.status === 0) return; // 0 code is invalid
      if (this.readyState === this.HEADERS_RECEIVED) {
        try { xhr.responseType = 'arraybuffer'; } catch (e) {}
        emitter.statusCode = xhr.status;
        emitter.headers = self.parseHeaders(xhr.getAllResponseHeaders());
        emitter.emit('headers', emitter.statusCode, emitter.headers);
      } else if (this.readyState === this.DONE) {
        self.finishRequest(xhr, emitter);
      }
    }, false);
    xhr.upload.addEventListener('progress', function (evt) {
      emitter.emit('sendProgress', evt);
    });
    xhr.addEventListener('progress', function (evt) {
      emitter.emit('receiveProgress', evt);
    }, false);
    xhr.addEventListener('timeout', function () {
      errCallback(AWS.util.error(new Error('Timeout'), {code: 'TimeoutError'}));
    }, false);
    xhr.addEventListener('error', function () {
      errCallback(AWS.util.error(new Error('Network Failure'), {
        code: 'NetworkingError'
      }));
    }, false);

    callback(emitter);
    xhr.open(httpRequest.method, href, true);
    AWS.util.each(httpRequest.headers, function (key, value) {
      if (key !== 'Content-Length' && key !== 'User-Agent' && key !== 'Host') {
        xhr.setRequestHeader(key, value);
      }
    });

    if (httpRequest.body && typeof httpRequest.body.buffer === 'object') {
      xhr.send(httpRequest.body.buffer); // typed arrays sent as ArrayBuffer
    } else {
      xhr.send(httpRequest.body);
    }

    return emitter;
  },

  parseHeaders: function parseHeaders(rawHeaders) {
    var headers = {};
    AWS.util.arrayEach(rawHeaders.split(/\r?\n/), function (line) {
      var key = line.split(':', 1)[0];
      var value = line.substring(key.length + 2);
      if (key.length > 0) headers[key] = value;
    });
    return headers;
  },

  finishRequest: function finishRequest(xhr, emitter) {
    var buffer;
    if (xhr.responseType === 'arraybuffer' && xhr.response) {
      var ab = xhr.response;
      buffer = new AWS.util.Buffer(ab.byteLength);
      var view = new Uint8Array(ab);
      for (var i = 0; i < buffer.length; ++i) {
        buffer[i] = view[i];
      }
    }

    try {
      if (!buffer && typeof xhr.responseText === 'string') {
        buffer = new AWS.util.Buffer(xhr.responseText);
      }
    } catch (e) {}

    if (buffer) emitter.emit('data', buffer);
    emitter.emit('end');
  }
});


AWS.HttpClient.prototype = AWS.XHRClient.prototype;


AWS.HttpClient.streamsApiVersion = 1;

},{"../core":32,"../http":39,"events":8}],41:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


AWS.JSON = {};


AWS.JSON.Builder = inherit({

  constructor: function JSONBuilder(rules, options) {
    this.rules = rules;
    this.timestampFormat = options.timestampFormat;
  },

  build: function build(params) {
    return JSON.stringify(this.translate(this.rules, params));
  },

  translate: function translate(rules, value) {
    if (rules.type == 'structure') {

      var struct = {};
      AWS.util.each.call(this, value, function (memberName, memberValue) {
        var memberRules = rules.members[memberName] || {};
        struct[memberName] = this.translate(memberRules, memberValue);
      });
      return struct;

    } else if (rules.type == 'list') {

      var list = [];
      AWS.util.arrayEach.call(this, value, function (memberValue) {
        var memberRules = rules.members || {};
        list.push(this.translate(memberRules, memberValue));
      });
      return list;

    } else if (rules.type == 'map') {

      var map = {};
      AWS.util.each.call(this, value, function (memberName, memberValue) {
        var memberRules = rules.members || {};
        map[memberName] = this.translate(memberRules, memberValue);
      });
      return map;

    } else if (rules.type == 'timestamp') {

      var timestampFormat = rules.format || this.timestampFormat;
      return AWS.util.date.format(value, timestampFormat);

    } else if (rules.type == 'integer') {
      return parseInt(value, 10);
    } else if (rules.type == 'float') {
      return parseFloat(value);
    } else {

      return value;

    }
  }

});

},{"../core":32}],42:[function(require,module,exports){
var AWS = require('./core');


AWS.ParamValidator = AWS.util.inherit({
  validate: function validate(rules, params, context) {
    var cRules = (rules || {}).members || {};
    var payload = rules ? rules.xml : null;
    if (payload) {
      cRules = AWS.util.merge(cRules, (cRules[payload] || {}).members || {});
      delete cRules[payload];
    }

    return this.validateStructure(cRules, params || {}, context || 'params');
  },

  validateStructure: function validateStructure(rules, params, context) {

    this.validateType(context, params, ['object'], 'structure');


    for (var paramName in rules) {
      if (!rules.hasOwnProperty(paramName)) continue;
      if (rules[paramName].required && params[paramName] === undefined) {
        this.fail('MissingRequiredParameter',
          'Missing required key \'' + paramName + '\' in ' + context);
      }
    }

    for (paramName in params) {
      if (!params.hasOwnProperty(paramName)) continue;

      var paramValue = params[paramName],
          paramRules = rules[paramName];

      if (paramRules !== undefined) {
        var memberContext = [context, paramName].join('.');
        this.validateMember(paramRules, paramValue, memberContext);
      } else {
        this.fail('UnexpectedParameter',
          'Unexpected key \'' + paramName + '\' found in ' + context);
      }
    }

    return true;
  },

  validateMember: function validateMember(rules, param, context) {
    var memberRules = rules.members || {};
    switch(rules.type) {
      case 'structure':
        return this.validateStructure(memberRules, param, context);
      case 'list':
        return this.validateList(memberRules, param, context);
      case 'map':
        return this.validateMap(memberRules, param, context);
      default:
        return this.validateScalar(rules, param, context);
    }
  },

  validateList: function validateList(rules, params, context) {
    this.validateType(context, params, [Array]);

    for (var i = 0; i < params.length; i++) {
      this.validateMember(rules, params[i], context + '[' + i + ']');
    }
  },

  validateMap: function validateMap(rules, params, context) {
    this.validateType(context, params, ['object'], 'map');


    for (var param in params) {
      if (!params.hasOwnProperty(param)) continue;
      this.validateMember(rules, params[param],
                          context + '[\'' +  param + '\']');
    }
  },

  validateScalar: function validateScalar(rules, value, context) {

    switch (rules.type) {
      case null:
      case undefined:
      case 'string':
        return this.validateType(context, value, ['string']);
      case 'base64':
      case 'binary':
        return this.validatePayload(context, value);
      case 'integer':
      case 'float':
        return this.validateNumber(context, value);
      case 'boolean':
        return this.validateType(context, value, ['boolean']);
      case 'timestamp':
        return this.validateType(context, value, [Date,
          /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(\.\d+)?Z$/, 'number'],
          'Date object, ISO-8601 string, or a UNIX timestamp');
      default:
        return this.fail('UnkownType', 'Unhandled type ' +
                         rules.type + ' for ' + context);
    }
  },

  fail: function fail(code, message) {
    throw AWS.util.error(new Error(message), {code: code});
  },

  validateType: function validateType(context, value, acceptedTypes, type) {

    var foundInvalidType = false;
    for (var i = 0; i < acceptedTypes.length; i++) {
      if (typeof acceptedTypes[i] === 'string') {
        if (typeof value === acceptedTypes[i]) return;
      } else if (acceptedTypes[i] instanceof RegExp) {
        if ((value || '').toString().match(acceptedTypes[i])) return;
      } else {
        if (value instanceof acceptedTypes[i]) return;
        if (AWS.util.isType(value, acceptedTypes[i])) return;
        if (!type && !foundInvalidType) acceptedTypes = acceptedTypes.slice();
        acceptedTypes[i] = AWS.util.typeName(acceptedTypes[i]);
      }
      foundInvalidType = true;
    }

    var acceptedType = type;
    if (!acceptedType) {

      acceptedType = acceptedTypes.join(', ').replace(/,([^,]+)$/, ', or$1');
    }

    var vowel = acceptedType.match(/^[aeiou]/i) ? 'n' : '';
    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a' +
              vowel + ' ' + acceptedType);
  },

  validateNumber: function validateNumber(context, value) {
    if (typeof value === 'string') {
      var castedValue = parseFloat(value);
      if (castedValue.toString() === value) value = castedValue;
    }
    return this.validateType(context, value, ['number']);
  },

  validatePayload: function validatePayload(context, value) {
    if (typeof value === 'string') return;
    if (value && typeof value.byteLength === 'number') return; // typed arrays
    if (AWS.util.isNode()) { // special check for buffer/stream in Node.js
      var Stream = require('stream').Stream;
      if (AWS.util.Buffer.isBuffer(value) || value instanceof Stream) return;
    }

    var types = ['Buffer', 'Stream', 'File', 'Blob', 'ArrayBuffer', 'DataView'];
    if (value) {
      for (var i = 0; i < types.length; i++) {
        if (AWS.util.isType(value, types[i])) return;
        if (AWS.util.typeName(value.constructor) === types[i]) return;
      }
    }

    this.fail('InvalidParameterType', 'Expected ' + context + ' to be a ' +
      'string, Buffer, Stream, Blob, or typed array object');
  }
});

},{"./core":32,"stream":19}],43:[function(require,module,exports){
(function (process){var AWS = require('./core');
var inherit = AWS.util.inherit;


AWS.Request = inherit({


  constructor: function Request(service, operation, params) {
    var endpoint = service.endpoint;
    var region = service.config.region;

    if (service.hasGlobalEndpoint()) region = 'us-east-1';

    this.service = service;
    this.operation = operation;
    this.params = params || {};
    this.httpRequest = new AWS.HttpRequest(endpoint, region);
    this.startTime = AWS.util.date.getDate();

    AWS.SequentialExecutor.call(this);
  },




  send: function send(callback, response) {
    if (callback) {
      this.on('complete', function (resp) {
        callback.call(resp, resp.error, resp.data);
      });
    }

    if (!response) response = new AWS.Response(this);
    var eventNames = ['validate', 'build', 'afterBuild', 'sign', 'send'];
    this.emitEvents(eventNames, response, function(err) {
      if (err) {
        this.failRequest(response);
      }
    });
    return response;
  },


  abort: function abort() {
    this._events = { // reset events
      error: this._events.error,
      complete: this._events.complete
    };

    if (this.httpRequest.stream) { // abort HTTP stream
      this.httpRequest.stream.abort();
    }

    var response = new AWS.Response(this);
    response.error = AWS.util.error(new Error('Request aborted by user'), {
      code: 'RequestAbortedError', retryable: false
    });
    this.failRequest(response);

    return this;
  },


  eachPage: function eachPage(callback) {
    function wrappedCallback(response) {
      var result = callback.call(response, response.error, response.data);
      if (result === false) return;

      if (response.hasNextPage()) {
        response.nextPage().on('complete', wrappedCallback).send();
      } else {
        callback.call(response, null, null);
      }
    }

    this.on('complete', wrappedCallback).send();
  },


  eachItem: function eachItem(callback) {
    function wrappedCallback(err, data) {
      if (err) return callback(err, null);
      if (data === null) return callback(null, null);

      var config = this.request.service.paginationConfig(this.request.operation);
      var resultKey = config.resultKey;
      if (Array.isArray(resultKey)) resultKey = resultKey[0];
      var results = AWS.util.jamespath.query(resultKey, data);
      AWS.util.arrayEach(results, function(result) {
        AWS.util.arrayEach(result, function(item) { callback(null, item); });
      });
    }

    this.eachPage(wrappedCallback);
  },


  isPageable: function isPageable() {
    return this.service.paginationConfig(this.operation) ? true : false;
  },


  createReadStream: function createReadStream() {
    var streams = require('stream');
    var req = this;
    var stream = null;
    var legacyStreams = false;

    if (AWS.HttpClient.streamsApiVersion === 2) {
      stream = new streams.Readable();
      stream._read = function() { stream.push(''); };
    } else {
      stream = new streams.Stream();
      stream.readable = true;
    }

    stream.sent = false;
    stream.on('newListener', function(event) {
      if (!stream.sent && (event === 'data' || event === 'readable')) {
        if (event === 'data') legacyStreams = true;
        stream.sent = true;
        process.nextTick(function() { req.send(); });
      }
    });

    this.on('httpHeaders', function streamHeaders(statusCode, headers, resp) {
      if (statusCode < 300) {
        this.httpRequest._streaming = true;

        req.removeListener('httpData', AWS.EventListeners.Core.HTTP_DATA);
        req.removeListener('httpError', AWS.EventListeners.Core.HTTP_ERROR);
        req.on('httpError', function streamHttpError(error, resp) {
          resp.error = error;
          resp.error.retryable = false;
          this.completeRequest(resp);
        });

        var httpStream = resp.httpResponse.stream;
        stream.response = resp;
        stream._read = function() {
          var data;

          while (data = httpStream.read()) {
            stream.push(data);
          }
          stream.push('');
        };

        var events = ['end', 'error', (legacyStreams ? 'data' : 'readable')];
        AWS.util.arrayEach(events, function(event) {
          httpStream.on(event, function(arg) {
            stream.emit(event, arg);
          });
        });
      }
    });

    this.on('error', function(err) {
      stream.emit('error', err);
    });

    return stream;
  },


  completeRequest: function completeRequest(response) {
    this.emitEvents(['extractError', 'extractData'], response, function(err) {
      if (err) {
        this.emitEvent('retry', response, function(retryError) {
          if (retryError) this.failRequest(response);
        });
      } else {
        this.emitEvent('success', [response], this.unhandledErrorCallback);
        this.emitEvent('complete', [response], this.unhandledErrorCallback);
      }
    });
  },


  failRequest: function failRequest(response) {
    this.emitEvent('error', [response.error, response], this.unhandledErrorCallback);
    this.emitEvent('complete', [response], this.unhandledErrorCallback);
  },


  emitEvents: function emitEvents(eventNames, response, doneCallback) {
    if (!doneCallback) doneCallback = this.unhandledErrorCallback;
    if (response.error) {
      doneCallback.call(this, response.error);
    } else if (eventNames.length === 0) {
      doneCallback.call(this);
    } else {
      this.emitEvent(eventNames[0], response, function(err) {
        if (err) {
          doneCallback.call(this, err);
        } else {
          this.emitEvents(eventNames.slice(1), response, doneCallback);
        }
      });
    }
  },


  emitEvent: function emitEvent(eventName, args, doneCallback) {
    if (!doneCallback) doneCallback = this.unhandledErrorCallback;
    var response = null;
    if (Array.isArray(args)) {
      response = args[args.length - 1];
    } else {
      response = args;
      args = this.eventParameters(eventName, response);
    }

    this.emit(eventName, args, function (err) {
      if (err) {
        response.error = err;
      }
      doneCallback.call(this, err);
    });
  },


  eventParameters: function eventParameters(eventName, response) {
    switch (eventName) {
      case 'validate':
      case 'sign':
      case 'build':
      case 'afterBuild':
        return [this];
      default:
        return [response];
    }
  }
});

AWS.util.mixin(AWS.Request, AWS.SequentialExecutor);


AWS.Response = inherit({


  constructor: function Response(request) {
    this.request = request;
    this.data = null;
    this.error = null;
    this.retryCount = 0;
    this.redirectCount = 0;
    this.httpResponse = new AWS.HttpResponse();
  },


  nextPage: function nextPage(callback) {
    var config;
    var service = this.request.service;
    var operation = this.request.operation;
    try {
      config = service.paginationConfig(operation, true);
    } catch (e) { this.error = e; }

    if (!this.hasNextPage()) {
      if (callback) callback(this.error, null);
      else if (this.error) throw this.error;
      return null;
    }

    var params = AWS.util.copy(this.request.params);
    if (!this.nextPageTokens) {
      return callback ? callback(null, null) : null;
    } else {
      var inputTokens = config.inputToken;
      if (typeof inputTokens === 'string') inputTokens = [inputTokens];
      for (var i = 0; i < inputTokens.length; i++) {
        params[inputTokens[i]] = this.nextPageTokens[i];
      }
      return service.makeRequest(this.request.operation, params, callback);
    }
  },


  hasNextPage: function hasNextPage() {
    this.cacheNextPageTokens();
    if (this.nextPageTokens) return true;
    if (this.nextPageTokens === undefined) return undefined;
    else return false;
  },


  cacheNextPageTokens: function cacheNextPageTokens() {
    if (this.hasOwnProperty('nextPageTokens')) return this.nextPageTokens;
    this.nextPageTokens = undefined;

    var config = this.request.service.paginationConfig(this.request.operation);
    if (!config) return this.nextPageTokens;

    this.nextPageTokens = null;
    if (config.moreResults) {
      if (!AWS.util.jamespath.find(config.moreResults, this.data)) {
        return this.nextPageTokens;
      }
    }

    var exprs = config.outputToken;
    if (typeof exprs === 'string') exprs = [exprs];
    AWS.util.arrayEach.call(this, exprs, function (expr) {
      var output = AWS.util.jamespath.find(expr, this.data);
      if (output) {
        this.nextPageTokens = this.nextPageTokens || [];
        this.nextPageTokens.push(output);
      }
    });

    return this.nextPageTokens;
  }

});
}).call(this,require("C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js"))
},{"./core":32,"C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js":10,"stream":19}],44:[function(require,module,exports){
(function (process){var AWS = require('./core');
var domain;


AWS.SequentialExecutor = AWS.util.inherit({

  constructor: function SequentialExecutor() {
    this.domain = null;
    if (require('events').usingDomains) {
      domain = require('domain');
      if (domain.active) this.domain = domain.active;
    }
    this._events = {};
  },


  listeners: function listeners(eventName) {
    return this._events[eventName] ? this._events[eventName].slice(0) : [];
  },

  on: function on(eventName, listener) {
    if (this._events[eventName]) {
      this._events[eventName].push(listener);
    } else {
      this._events[eventName] = [listener];
    }
    return this;
  },


  onAsync: function onAsync(eventName, listener) {
    listener._isAsync = true;
    return this.on(eventName, listener);
  },

  removeListener: function removeListener(eventName, listener) {
    var listeners = this._events[eventName];
    if (listeners) {
      var length = listeners.length;
      var position = -1;
      for (var i = 0; i < length; ++i) {
        if (listeners[i] === listener) {
          position = i;
        }
      }
      if (position > -1) {
        listeners.splice(position, 1);
      }
    }
    return this;
  },

  removeAllListeners: function removeAllListeners(eventName) {
    if (eventName) {
      delete this._events[eventName];
    } else {
      this._events = {};
    }
    return this;
  },


  emit: function emit(eventName, eventArgs, doneCallback) {
    if (!doneCallback) doneCallback = this.unhandledErrorCallback;
    if (domain && this.domain instanceof domain.Domain)
      this.domain.enter();

    var listeners = this.listeners(eventName);
    var count = listeners.length;
    this.callListeners(listeners, eventArgs, doneCallback);
    return count > 0;
  },


  callListeners: function callListeners(listeners, args, doneCallback) {
    if (listeners.length === 0) {
      doneCallback.call(this);
      if (domain && this.domain instanceof domain.Domain)
        this.domain.exit();
    } else {
      var listener = listeners.shift();
      if (listener._isAsync) {

        var callNextListener = function(err) {
          if (err) {
            doneCallback.call(this, err);
            if (domain && this.domain instanceof domain.Domain)
              this.domain.exit();
          } else {
            this.callListeners(listeners, args, doneCallback);
          }
        }.bind(this);
        listener.apply(this, args.concat([callNextListener]));

      } else {

        try {
          listener.apply(this, args);
          this.callListeners(listeners, args, doneCallback);
        } catch (err) {
          doneCallback.call(this, err);
          if (domain && this.domain instanceof domain.Domain)
            this.domain.exit();
        }

      }
    }
  },


  addListeners: function addListeners(listeners) {
    var self = this;

    if (listeners._events) listeners = listeners._events;

    AWS.util.each(listeners, function(event, callbacks) {
      if (typeof callbacks === 'function') callbacks = [callbacks];
      AWS.util.arrayEach(callbacks, function(callback) {
        self.on(event, callback);
      });
    });

    return self;
  },


  addNamedListener: function addNamedListener(name, eventName, callback) {
    this[name] = callback;
    this.addListener(eventName, callback);
    return this;
  },


  addNamedAsyncListener: function addNamedAsyncListener(name, eventName, callback) {
    callback._isAsync = true;
    return this.addNamedListener(name, eventName, callback);
  },


  addNamedListeners: function addNamedListeners(callback) {
    var self = this;
    callback(
      function() {
        self.addNamedListener.apply(self, arguments);
      },
      function() {
        self.addNamedAsyncListener.apply(self, arguments);
      }
    );
    return this;
  },


  unhandledErrorCallback: function unhandledErrorCallback(err) {
    if (err) {
      if (domain && this.domain instanceof domain.Domain) {
        err.domainEmitter = this;
        err.domain = this.domain;
        err.domainThrown = false;
        this.domain.emit('error', err);
      } else if (process.exit) {
        console.error(err.stack ? err.stack : err);
        process.exit(1);
      } else {
        throw err;
      }
    }
  }
});


AWS.SequentialExecutor.prototype.addListener = AWS.SequentialExecutor.prototype.on;
}).call(this,require("C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js"))
},{"./core":32,"C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js":10,"domain":1,"events":8}],45:[function(require,module,exports){
(function (__dirname){var AWS = require('./core');
var Translator = require('./api/translator');
var inherit = AWS.util.inherit;


AWS.Service = inherit({

  constructor: function Service(config) {
    if (!this.loadServiceClass) {
      throw AWS.util.error(new Error(),
        'Service must be constructed with `new\' operator');
    }
    var ServiceClass = this.loadServiceClass(config || {});
    if (ServiceClass) return new ServiceClass(config);
    this.initialize(config);
  },


  initialize: function initialize(config) {
    AWS.util.hideProperties(this, ['client']);
    this.client = this; // backward compatibility with client property
    this.config = new AWS.Config(AWS.config);
    if (config) this.config.update(config, true);
    this.setEndpoint(this.config.endpoint);
  },


  loadServiceClass: function loadServiceClass(serviceConfig) {
    var config = serviceConfig;
    if (!AWS.util.isEmpty(this.api)) {
      return;
    } else if (config.apiConfig) {
      return AWS.Service.defineServiceApi(this.constructor, config.apiConfig);
    } else if (!this.constructor.services) {
      return;
    } else {
      config = new AWS.Config(AWS.config);
      config.update(serviceConfig, true);
      var version = config.apiVersions[this.constructor.serviceIdentifier];
      version = version || config.apiVersion;
      return this.getLatestServiceClass(version);
    }
  },


  getLatestServiceClass: function getLatestServiceClass(version) {
    version = this.getLatestServiceVersion(version);
    if (this.constructor.services[version] === null) {
      AWS.Service.defineServiceApi(this.constructor, version);
    }

    return this.constructor.services[version];
  },


  getLatestServiceVersion: function getLatestServiceVersion(version) {
    if (!this.constructor.services || this.constructor.services.length === 0) {
      throw new Error('No services defined on ' +
                      this.constructor.serviceIdentifier);
    }

    if (!version) {
      version = 'latest';
    } else if (AWS.util.isType(version, Date)) {
      version = AWS.util.date.iso8601(version).split('T')[0];
    }

    if (Object.hasOwnProperty(this.constructor.services, version)) {
      return version;
    }

    var keys = Object.keys(this.constructor.services).sort();
    var selectedVersion = null;
    for (var i = keys.length - 1; i >= 0; i--) {
      if (keys[i][keys[i].length - 1] !== '*') {
        selectedVersion = keys[i];
      }
      if (keys[i].substr(0, 10) <= version) {
        return selectedVersion;
      }
    }

    throw new Error('Could not find ' + this.constructor.serviceIdentifier +
                    ' API to satisfy version constraint `' + version + '\'');
  },


  api: {},


  defaultRetryCount: 3,


  makeRequest: function makeRequest(operation, params, callback) {
    if (typeof params === 'function') {
      callback = params;
      params = null;
    }

    params = params || {};
    if (this.config.params) { // copy only toplevel bound params
      var rules = this.api.operations[operation];
      if (rules) {
        params = AWS.util.copy(params);
        AWS.util.each(this.config.params, function(key, value) {
          if (rules.input.members[key]) {
            if (params[key] === undefined || params[key] === null) {
              params[key] = value;
            }
          }
        });
      }
    }

    var request = new AWS.Request(this, operation, params);
    this.addAllRequestListeners(request);

    if (callback) request.send(callback);
    return request;
  },


  makeUnauthenticatedRequest: function makeUnauthenticatedRequest(operation, params, callback) {
    if (typeof params === 'function') {
      callback = params;
      params = {};
    }

    var request = this.makeRequest(operation, params);
    request.removeListener('validate', AWS.EventListeners.Core.VALIDATE_CREDENTIALS);
    request.removeListener('sign', AWS.EventListeners.Core.SIGN);
    request.addListener('build', function convertToGET(request) {
      request.httpRequest.method = 'GET';
      request.httpRequest.path = '/?' + request.httpRequest.body;
      request.httpRequest.body = '';

      delete request.httpRequest.headers['Content-Length'];
      delete request.httpRequest.headers['Content-Type'];
    });

    return callback ? request.send(callback) : request;
  },


  addAllRequestListeners: function addAllRequestListeners(request) {
    var list = [AWS.events, AWS.EventListeners.Core,
                this.serviceInterface()];
    for (var i = 0; i < list.length; i++) {
      if (list[i]) request.addListeners(list[i]);
    }

    if (!this.config.paramValidation) {
      request.removeListener('validate',
        AWS.EventListeners.Core.VALIDATE_PARAMETERS);
    }

    if (this.config.logger) { // add logging events
      request.addListeners(AWS.EventListeners.Logger);
    }

    this.setupRequestListeners(request);
  },


  setupRequestListeners: function setupRequestListeners() {
  },


  getSignerClass: function getSignerClass() {
    var version = this.api.signatureVersion;
    if (this.config.signatureVersion) version = this.config.signatureVersion;
    else if (this.isRegionV4()) version = 'v4';
    return AWS.Signers.RequestSigner.getVersion(version);
  },


  serviceInterface: function serviceInterface() {
    switch (this.api.format) {
      case 'query': return AWS.EventListeners.Query;
      case 'json': return AWS.EventListeners.Json;
      case 'rest-json': return AWS.EventListeners.RestJson;
      case 'rest-xml': return AWS.EventListeners.RestXml;
    }
    if (this.api.format) {
      throw new Error('Invalid service `format\' ' +
        this.api.format + ' in API config');
    }
  },


  successfulResponse: function successfulResponse(resp) {
    return resp.httpResponse.statusCode < 300;
  },


  numRetries: function numRetries() {
    if (this.config.maxRetries !== undefined) {
      return this.config.maxRetries;
    } else {
      return this.defaultRetryCount;
    }
  },


  retryDelays: function retryDelays() {
    var retryCount = this.numRetries();
    var delays = [];
    for (var i = 0; i < retryCount; ++i) {
      delays[i] = Math.pow(2, i) * 30;
    }
    return delays;
  },


  retryableError: function retryableError(error) {
    if (this.networkingError(error)) return true;
    if (this.expiredCredentialsError(error)) return true;
    if (this.throttledError(error)) return true;
    if (error.statusCode >= 500) return true;
    return false;
  },


  networkingError: function networkingError(error) {
    return error.code == 'NetworkingError';
  },


  expiredCredentialsError: function expiredCredentialsError(error) {
    return (error.code === 'ExpiredTokenException');
  },


  throttledError: function throttledError(error) {
    return (error.code == 'ProvisionedThroughputExceededException');
  },


  setEndpoint: function setEndpoint(endpoint) {
    if (endpoint) {
      this.endpoint = new AWS.Endpoint(endpoint, this.config);
    } else if (this.hasGlobalEndpoint()) {
      this.endpoint = new AWS.Endpoint(this.api.globalEndpoint, this.config);
    } else {
      var host = this.api.endpointPrefix + '.' + this.config.region +
                 this.endpointSuffix();
      this.endpoint = new AWS.Endpoint(host, this.config);
    }
  },


  hasGlobalEndpoint: function hasGlobalEndpoint() {
    if (this.isRegionV4()) return false;
    return this.api.globalEndpoint;
  },


  endpointSuffix: function endpointSuffix() {
    var suffix = '.amazonaws.com';
    if (this.isRegionCN()) return suffix + '.cn';
    else return suffix;
  },


  isRegionCN: function isRegionCN() {
    if (!this.config.region) return false;
    return this.config.region.match(/^cn-/) ? true : false;
  },


  isRegionV4: function isRegionV4() {
    return this.isRegionCN();
  },


  paginationConfig: function paginationConfig(operation, throwException) {
    function fail(name) {
      if (throwException) {
        var e = new Error();
        throw AWS.util.error(e, 'No pagination configuration for ' + name);
      }
      return null;
    }

    if (!this.api.pagination) return fail('service');
    if (!this.api.pagination[operation]) return fail(operation);
    return this.api.pagination[operation];
  }
});

AWS.util.update(AWS.Service, {


  defineMethods: function defineMethods(svc) {
    AWS.util.each(svc.prototype.api.operations, function iterator(method) {
      if (svc.prototype[method]) return;
      svc.prototype[method] = function (params, callback) {
        return this.makeRequest(method, params, callback);
      };
    });
  },


  defineService: function defineService(serviceIdentifier, versions, features) {
    if (!Array.isArray(versions)) {
      features = versions;
      versions = [];
    }

    var svc = inherit(AWS.Service, features || {});
    svc.Client = svc; // backward compatibility for Client class

    if (typeof serviceIdentifier === 'string') {
      var services = {};
      for (var i = 0; i < versions.length; i++) {
        services[versions[i]] = null;
      }

      svc.services = svc.services || services;
      svc.apiVersions = Object.keys(svc.services).sort();
      svc.serviceIdentifier = svc.serviceIdentifier || serviceIdentifier;
    } else { // defineService called with an API
      svc.prototype.api = serviceIdentifier;
      AWS.Service.defineMethods(svc);
    }

    return svc;
  },


  defineServiceApi: function defineServiceApi(superclass, version, apiConfig) {
    var svc = inherit(superclass, {
      serviceIdentifier: superclass.serviceIdentifier
    });

    function setApi(api) {

      if (api.type && api.api_version) {
        svc.prototype.api = new Translator(api, {documentation: false});
      } else {
        svc.prototype.api = api;
      }
    }

    if (typeof version === 'string') {
      if (apiConfig) {
        setApi(apiConfig);
      } else {
        var file = superclass.serviceIdentifier + '-' + version;
        var path = __dirname + '/../apis/' + file + '.json';
        try {
          var fs = require('fs');
          setApi(JSON.parse(fs.readFileSync(path)));
        } catch (err) {
          throw AWS.util.error(err, {
            message: 'Could not find API configuration ' + file
          });
        }
      }
      if (!superclass.services.hasOwnProperty(version)) {
        superclass.apiVersions.push(version);
      }
      superclass.services[version] = svc;
    } else {
      setApi(version);
    }

    AWS.Service.defineMethods(svc);
    return svc;
  }
});
}).call(this,"/")
},{"./api/translator":29,"./core":32,"fs":1}],46:[function(require,module,exports){
var AWS = require('../core');
require('../json/builder');


AWS.ServiceInterface.Json = {
  buildRequest: function buildRequest(req) {
    var httpRequest = req.httpRequest;
    var api = req.service.api;
    var target = api.targetPrefix + '.' + api.operations[req.operation].name;
    var version = api.jsonVersion || '1.0';

    var rules = api.operations[req.operation].input;
    var builder = new AWS.JSON.Builder(rules, api);

    httpRequest.path = '/';
    httpRequest.body = builder.build(req.params || {});
    httpRequest.headers['Content-Type'] = 'application/x-amz-json-' + version;
    httpRequest.headers['X-Amz-Target'] = target;
  },

  extractError: function extractError(resp) {
    var error = {};
    var httpResponse = resp.httpResponse;

    if (httpResponse.body.length > 0) {
      var e = JSON.parse(httpResponse.body.toString());
      if (e.__type || e.code) {
        error.code = (e.__type || e.code).split('#').pop();
      } else {
        error.code = 'UnknownError';
      }
      if (error.code === 'RequestEntityTooLarge') {
        error.message = 'Request body must be less than 1 MB';
      } else {
        error.message = (e.message || e.Message || null);
      }
    } else {
      error.code = httpResponse.statusCode;
      error.message = null;
    }

    resp.error = AWS.util.error(new Error(), error);
  },

  extractData: function extractData(resp) {
    resp.data = JSON.parse(resp.httpResponse.body.toString() || '{}');
  }

};

},{"../core":32,"../json/builder":41}],47:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;

require('../xml/parser');


AWS.ServiceInterface.Query = {
  buildRequest: function buildRequest(req) {
    var operation = req.service.api.operations[req.operation];
    var httpRequest = req.httpRequest;
    httpRequest.path = '/';
    httpRequest.headers['Content-Type'] =
      'application/x-www-form-urlencoded; charset=utf-8';
    httpRequest.params = {
      Version: req.service.api.apiVersion,
      Action: operation.name
    };

    var rules = operation.input;
    if (rules) rules = rules.members;
    var builder = new AWS.QueryParamSerializer(rules, req.service.api);
    builder.serialize(req.params, function(name, value) {
      httpRequest.params[name] = value;
    });
    httpRequest.body = AWS.util.queryParamsToString(httpRequest.params);
  },

  extractError: function extractError(resp) {
    var data, body = resp.httpResponse.body.toString();
    if (body.match('<UnknownOperationException')) {
      data = {
        Code: 'UnknownOperation',
        Message: 'Unknown operation ' + resp.request.operation
      };
    } else {
      data = new AWS.XML.Parser({}).parse(body);
    }

    if (data.Errors) data = data.Errors;
    if (data.Error) data = data.Error;
    if (data.Code) {
      resp.error = AWS.util.error(new Error(), {
        code: data.Code,
        message: data.Message
      });
    } else {
      resp.error = AWS.util.error(new Error(), {
        code: resp.httpResponse.statusCode,
        message: null
      });
    }
  },

  extractData: function extractData(resp) {
    var req = resp.request;
    var operation = req.service.api.operations[req.operation];
    var wrapperKey = operation.name + 'Result';
    var rules = operation.output || {};

    if (req.service.api.resultWrapped) {
      var tmp = {
        type: 'structure',
        members: {}
      };
      tmp.members[wrapperKey] = rules;
      rules = tmp;
    }

    var parser = new AWS.XML.Parser(rules);
    var data = parser.parse(resp.httpResponse.body.toString());

    if (req.service.api.resultWrapped) {
      if (data[wrapperKey]) {
        AWS.util.update(data, data[wrapperKey]);
        delete data[wrapperKey];
      }
    }

    AWS.util.each((operation.output || {}).members || {}, function (memberName, memberRules) {
      if (memberRules.wrapper && data[memberName]) {
        AWS.util.update(data, data[memberName]);
        delete data[memberName];
      }
    });

    resp.data = data;
  }
};


AWS.QueryParamSerializer = inherit({

  constructor: function QueryParamSerializer(rules, options) {
    this.rules = rules;
    this.timestampFormat = options ? options.timestampFormat : 'iso8601';
  },

  serialize: function serialize(params, fn) {
    this.serializeStructure('', params, this.rules, fn);
  },

  serializeStructure: function serializeStructure(prefix, struct, rules, fn) {
    var that = this;
    AWS.util.each(struct, function (name, member) {
      var n = rules[name].name || name;
      var memberName = prefix ? prefix + '.' + n : n;
      that.serializeMember(memberName, member, rules[name], fn);
    });
  },

  serializeMap: function serialzeMap(name, map, rules, fn) {
    var i = 1;
    var that = this;
    AWS.util.each(map, function (key, value) {
      var prefix = rules.flattened ? '.' : '.entry.';
      var position = prefix + (i++) + '.';
      var keyName = position + (rules.keys.name || 'key');
      var valueName = position + (rules.members.name || 'value');
      that.serializeMember(name + keyName, key, rules.keys, fn);
      that.serializeMember(name + valueName, value, rules.members, fn);
    });
  },

  serializeList: function serializeList(name, list, rules, fn) {
    var that = this;
    var memberRules = rules.members || {};
    AWS.util.arrayEach(list, function (v, n) {
      var suffix = '.' + (n + 1);
      if (rules.flattened) {
        if (memberRules.name) {
          var parts = name.split('.');
          parts.pop();
          parts.push(memberRules.name);
          name = parts.join('.');
        }
      } else {
        suffix = '.member' + suffix;
      }
      that.serializeMember(name + suffix, v, memberRules, fn);
    });
  },

  serializeMember: function serializeMember(name, value, rules, fn) {
    if (rules.type === 'structure') {
      this.serializeStructure(name, value, rules.members, fn);
    } else if (rules.type === 'list') {
      this.serializeList(name, value, rules, fn);
    } else if (rules.type === 'map') {
      this.serializeMap(name, value, rules, fn);
    } else if (rules.type === 'timestamp') {
      var timestampFormat = rules.format || this.timestampFormat;
      fn.call(this, name, AWS.util.date.format(value, timestampFormat));
    } else {
      fn.call(this, name, String(value));
    }
  }

});

},{"../core":32,"../xml/parser":93}],48:[function(require,module,exports){
var AWS = require('../core');


AWS.ServiceInterface.Rest = {
  buildRequest: function buildRequest(req) {
    AWS.ServiceInterface.Rest.populateMethod(req);
    AWS.ServiceInterface.Rest.populateURI(req);
    AWS.ServiceInterface.Rest.populateHeaders(req);
  },

  extractError: function extractError() {
  },

  extractData: function extractData(resp) {
    var req = resp.request;
    var data = {};
    var r = resp.httpResponse;
    var operation = req.service.api.operations[req.operation];
    var rules = (operation.output || {}).members || {};

    var headers = {};
    AWS.util.each(r.headers, function (k, v) {
      headers[k.toLowerCase()] = v;
    });

    AWS.util.each(rules, function (name, rule) {
      if (rule.location === 'header') {
        var header = (rule.name || name).toLowerCase();
        if (rule.type == 'map') {
          data[name] = {};
          AWS.util.each(r.headers, function (k, v) {
            var result = k.match(new RegExp('^' + rule.name + '(.+)', 'i'));
            if (result !== null) {
              data[name][result[1]] = v;
            }
          });
        }
        if (headers[header] !== undefined) {
          data[name] = headers[header];
        }
      }
      if (rule.location === 'status') {
        data[name] = parseInt(r.statusCode, 10);
      }
    });

    resp.data = data;
  },

  populateMethod: function populateMethod(req) {
    req.httpRequest.method = req.service.api.operations[req.operation].http.method;
  },

  populateURI: function populateURI(req) {
    var operation = req.service.api.operations[req.operation];
    var uri = operation.http.uri;
    var pathPattern = uri.split(/\?/)[0];
    var rules = (operation.input || {}).members || {};

    var escapePathParam = req.service.escapePathParam ||
      AWS.ServiceInterface.Rest.escapePathParam;
    var escapeQuerystringParam = req.service.escapeQuerystringParam ||
      AWS.ServiceInterface.Rest.escapeQuerystringParam;

    AWS.util.each.call(this, rules, function (name, rule) {
      if (rule.location == 'uri' && req.params[name]) {
        var value = pathPattern.match('{' + name + '}') ?
          escapePathParam(req.params[name]) :
          escapeQuerystringParam(req.params[name]);

        uri = uri.replace('{' + name + '}', value);
      }
    });

    var path = uri.split('?')[0];
    var querystring = uri.split('?')[1];

    if (querystring) {
      var parts = [];
      AWS.util.arrayEach(querystring.split('&'), function (part) {
        if (!part.match('{\\w+}')) parts.push(part);
      });
      uri = (parts.length > 0 ? path + '?' + parts.join('&') : path);
    } else {
      uri = path;
    }

    req.httpRequest.path = uri;
  },

  escapePathParam: function escapePathParam(value) {
    return AWS.util.uriEscape(String(value));
  },

  escapeQuerystringParam: function escapeQuerystringParam(value) {
    return AWS.util.uriEscape(String(value));
  },

  populateHeaders: function populateHeaders(req) {
    var operation = req.service.api.operations[req.operation];
    var rules = (operation.input || {}).members || {};

    AWS.util.each.call(this, rules, function (name, rule) {
      if (rule.location === 'header' && req.params[name]) {
        if (rule.type === 'map') {
          AWS.util.each(req.params[name], function (key, value) {
            req.httpRequest.headers[rule.name + key] = value;
          });
        } else {
          var value = req.params[name];
          if (rule.type === 'timestamp') {
            var timestampFormat = rule.format || req.service.api.timestampFormat;
            value = AWS.util.date.format(value, timestampFormat);
          }
          req.httpRequest.headers[rule.name || name] = value;
        }
      }
    });

  }
};

},{"../core":32}],49:[function(require,module,exports){
var AWS = require('../core');
require('./rest');
require('./json');


AWS.ServiceInterface.RestJson = {
  buildRequest: function buildRequest(req) {
    AWS.ServiceInterface.Rest.buildRequest(req);
    AWS.ServiceInterface.RestJson.populateBody(req);
  },

  extractError: function extractError(resp) {
    AWS.ServiceInterface.Json.extractError(resp);
  },

  extractData: function extractData(resp) {
    AWS.ServiceInterface.Rest.extractData(resp);

    var req = resp.request;
    var rules = req.service.api.operations[req.operation].output || {};
    if (rules.payload && rules.members[rules.payload]) {
      if (rules.members[rules.payload].streaming) {
        resp.data[rules.payload] = resp.httpResponse.body;
      } else {
        resp.data[rules.payload] = resp.httpResponse.body.toString();
      }
    } else {
      var data = resp.data;
      AWS.ServiceInterface.Json.extractData(resp);
      resp.data = AWS.util.merge(data, resp.data);
    }

    resp.data.RequestId = resp.httpResponse.headers['x-amz-request-id'] ||
                          resp.httpResponse.headers['x-amzn-requestid'];
  },

  populateBody: function populateBody(req) {
    var input = req.service.api.operations[req.operation].input;
    var payload = input.payload;
    var params = {};

    if (typeof payload === 'string') {

      var rules = input.members[payload];
      params = req.params[payload];

      if (params === undefined) return;

      if (rules.type === 'structure') {
        req.httpRequest.body = this.buildJSON(params, input, req.service.api);
      } else {
        req.httpRequest.body = params;
      }

    } else if (payload) {

      AWS.util.arrayEach(payload, function (param) {
        if (req.params[param] !== undefined) {
          params[param] = req.params[param];
        }
      });
      req.httpRequest.body = this.buildJSON(params, input, req.service.api);

    }
  },

  buildJSON: function buildJSON(params, rules, api) {
    var builder = new AWS.JSON.Builder(rules, api);
    return builder.build(params);
  }

};

},{"../core":32,"./json":46,"./rest":48}],50:[function(require,module,exports){
var AWS = require('../core');
require('../xml/builder');
require('./rest');


AWS.ServiceInterface.RestXml = {
  buildRequest: function buildRequest(req) {
    AWS.ServiceInterface.Rest.buildRequest(req);
    AWS.ServiceInterface.RestXml.populateBody(req);
  },

  extractError: function extractError(resp) {
    AWS.ServiceInterface.Rest.extractError(resp);

    var data = new AWS.XML.Parser({}).parse(resp.httpResponse.body.toString());
    if (data.Errors) data = data.Errors;
    if (data.Error) data = data.Error;
    if (data.Code) {
      resp.error = AWS.util.error(new Error(), {
        code: data.Code,
        message: data.Message
      });
    } else {
      resp.error = AWS.util.error(new Error(), {
        code: resp.httpResponse.statusCode,
        message: null
      });
    }
  },

  extractData: function extractData(resp) {
    AWS.ServiceInterface.Rest.extractData(resp);

    var req = resp.request;
    var httpResponse = resp.httpResponse;
    var operation = req.service.api.operations[req.operation];
    var rules = operation.output.members;

    var output = operation.output;
    var payload = output.payload;

    if (payload) {
      if (rules[payload].streaming) {
        resp.data[payload] = httpResponse.body;
      } else {
        resp.data[payload] = httpResponse.body.toString();
      }
    } else if (httpResponse.body.length > 0) {
      var parser = new AWS.XML.Parser(operation.output || {});
      AWS.util.update(resp.data, parser.parse(httpResponse.body.toString()));
    }

    resp.data.RequestId = httpResponse.headers['x-amz-request-id'] ||
                          httpResponse.headers['x-amzn-requestid'];
  },

  populateBody: function populateBody(req) {
    var input = req.service.api.operations[req.operation].input;
    var payload = input.payload;
    var rules = {};
    var builder = null;
    var params = req.params;

    if (typeof payload === 'string') {

      rules = input.members[payload];
      params = params[payload];

      if (params === undefined) return;

      if (rules.type === 'structure') {
        builder = new AWS.XML.Builder(payload, rules.members, req.service.api);
        req.httpRequest.body = builder.toXML(params);
      } else {
        req.httpRequest.body = params;
      }

    } else if (payload) {

      AWS.util.arrayEach(payload, function (member) {
        rules[member] = input.members[member];
      });

      builder = new AWS.XML.Builder(input.wrapper, rules, req.service.api);
      req.httpRequest.body = builder.toXML(params);

    }

  }
};

},{"../core":32,"../xml/builder":92,"./rest":48}],51:[function(require,module,exports){
var AWS = require("./core"); module.exports = AWS;
AWS.Service.defineServiceApi(require("./services/autoscaling"), "2011-01-01", {"format":"query","apiVersion":"2011-01-01","endpointPrefix":"autoscaling","resultWrapped":true,"serviceFullName":"Auto Scaling","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"attachInstances":{"name":"AttachInstances","input":{"type":"structure","members":{"InstanceIds":{"type":"list","members":{}},"AutoScalingGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"createAutoScalingGroup":{"name":"CreateAutoScalingGroup","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"LaunchConfigurationName":{},"InstanceId":{},"MinSize":{"type":"integer","required":true},"MaxSize":{"type":"integer","required":true},"DesiredCapacity":{"type":"integer"},"DefaultCooldown":{"type":"integer"},"AvailabilityZones":{"type":"list","members":{}},"LoadBalancerNames":{"type":"list","members":{}},"HealthCheckType":{},"HealthCheckGracePeriod":{"type":"integer"},"PlacementGroup":{},"VPCZoneIdentifier":{},"TerminationPolicies":{"type":"list","members":{}},"Tags":{"type":"list","members":{"type":"structure","members":{"ResourceId":{},"ResourceType":{},"Key":{"required":true},"Value":{},"PropagateAtLaunch":{"type":"boolean"}}}}}},"output":{"type":"structure","members":{}}},"createLaunchConfiguration":{"name":"CreateLaunchConfiguration","input":{"type":"structure","members":{"LaunchConfigurationName":{"required":true},"ImageId":{},"KeyName":{},"SecurityGroups":{"type":"list","members":{}},"UserData":{},"InstanceId":{},"InstanceType":{},"KernelId":{},"RamdiskId":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{"required":true},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"VolumeType":{},"DeleteOnTermination":{"type":"boolean"},"Iops":{"type":"integer"}}},"NoDevice":{"type":"boolean"}}}},"InstanceMonitoring":{"type":"structure","members":{"Enabled":{"type":"boolean"}}},"SpotPrice":{},"IamInstanceProfile":{},"EbsOptimized":{"type":"boolean"},"AssociatePublicIpAddress":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"createOrUpdateTags":{"name":"CreateOrUpdateTags","input":{"type":"structure","members":{"Tags":{"type":"list","members":{"type":"structure","members":{"ResourceId":{},"ResourceType":{},"Key":{"required":true},"Value":{},"PropagateAtLaunch":{"type":"boolean"}}},"required":true}}},"output":{"type":"structure","members":{}}},"deleteAutoScalingGroup":{"name":"DeleteAutoScalingGroup","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"ForceDelete":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"deleteLaunchConfiguration":{"name":"DeleteLaunchConfiguration","input":{"type":"structure","members":{"LaunchConfigurationName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteNotificationConfiguration":{"name":"DeleteNotificationConfiguration","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"TopicARN":{"required":true}}},"output":{"type":"structure","members":{}}},"deletePolicy":{"name":"DeletePolicy","input":{"type":"structure","members":{"AutoScalingGroupName":{},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteScheduledAction":{"name":"DeleteScheduledAction","input":{"type":"structure","members":{"AutoScalingGroupName":{},"ScheduledActionName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteTags":{"name":"DeleteTags","input":{"type":"structure","members":{"Tags":{"type":"list","members":{"type":"structure","members":{"ResourceId":{},"ResourceType":{},"Key":{"required":true},"Value":{},"PropagateAtLaunch":{"type":"boolean"}}},"required":true}}},"output":{"type":"structure","members":{}}},"describeAccountLimits":{"name":"DescribeAccountLimits","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"MaxNumberOfAutoScalingGroups":{"type":"integer"},"MaxNumberOfLaunchConfigurations":{"type":"integer"}}}},"describeAdjustmentTypes":{"name":"DescribeAdjustmentTypes","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"AdjustmentTypes":{"type":"list","members":{"type":"structure","members":{"AdjustmentType":{}}}}}}},"describeAutoScalingGroups":{"name":"DescribeAutoScalingGroups","input":{"type":"structure","members":{"AutoScalingGroupNames":{"type":"list","members":{}},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"AutoScalingGroups":{"type":"list","members":{"type":"structure","members":{"AutoScalingGroupName":{},"AutoScalingGroupARN":{},"LaunchConfigurationName":{},"MinSize":{"type":"integer"},"MaxSize":{"type":"integer"},"DesiredCapacity":{"type":"integer"},"DefaultCooldown":{"type":"integer"},"AvailabilityZones":{"type":"list","members":{}},"LoadBalancerNames":{"type":"list","members":{}},"HealthCheckType":{},"HealthCheckGracePeriod":{"type":"integer"},"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{},"AvailabilityZone":{},"LifecycleState":{},"HealthStatus":{},"LaunchConfigurationName":{}}}},"CreatedTime":{"type":"timestamp"},"SuspendedProcesses":{"type":"list","members":{"type":"structure","members":{"ProcessName":{},"SuspensionReason":{}}}},"PlacementGroup":{},"VPCZoneIdentifier":{},"EnabledMetrics":{"type":"list","members":{"type":"structure","members":{"Metric":{},"Granularity":{}}}},"Status":{},"Tags":{"type":"list","members":{"type":"structure","members":{"ResourceId":{},"ResourceType":{},"Key":{},"Value":{},"PropagateAtLaunch":{"type":"boolean"}}}},"TerminationPolicies":{"type":"list","members":{}}}}},"NextToken":{}}}},"describeAutoScalingInstances":{"name":"DescribeAutoScalingInstances","input":{"type":"structure","members":{"InstanceIds":{"type":"list","members":{}},"MaxRecords":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"AutoScalingInstances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{},"AutoScalingGroupName":{},"AvailabilityZone":{},"LifecycleState":{},"HealthStatus":{},"LaunchConfigurationName":{}}}},"NextToken":{}}}},"describeAutoScalingNotificationTypes":{"name":"DescribeAutoScalingNotificationTypes","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"AutoScalingNotificationTypes":{"type":"list","members":{}}}}},"describeLaunchConfigurations":{"name":"DescribeLaunchConfigurations","input":{"type":"structure","members":{"LaunchConfigurationNames":{"type":"list","members":{}},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"LaunchConfigurations":{"type":"list","members":{"type":"structure","members":{"LaunchConfigurationName":{},"LaunchConfigurationARN":{},"ImageId":{},"KeyName":{},"SecurityGroups":{"type":"list","members":{}},"UserData":{},"InstanceType":{},"KernelId":{},"RamdiskId":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"VolumeType":{},"DeleteOnTermination":{"type":"boolean"},"Iops":{"type":"integer"}}},"NoDevice":{"type":"boolean"}}}},"InstanceMonitoring":{"type":"structure","members":{"Enabled":{"type":"boolean"}}},"SpotPrice":{},"IamInstanceProfile":{},"CreatedTime":{"type":"timestamp"},"EbsOptimized":{"type":"boolean"},"AssociatePublicIpAddress":{"type":"boolean"}}}},"NextToken":{}}}},"describeMetricCollectionTypes":{"name":"DescribeMetricCollectionTypes","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"Metrics":{"type":"list","members":{"type":"structure","members":{"Metric":{}}}},"Granularities":{"type":"list","members":{"type":"structure","members":{"Granularity":{}}}}}}},"describeNotificationConfigurations":{"name":"DescribeNotificationConfigurations","input":{"type":"structure","members":{"AutoScalingGroupNames":{"type":"list","members":{}},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"NotificationConfigurations":{"type":"list","members":{"type":"structure","members":{"AutoScalingGroupName":{},"TopicARN":{},"NotificationType":{}}}},"NextToken":{}}}},"describePolicies":{"name":"DescribePolicies","input":{"type":"structure","members":{"AutoScalingGroupName":{},"PolicyNames":{"type":"list","members":{}},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"ScalingPolicies":{"type":"list","members":{"type":"structure","members":{"AutoScalingGroupName":{},"PolicyName":{},"ScalingAdjustment":{"type":"integer"},"AdjustmentType":{},"Cooldown":{"type":"integer"},"PolicyARN":{},"Alarms":{"type":"list","members":{"type":"structure","members":{"AlarmName":{},"AlarmARN":{}}}},"MinAdjustmentStep":{"type":"integer"}}}},"NextToken":{}}}},"describeScalingActivities":{"name":"DescribeScalingActivities","input":{"type":"structure","members":{"ActivityIds":{"type":"list","members":{}},"AutoScalingGroupName":{},"MaxRecords":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"Activities":{"type":"list","members":{"type":"structure","members":{"ActivityId":{},"AutoScalingGroupName":{},"Description":{},"Cause":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"StatusCode":{},"StatusMessage":{},"Progress":{"type":"integer"},"Details":{}}}},"NextToken":{}}}},"describeScalingProcessTypes":{"name":"DescribeScalingProcessTypes","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"Processes":{"type":"list","members":{"type":"structure","members":{"ProcessName":{}}}}}}},"describeScheduledActions":{"name":"DescribeScheduledActions","input":{"type":"structure","members":{"AutoScalingGroupName":{},"ScheduledActionNames":{"type":"list","members":{}},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"ScheduledUpdateGroupActions":{"type":"list","members":{"type":"structure","members":{"AutoScalingGroupName":{},"ScheduledActionName":{},"ScheduledActionARN":{},"Time":{"type":"timestamp"},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Recurrence":{},"MinSize":{"type":"integer"},"MaxSize":{"type":"integer"},"DesiredCapacity":{"type":"integer"}}}},"NextToken":{}}}},"describeTags":{"name":"DescribeTags","input":{"type":"structure","members":{"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{}}}}},"NextToken":{},"MaxRecords":{"type":"integer"}}},"output":{"type":"structure","members":{"Tags":{"type":"list","members":{"type":"structure","members":{"ResourceId":{},"ResourceType":{},"Key":{},"Value":{},"PropagateAtLaunch":{"type":"boolean"}}}},"NextToken":{}}}},"describeTerminationPolicyTypes":{"name":"DescribeTerminationPolicyTypes","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"TerminationPolicyTypes":{"type":"list","members":{}}}}},"disableMetricsCollection":{"name":"DisableMetricsCollection","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"Metrics":{"type":"list","members":{}}}},"output":{"type":"structure","members":{}}},"enableMetricsCollection":{"name":"EnableMetricsCollection","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"Metrics":{"type":"list","members":{}},"Granularity":{"required":true}}},"output":{"type":"structure","members":{}}},"executePolicy":{"name":"ExecutePolicy","input":{"type":"structure","members":{"AutoScalingGroupName":{},"PolicyName":{"required":true},"HonorCooldown":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"putNotificationConfiguration":{"name":"PutNotificationConfiguration","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"TopicARN":{"required":true},"NotificationTypes":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"putScalingPolicy":{"name":"PutScalingPolicy","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"PolicyName":{"required":true},"ScalingAdjustment":{"type":"integer","required":true},"AdjustmentType":{"required":true},"Cooldown":{"type":"integer"},"MinAdjustmentStep":{"type":"integer"}}},"output":{"type":"structure","members":{"PolicyARN":{}}}},"putScheduledUpdateGroupAction":{"name":"PutScheduledUpdateGroupAction","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"ScheduledActionName":{"required":true},"Time":{"type":"timestamp"},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Recurrence":{},"MinSize":{"type":"integer"},"MaxSize":{"type":"integer"},"DesiredCapacity":{"type":"integer"}}},"output":{"type":"structure","members":{}}},"resumeProcesses":{"name":"ResumeProcesses","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"ScalingProcesses":{"type":"list","members":{}}}},"output":{"type":"structure","members":{}}},"setDesiredCapacity":{"name":"SetDesiredCapacity","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"DesiredCapacity":{"type":"integer","required":true},"HonorCooldown":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"setInstanceHealth":{"name":"SetInstanceHealth","input":{"type":"structure","members":{"InstanceId":{"required":true},"HealthStatus":{"required":true},"ShouldRespectGracePeriod":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"suspendProcesses":{"name":"SuspendProcesses","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"ScalingProcesses":{"type":"list","members":{}}}},"output":{"type":"structure","members":{}}},"terminateInstanceInAutoScalingGroup":{"name":"TerminateInstanceInAutoScalingGroup","input":{"type":"structure","members":{"InstanceId":{"required":true},"ShouldDecrementDesiredCapacity":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{"Activity":{"type":"structure","members":{"ActivityId":{},"AutoScalingGroupName":{},"Description":{},"Cause":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"StatusCode":{},"StatusMessage":{},"Progress":{"type":"integer"},"Details":{}}}}}},"updateAutoScalingGroup":{"name":"UpdateAutoScalingGroup","input":{"type":"structure","members":{"AutoScalingGroupName":{"required":true},"LaunchConfigurationName":{},"MinSize":{"type":"integer"},"MaxSize":{"type":"integer"},"DesiredCapacity":{"type":"integer"},"DefaultCooldown":{"type":"integer"},"AvailabilityZones":{"type":"list","members":{}},"HealthCheckType":{},"HealthCheckGracePeriod":{"type":"integer"},"PlacementGroup":{},"VPCZoneIdentifier":{},"TerminationPolicies":{"type":"list","members":{}}}},"output":{"type":"structure","members":{}}}},"pagination":{"describeAutoScalingGroups":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"AutoScalingGroups"},"describeAutoScalingInstances":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"AutoScalingInstances"},"describeLaunchConfigurations":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"LaunchConfigurations"},"describeNotificationConfigurations":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"NotificationConfigurations"},"describePolicies":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"ScalingPolicies"},"describeScalingActivities":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"Activities"},"describeScheduledActions":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"ScheduledUpdateGroupActions"},"describeTags":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"Tags"}}});
AWS.Service.defineServiceApi(require("./services/cloudformation"), "2010-05-15", {"format":"query","apiVersion":"2010-05-15","endpointPrefix":"cloudformation","resultWrapped":true,"serviceFullName":"AWS CloudFormation","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"cancelUpdateStack":{"name":"CancelUpdateStack","input":{"type":"structure","members":{"StackName":{"required":true}}},"output":{"type":"structure","members":{}}},"createStack":{"name":"CreateStack","input":{"type":"structure","members":{"StackName":{"required":true},"TemplateBody":{},"TemplateURL":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterKey":{},"ParameterValue":{}}}},"DisableRollback":{"type":"boolean"},"TimeoutInMinutes":{"type":"integer"},"NotificationARNs":{"type":"list","members":{}},"Capabilities":{"type":"list","members":{}},"OnFailure":{},"StackPolicyBody":{},"StackPolicyURL":{},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}}}},"output":{"type":"structure","members":{"StackId":{}}}},"deleteStack":{"name":"DeleteStack","input":{"type":"structure","members":{"StackName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeStackEvents":{"name":"DescribeStackEvents","input":{"type":"structure","members":{"StackName":{},"NextToken":{}}},"output":{"type":"structure","members":{"StackEvents":{"type":"list","members":{"type":"structure","members":{"StackId":{},"EventId":{},"StackName":{},"LogicalResourceId":{},"PhysicalResourceId":{},"ResourceType":{},"Timestamp":{"type":"timestamp"},"ResourceStatus":{},"ResourceStatusReason":{},"ResourceProperties":{}}}},"NextToken":{}}}},"describeStackResource":{"name":"DescribeStackResource","input":{"type":"structure","members":{"StackName":{"required":true},"LogicalResourceId":{"required":true}}},"output":{"type":"structure","members":{"StackResourceDetail":{"type":"structure","members":{"StackName":{},"StackId":{},"LogicalResourceId":{},"PhysicalResourceId":{},"ResourceType":{},"LastUpdatedTimestamp":{"type":"timestamp"},"ResourceStatus":{},"ResourceStatusReason":{},"Description":{},"Metadata":{}}}}}},"describeStackResources":{"name":"DescribeStackResources","input":{"type":"structure","members":{"StackName":{},"LogicalResourceId":{},"PhysicalResourceId":{}}},"output":{"type":"structure","members":{"StackResources":{"type":"list","members":{"type":"structure","members":{"StackName":{},"StackId":{},"LogicalResourceId":{},"PhysicalResourceId":{},"ResourceType":{},"Timestamp":{"type":"timestamp"},"ResourceStatus":{},"ResourceStatusReason":{},"Description":{}}}}}}},"describeStacks":{"name":"DescribeStacks","input":{"type":"structure","members":{"StackName":{},"NextToken":{}}},"output":{"type":"structure","members":{"Stacks":{"type":"list","members":{"type":"structure","members":{"StackId":{},"StackName":{},"Description":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterKey":{},"ParameterValue":{}}}},"CreationTime":{"type":"timestamp"},"LastUpdatedTime":{"type":"timestamp"},"StackStatus":{},"StackStatusReason":{},"DisableRollback":{"type":"boolean"},"NotificationARNs":{"type":"list","members":{}},"TimeoutInMinutes":{"type":"integer"},"Capabilities":{"type":"list","members":{}},"Outputs":{"type":"list","members":{"type":"structure","members":{"OutputKey":{},"OutputValue":{},"Description":{}}}},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}}}}},"NextToken":{}}}},"estimateTemplateCost":{"name":"EstimateTemplateCost","input":{"type":"structure","members":{"TemplateBody":{},"TemplateURL":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterKey":{},"ParameterValue":{}}}}}},"output":{"type":"structure","members":{"Url":{}}}},"getStackPolicy":{"name":"GetStackPolicy","input":{"type":"structure","members":{"StackName":{"required":true}}},"output":{"type":"structure","members":{"StackPolicyBody":{}}}},"getTemplate":{"name":"GetTemplate","input":{"type":"structure","members":{"StackName":{"required":true}}},"output":{"type":"structure","members":{"TemplateBody":{}}}},"listStackResources":{"name":"ListStackResources","input":{"type":"structure","members":{"StackName":{"required":true},"NextToken":{}}},"output":{"type":"structure","members":{"StackResourceSummaries":{"type":"list","members":{"type":"structure","members":{"LogicalResourceId":{},"PhysicalResourceId":{},"ResourceType":{},"LastUpdatedTimestamp":{"type":"timestamp"},"ResourceStatus":{},"ResourceStatusReason":{}}}},"NextToken":{}}}},"listStacks":{"name":"ListStacks","input":{"type":"structure","members":{"NextToken":{},"StackStatusFilter":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"StackSummaries":{"type":"list","members":{"type":"structure","members":{"StackId":{},"StackName":{},"TemplateDescription":{},"CreationTime":{"type":"timestamp"},"LastUpdatedTime":{"type":"timestamp"},"DeletionTime":{"type":"timestamp"},"StackStatus":{},"StackStatusReason":{}}}},"NextToken":{}}}},"setStackPolicy":{"name":"SetStackPolicy","input":{"type":"structure","members":{"StackName":{"required":true},"StackPolicyBody":{},"StackPolicyURL":{}}},"output":{"type":"structure","members":{}}},"updateStack":{"name":"UpdateStack","input":{"type":"structure","members":{"StackName":{"required":true},"TemplateBody":{},"TemplateURL":{},"StackPolicyDuringUpdateBody":{},"StackPolicyDuringUpdateURL":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterKey":{},"ParameterValue":{}}}},"Capabilities":{"type":"list","members":{}},"StackPolicyBody":{},"StackPolicyURL":{}}},"output":{"type":"structure","members":{"StackId":{}}}},"validateTemplate":{"name":"ValidateTemplate","input":{"type":"structure","members":{"TemplateBody":{},"TemplateURL":{}}},"output":{"type":"structure","members":{"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterKey":{},"DefaultValue":{},"NoEcho":{"type":"boolean"},"Description":{}}}},"Description":{},"Capabilities":{"type":"list","members":{}},"CapabilitiesReason":{}}}}},"pagination":{"describeStackEvents":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"StackEvents"},"describeStacks":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Stacks"},"listStackResources":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"StackResourceSummaries"},"listStacks":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"StackSummaries"}}});
AWS.Service.defineServiceApi(require("./services/cloudfront"), "2012-05-05", {"format":"rest-xml","apiVersion":"2012-05-05","endpointPrefix":"cloudfront","globalEndpoint":"cloudfront.amazonaws.com","serviceAbbreviation":"CloudFront","serviceFullName":"Amazon CloudFront","signatureVersion":"cloudfront","timestampFormat":"iso8601","xmlnamespace":"http://cloudfront.amazonaws.com/doc/2012-05-05/","operations":{"createCloudFrontOriginAccessIdentity":{"name":"CreateCloudFrontOriginAccessIdentity2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront","method":"POST"},"input":{"payload":"CloudFrontOriginAccessIdentityConfig","type":"structure","members":{"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Comment":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"createDistribution":{"name":"CreateDistribution2012_05_05","http":{"uri":"/2012-05-05/distribution","method":"POST"},"input":{"payload":"DistributionConfig","type":"structure","members":{"DistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"DefaultRootObject":{"required":true},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"DomainName":{"required":true},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{"required":true}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer","required":true},"HTTPSPort":{"type":"integer","required":true},"OriginProtocolPolicy":{"required":true}}}},"name":"Origin"}}},"required":true},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true}},"required":true},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{"required":true},"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true}},"name":"CacheBehavior"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"Enabled":{"type":"boolean","required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}},"name":"CacheBehavior"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"Enabled":{"type":"boolean"}}}}}},"createInvalidation":{"name":"CreateInvalidation2012_05_05","http":{"uri":"/2012-05-05/distribution/{DistributionId}/invalidation","method":"POST"},"input":{"payload":"InvalidationBatch","type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Path"}}},"required":true},"CallerReference":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"Id":{},"Status":{},"CreateTime":{"type":"timestamp"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Path"}}}},"CallerReference":{}}}}}},"createStreamingDistribution":{"name":"CreateStreamingDistribution2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution","method":"POST"},"input":{"payload":"StreamingDistributionConfig","type":"structure","members":{"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"S3Origin":{"type":"structure","members":{"DomainName":{"required":true},"OriginAccessIdentity":{"required":true}},"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"Enabled":{"type":"boolean","required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Enabled":{"type":"boolean"}}}}}},"deleteCloudFrontOriginAccessIdentity":{"name":"DeleteCloudFrontOriginAccessIdentity2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"deleteDistribution":{"name":"DeleteDistribution2012_05_05","http":{"uri":"/2012-05-05/distribution/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"deleteStreamingDistribution":{"name":"DeleteStreamingDistribution2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"getCloudFrontOriginAccessIdentity":{"name":"GetCloudFrontOriginAccessIdentity2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"getCloudFrontOriginAccessIdentityConfig":{"name":"GetCloudFrontOriginAccessIdentityConfig2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"Comment":{}}}},"getDistribution":{"name":"GetDistribution2012_05_05","http":{"uri":"/2012-05-05/distribution/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}},"name":"CacheBehavior"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"Enabled":{"type":"boolean"}}}}}},"getDistributionConfig":{"name":"GetDistributionConfig2012_05_05","http":{"uri":"/2012-05-05/distribution/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}},"name":"CacheBehavior"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"Enabled":{"type":"boolean"}}}},"getInvalidation":{"name":"GetInvalidation2012_05_05","http":{"uri":"/2012-05-05/distribution/{DistributionId}/invalidation/{Id}","method":"GET"},"input":{"type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"Id":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Id":{},"Status":{},"CreateTime":{"type":"timestamp"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Path"}}}},"CallerReference":{}}}}}},"getStreamingDistribution":{"name":"GetStreamingDistribution2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Enabled":{"type":"boolean"}}}}}},"getStreamingDistributionConfig":{"name":"GetStreamingDistributionConfig2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Enabled":{"type":"boolean"}}}},"listCloudFrontOriginAccessIdentities":{"name":"ListCloudFrontOriginAccessIdentities2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"S3CanonicalUserId":{},"Comment":{}},"name":"CloudFrontOriginAccessIdentitySummary"}}}}},"listDistributions":{"name":"ListDistributions2012_05_05","http":{"uri":"/2012-05-05/distribution?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}},"name":"CacheBehavior"}}}},"Comment":{},"Enabled":{"type":"boolean"}},"name":"DistributionSummary"}}}}},"listInvalidations":{"name":"ListInvalidations2012_05_05","http":{"uri":"/2012-05-05/distribution/{DistributionId}/invalidation?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"Status":{}},"name":"InvalidationSummary"}}}}},"listStreamingDistributions":{"name":"ListStreamingDistributions2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Comment":{},"Enabled":{"type":"boolean"}},"name":"StreamingDistributionSummary"}}}}},"updateCloudFrontOriginAccessIdentity":{"name":"UpdateCloudFrontOriginAccessIdentity2012_05_05","http":{"uri":"/2012-05-05/origin-access-identity/cloudfront/{Id}/config","method":"PUT"},"input":{"payload":"CloudFrontOriginAccessIdentityConfig","type":"structure","members":{"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Comment":{"required":true}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"updateDistribution":{"name":"UpdateDistribution2012_05_05","http":{"uri":"/2012-05-05/distribution/{Id}/config","method":"PUT"},"input":{"payload":"DistributionConfig","type":"structure","members":{"DistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"DefaultRootObject":{"required":true},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"DomainName":{"required":true},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{"required":true}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer","required":true},"HTTPSPort":{"type":"integer","required":true},"OriginProtocolPolicy":{"required":true}}}},"name":"Origin"}}},"required":true},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true}},"required":true},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{"required":true},"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true}},"name":"CacheBehavior"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"Enabled":{"type":"boolean","required":true}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"}},"name":"CacheBehavior"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"Enabled":{"type":"boolean"}}}}}},"updateStreamingDistribution":{"name":"UpdateStreamingDistribution2012_05_05","http":{"uri":"/2012-05-05/streaming-distribution/{Id}/config","method":"PUT"},"input":{"payload":"StreamingDistributionConfig","type":"structure","members":{"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"S3Origin":{"type":"structure","members":{"DomainName":{"required":true},"OriginAccessIdentity":{"required":true}},"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"Enabled":{"type":"boolean","required":true}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Enabled":{"type":"boolean"}}}}}}},"pagination":{"listCloudFrontOriginAccessIdentities":{"inputToken":"Marker","outputToken":"NextMarker","moreResults":"IsTruncated","resultKey":"Items"},"listDistributions":{"inputToken":"Marker","outputToken":"NextMarker","moreResults":"IsTruncated","resultKey":"Items"},"listInvalidations":{"inputToken":"Marker","outputToken":"NextMarker","moreResults":"IsTruncated","resultKey":"Items"},"listStreamingDistributions":{"inputToken":"Marker","outputToken":"NextMarker","moreResults":"IsTruncated","resultKey":"Items"}}});
AWS.Service.defineServiceApi(require("./services/cloudfront"), "2013-11-11", {"format":"rest-xml","apiVersion":"2013-11-11","endpointPrefix":"cloudfront","globalEndpoint":"cloudfront.amazonaws.com","serviceAbbreviation":"CloudFront","serviceFullName":"Amazon CloudFront","signatureVersion":"v4","timestampFormat":"iso8601","xmlnamespace":"http://cloudfront.amazonaws.com/doc/2013-11-11/","operations":{"createCloudFrontOriginAccessIdentity":{"name":"CreateCloudFrontOriginAccessIdentity2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront","method":"POST"},"input":{"payload":"CloudFrontOriginAccessIdentityConfig","type":"structure","members":{"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Comment":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"createDistribution":{"name":"CreateDistribution2013_11_11","http":{"uri":"/2013-11-11/distribution","method":"POST"},"input":{"payload":"DistributionConfig","type":"structure","members":{"DistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"DefaultRootObject":{"required":true},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"DomainName":{"required":true},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{"required":true}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer","required":true},"HTTPSPort":{"type":"integer","required":true},"OriginProtocolPolicy":{"required":true}}}},"name":"Origin"}}},"required":true},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true},"Cookies":{"type":"structure","members":{"Forward":{"required":true},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Name"}}}}},"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Method"}}}}},"required":true},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{"required":true},"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true},"Cookies":{"type":"structure","members":{"Forward":{"required":true},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Name"}}}}},"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}},"required":true},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer","required":true},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"IncludeCookies":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"PriceClass":{"required":true},"Enabled":{"type":"boolean","required":true},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{"required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Location"}}},"required":true}}}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}}},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer"},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"IncludeCookies":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"PriceClass":{},"Enabled":{"type":"boolean"},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Location"}}}}}}}}}}},"createInvalidation":{"name":"CreateInvalidation2013_11_11","http":{"uri":"/2013-11-11/distribution/{DistributionId}/invalidation","method":"POST"},"input":{"payload":"InvalidationBatch","type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Path"}}},"required":true},"CallerReference":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"Id":{},"Status":{},"CreateTime":{"type":"timestamp"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Path"}}}},"CallerReference":{}}}}}},"createStreamingDistribution":{"name":"CreateStreamingDistribution2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution","method":"POST"},"input":{"payload":"StreamingDistributionConfig","type":"structure","members":{"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"S3Origin":{"type":"structure","members":{"DomainName":{"required":true},"OriginAccessIdentity":{"required":true}},"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"PriceClass":{"required":true},"Enabled":{"type":"boolean","required":true}},"required":true}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"},"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"PriceClass":{},"Enabled":{"type":"boolean"}}}}}},"deleteCloudFrontOriginAccessIdentity":{"name":"DeleteCloudFrontOriginAccessIdentity2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"deleteDistribution":{"name":"DeleteDistribution2013_11_11","http":{"uri":"/2013-11-11/distribution/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"deleteStreamingDistribution":{"name":"DeleteStreamingDistribution2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution/{Id}","method":"DELETE"},"input":{"type":"structure","members":{"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{}}},"getCloudFrontOriginAccessIdentity":{"name":"GetCloudFrontOriginAccessIdentity2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"getCloudFrontOriginAccessIdentityConfig":{"name":"GetCloudFrontOriginAccessIdentityConfig2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"Comment":{}}}},"getDistribution":{"name":"GetDistribution2013_11_11","http":{"uri":"/2013-11-11/distribution/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}}},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer"},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"IncludeCookies":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"PriceClass":{},"Enabled":{"type":"boolean"},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Location"}}}}}}}}}}},"getDistributionConfig":{"name":"GetDistributionConfig2013_11_11","http":{"uri":"/2013-11-11/distribution/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}}},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer"},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"IncludeCookies":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"PriceClass":{},"Enabled":{"type":"boolean"},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Location"}}}}}}}}},"getInvalidation":{"name":"GetInvalidation2013_11_11","http":{"uri":"/2013-11-11/distribution/{DistributionId}/invalidation/{Id}","method":"GET"},"input":{"type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"Id":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Id":{},"Status":{},"CreateTime":{"type":"timestamp"},"InvalidationBatch":{"type":"structure","members":{"Paths":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Path"}}}},"CallerReference":{}}}}}},"getStreamingDistribution":{"name":"GetStreamingDistribution2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution/{Id}","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"PriceClass":{},"Enabled":{"type":"boolean"}}}}}},"getStreamingDistributionConfig":{"name":"GetStreamingDistributionConfig2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution/{Id}/config","method":"GET"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"PriceClass":{},"Enabled":{"type":"boolean"}}}},"listCloudFrontOriginAccessIdentities":{"name":"ListCloudFrontOriginAccessIdentities2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"S3CanonicalUserId":{},"Comment":{}},"name":"CloudFrontOriginAccessIdentitySummary"}}}}},"listDistributions":{"name":"ListDistributions2013_11_11","http":{"uri":"/2013-11-11/distribution?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}}},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer"},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{},"PriceClass":{},"Enabled":{"type":"boolean"},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Location"}}}}}}},"name":"DistributionSummary"}}}}},"listInvalidations":{"name":"ListInvalidations2013_11_11","http":{"uri":"/2013-11-11/distribution/{DistributionId}/invalidation?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"DistributionId":{"required":true,"location":"uri"},"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"CreateTime":{"type":"timestamp"},"Status":{}},"name":"InvalidationSummary"}}}}},"listStreamingDistributions":{"name":"ListStreamingDistributions2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution?Marker={Marker}&MaxItems={MaxItems}","method":"GET"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}}},"output":{"type":"structure","members":{"Marker":{},"NextMarker":{},"MaxItems":{"type":"integer"},"IsTruncated":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"Comment":{},"PriceClass":{},"Enabled":{"type":"boolean"}},"name":"StreamingDistributionSummary"}}}}},"updateCloudFrontOriginAccessIdentity":{"name":"UpdateCloudFrontOriginAccessIdentity2013_11_11","http":{"uri":"/2013-11-11/origin-access-identity/cloudfront/{Id}/config","method":"PUT"},"input":{"payload":"CloudFrontOriginAccessIdentityConfig","type":"structure","members":{"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Comment":{"required":true}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"S3CanonicalUserId":{},"CloudFrontOriginAccessIdentityConfig":{"type":"structure","members":{"CallerReference":{},"Comment":{}}}}}},"updateDistribution":{"name":"UpdateDistribution2013_11_11","http":{"uri":"/2013-11-11/distribution/{Id}/config","method":"PUT"},"input":{"payload":"DistributionConfig","type":"structure","members":{"DistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"DefaultRootObject":{"required":true},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"DomainName":{"required":true},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{"required":true}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer","required":true},"HTTPSPort":{"type":"integer","required":true},"OriginProtocolPolicy":{"required":true}}}},"name":"Origin"}}},"required":true},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true},"Cookies":{"type":"structure","members":{"Forward":{"required":true},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Name"}}}}},"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Method"}}}}},"required":true},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{"required":true},"TargetOriginId":{"required":true},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean","required":true},"Cookies":{"type":"structure","members":{"Forward":{"required":true},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Name"}}}}},"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"ViewerProtocolPolicy":{"required":true},"MinTTL":{"type":"integer","required":true},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}},"required":true},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer","required":true},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"IncludeCookies":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"PriceClass":{"required":true},"Enabled":{"type":"boolean","required":true},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{"required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"Location"}}},"required":true}}}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"InProgressInvalidationBatches":{"type":"integer"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"DistributionConfig":{"type":"structure","members":{"CallerReference":{},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"DefaultRootObject":{},"Origins":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"Id":{},"DomainName":{},"S3OriginConfig":{"type":"structure","members":{"OriginAccessIdentity":{}}},"CustomOriginConfig":{"type":"structure","members":{"HTTPPort":{"type":"integer"},"HTTPSPort":{"type":"integer"},"OriginProtocolPolicy":{}}}},"name":"Origin"}}}},"DefaultCacheBehavior":{"type":"structure","members":{"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}}},"CacheBehaviors":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"PathPattern":{},"TargetOriginId":{},"ForwardedValues":{"type":"structure","members":{"QueryString":{"type":"boolean"},"Cookies":{"type":"structure","members":{"Forward":{},"WhitelistedNames":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Name"}}}}}}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"ViewerProtocolPolicy":{},"MinTTL":{"type":"integer"},"AllowedMethods":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Method"}}}}},"name":"CacheBehavior"}}}},"CustomErrorResponses":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"ErrorCode":{"type":"integer"},"ResponsePagePath":{},"ResponseCode":{},"ErrorCachingMinTTL":{"type":"integer"}},"name":"CustomErrorResponse"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"IncludeCookies":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"PriceClass":{},"Enabled":{"type":"boolean"},"ViewerCertificate":{"type":"structure","members":{"IAMCertificateId":{},"CloudFrontDefaultCertificate":{"type":"boolean"}}},"Restrictions":{"type":"structure","members":{"GeoRestriction":{"type":"structure","members":{"RestrictionType":{},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"Location"}}}}}}}}}}},"updateStreamingDistribution":{"name":"UpdateStreamingDistribution2013_11_11","http":{"uri":"/2013-11-11/streaming-distribution/{Id}/config","method":"PUT"},"input":{"payload":"StreamingDistributionConfig","type":"structure","members":{"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{"required":true},"S3Origin":{"type":"structure","members":{"DomainName":{"required":true},"OriginAccessIdentity":{"required":true}},"required":true},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"CNAME"}}},"required":true},"Comment":{"required":true},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Bucket":{"required":true},"Prefix":{"required":true}},"required":true},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true},"Quantity":{"type":"integer","required":true},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}},"required":true},"PriceClass":{"required":true},"Enabled":{"type":"boolean","required":true}},"required":true},"Id":{"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Id":{},"Status":{},"LastModifiedTime":{"type":"timestamp"},"DomainName":{},"ActiveTrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"type":"structure","members":{"AwsAccountNumber":{},"KeyPairIds":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"KeyPairId"}}}}},"name":"Signer"}}}},"StreamingDistributionConfig":{"type":"structure","members":{"CallerReference":{},"S3Origin":{"type":"structure","members":{"DomainName":{},"OriginAccessIdentity":{}}},"Aliases":{"type":"structure","members":{"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"CNAME"}}}},"Comment":{},"Logging":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Bucket":{},"Prefix":{}}},"TrustedSigners":{"type":"structure","members":{"Enabled":{"type":"boolean"},"Quantity":{"type":"integer"},"Items":{"type":"list","members":{"name":"AwsAccountNumber"}}}},"PriceClass":{},"Enabled":{"type":"boolean"}}}}}}},"pagination":{"listCloudFrontOriginAccessIdentities":{"inputToken":"Marker","outputToken":"NextMarker","limitKey":"MaxItems","moreResults":"IsTruncated","resultKey":"Items"},"listDistributions":{"inputToken":"Marker","outputToken":"NextMarker","limitKey":"MaxItems","moreResults":"IsTruncated","resultKey":"Items"},"listInvalidations":{"inputToken":"Marker","outputToken":"NextMarker","limitKey":"MaxItems","moreResults":"IsTruncated","resultKey":"Items"},"listStreamingDistributions":{"inputToken":"Marker","outputToken":"NextMarker","limitKey":"MaxItems","moreResults":"IsTruncated","resultKey":"Items"}}});
AWS.Service.defineServiceApi(require("./services/cloudsearch"), "2011-02-01", {"format":"query","apiVersion":"2011-02-01","endpointPrefix":"cloudsearch","resultWrapped":true,"serviceFullName":"Amazon CloudSearch","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"createDomain":{"name":"CreateDomain","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"DomainStatus":{"type":"structure","members":{"DomainId":{},"DomainName":{},"Created":{"type":"boolean"},"Deleted":{"type":"boolean"},"NumSearchableDocs":{"type":"integer"},"DocService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"SearchService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"RequiresIndexDocuments":{"type":"boolean"},"Processing":{"type":"boolean"},"SearchInstanceType":{},"SearchPartitionCount":{"type":"integer"},"SearchInstanceCount":{"type":"integer"}}}}}},"defineIndexField":{"name":"DefineIndexField","input":{"type":"structure","members":{"DomainName":{"required":true},"IndexField":{"type":"structure","members":{"IndexFieldName":{"required":true},"IndexFieldType":{"required":true},"UIntOptions":{"type":"structure","members":{"DefaultValue":{"type":"integer"}}},"LiteralOptions":{"type":"structure","members":{"DefaultValue":{},"SearchEnabled":{"type":"boolean"},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"}}},"TextOptions":{"type":"structure","members":{"DefaultValue":{},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"},"TextProcessor":{}}},"SourceAttributes":{"type":"list","members":{"type":"structure","members":{"SourceDataFunction":{"required":true},"SourceDataCopy":{"type":"structure","members":{"SourceName":{"required":true},"DefaultValue":{}}},"SourceDataTrimTitle":{"type":"structure","members":{"SourceName":{"required":true},"DefaultValue":{},"Separator":{},"Language":{}}},"SourceDataMap":{"type":"structure","members":{"SourceName":{"required":true},"DefaultValue":{},"Cases":{"type":"map","keys":{},"members":{}}}}}}}},"required":true}}},"output":{"type":"structure","members":{"IndexField":{"type":"structure","members":{"Options":{"type":"structure","members":{"IndexFieldName":{},"IndexFieldType":{},"UIntOptions":{"type":"structure","members":{"DefaultValue":{"type":"integer"}}},"LiteralOptions":{"type":"structure","members":{"DefaultValue":{},"SearchEnabled":{"type":"boolean"},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"}}},"TextOptions":{"type":"structure","members":{"DefaultValue":{},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"},"TextProcessor":{}}},"SourceAttributes":{"type":"list","members":{"type":"structure","members":{"SourceDataFunction":{},"SourceDataCopy":{"type":"structure","members":{"SourceName":{},"DefaultValue":{}}},"SourceDataTrimTitle":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Separator":{},"Language":{}}},"SourceDataMap":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Cases":{"type":"map","keys":{},"members":{}}}}}}}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"defineRankExpression":{"name":"DefineRankExpression","input":{"type":"structure","members":{"DomainName":{"required":true},"RankExpression":{"type":"structure","members":{"RankName":{"required":true},"RankExpression":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"RankExpression":{"type":"structure","members":{"Options":{"type":"structure","members":{"RankName":{},"RankExpression":{}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"deleteDomain":{"name":"DeleteDomain","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"DomainStatus":{"type":"structure","members":{"DomainId":{},"DomainName":{},"Created":{"type":"boolean"},"Deleted":{"type":"boolean"},"NumSearchableDocs":{"type":"integer"},"DocService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"SearchService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"RequiresIndexDocuments":{"type":"boolean"},"Processing":{"type":"boolean"},"SearchInstanceType":{},"SearchPartitionCount":{"type":"integer"},"SearchInstanceCount":{"type":"integer"}}}}}},"deleteIndexField":{"name":"DeleteIndexField","input":{"type":"structure","members":{"DomainName":{"required":true},"IndexFieldName":{"required":true}}},"output":{"type":"structure","members":{"IndexField":{"type":"structure","members":{"Options":{"type":"structure","members":{"IndexFieldName":{},"IndexFieldType":{},"UIntOptions":{"type":"structure","members":{"DefaultValue":{"type":"integer"}}},"LiteralOptions":{"type":"structure","members":{"DefaultValue":{},"SearchEnabled":{"type":"boolean"},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"}}},"TextOptions":{"type":"structure","members":{"DefaultValue":{},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"},"TextProcessor":{}}},"SourceAttributes":{"type":"list","members":{"type":"structure","members":{"SourceDataFunction":{},"SourceDataCopy":{"type":"structure","members":{"SourceName":{},"DefaultValue":{}}},"SourceDataTrimTitle":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Separator":{},"Language":{}}},"SourceDataMap":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Cases":{"type":"map","keys":{},"members":{}}}}}}}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"deleteRankExpression":{"name":"DeleteRankExpression","input":{"type":"structure","members":{"DomainName":{"required":true},"RankName":{"required":true}}},"output":{"type":"structure","members":{"RankExpression":{"type":"structure","members":{"Options":{"type":"structure","members":{"RankName":{},"RankExpression":{}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"describeDefaultSearchField":{"name":"DescribeDefaultSearchField","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"DefaultSearchField":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"describeDomains":{"name":"DescribeDomains","input":{"type":"structure","members":{"DomainNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"DomainStatusList":{"type":"list","members":{"type":"structure","members":{"DomainId":{},"DomainName":{},"Created":{"type":"boolean"},"Deleted":{"type":"boolean"},"NumSearchableDocs":{"type":"integer"},"DocService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"SearchService":{"type":"structure","members":{"Arn":{},"Endpoint":{}}},"RequiresIndexDocuments":{"type":"boolean"},"Processing":{"type":"boolean"},"SearchInstanceType":{},"SearchPartitionCount":{"type":"integer"},"SearchInstanceCount":{"type":"integer"}}}}}}},"describeIndexFields":{"name":"DescribeIndexFields","input":{"type":"structure","members":{"DomainName":{"required":true},"FieldNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"IndexFields":{"type":"list","members":{"type":"structure","members":{"Options":{"type":"structure","members":{"IndexFieldName":{},"IndexFieldType":{},"UIntOptions":{"type":"structure","members":{"DefaultValue":{"type":"integer"}}},"LiteralOptions":{"type":"structure","members":{"DefaultValue":{},"SearchEnabled":{"type":"boolean"},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"}}},"TextOptions":{"type":"structure","members":{"DefaultValue":{},"FacetEnabled":{"type":"boolean"},"ResultEnabled":{"type":"boolean"},"TextProcessor":{}}},"SourceAttributes":{"type":"list","members":{"type":"structure","members":{"SourceDataFunction":{},"SourceDataCopy":{"type":"structure","members":{"SourceName":{},"DefaultValue":{}}},"SourceDataTrimTitle":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Separator":{},"Language":{}}},"SourceDataMap":{"type":"structure","members":{"SourceName":{},"DefaultValue":{},"Cases":{"type":"map","keys":{},"members":{}}}}}}}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}}},"describeRankExpressions":{"name":"DescribeRankExpressions","input":{"type":"structure","members":{"DomainName":{"required":true},"RankNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"RankExpressions":{"type":"list","members":{"type":"structure","members":{"Options":{"type":"structure","members":{"RankName":{},"RankExpression":{}}},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}}},"describeServiceAccessPolicies":{"name":"DescribeServiceAccessPolicies","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"AccessPolicies":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"describeStemmingOptions":{"name":"DescribeStemmingOptions","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"Stems":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"describeStopwordOptions":{"name":"DescribeStopwordOptions","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"Stopwords":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"describeSynonymOptions":{"name":"DescribeSynonymOptions","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"Synonyms":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"indexDocuments":{"name":"IndexDocuments","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"FieldNames":{"type":"list","members":{}}}}},"updateDefaultSearchField":{"name":"UpdateDefaultSearchField","input":{"type":"structure","members":{"DomainName":{"required":true},"DefaultSearchField":{"required":true}}},"output":{"type":"structure","members":{"DefaultSearchField":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"updateServiceAccessPolicies":{"name":"UpdateServiceAccessPolicies","input":{"type":"structure","members":{"DomainName":{"required":true},"AccessPolicies":{"required":true}}},"output":{"type":"structure","members":{"AccessPolicies":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"updateStemmingOptions":{"name":"UpdateStemmingOptions","input":{"type":"structure","members":{"DomainName":{"required":true},"Stems":{"required":true}}},"output":{"type":"structure","members":{"Stems":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"updateStopwordOptions":{"name":"UpdateStopwordOptions","input":{"type":"structure","members":{"DomainName":{"required":true},"Stopwords":{"required":true}}},"output":{"type":"structure","members":{"Stopwords":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}},"updateSynonymOptions":{"name":"UpdateSynonymOptions","input":{"type":"structure","members":{"DomainName":{"required":true},"Synonyms":{"required":true}}},"output":{"type":"structure","members":{"Synonyms":{"type":"structure","members":{"Options":{},"Status":{"type":"structure","members":{"CreationDate":{"type":"timestamp"},"UpdateDate":{"type":"timestamp"},"UpdateVersion":{"type":"integer"},"State":{},"PendingDeletion":{"type":"boolean"}}}}}}}}},"pagination":{"describeDomains":{"resultKey":"DomainStatusList"},"describeIndexFields":{"resultKey":"IndexFields"},"describeRankExpressions":{"resultKey":"RankExpressions"}}});
AWS.Service.defineServiceApi(require("./services/cloudtrail"), "2013-11-01", {"format":"json","apiVersion":"2013-11-01","endpointPrefix":"cloudtrail","jsonVersion":"1.1","serviceAbbreviation":"CloudTrail","serviceFullName":"AWS CloudTrail","signatureVersion":"v4","targetPrefix":"com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101","timestampFormat":"iso8601","operations":{"createTrail":{"name":"CreateTrail","input":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"},"trail":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"}}}}},"output":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"},"trail":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"}}}}}},"deleteTrail":{"name":"DeleteTrail","input":{"type":"structure","members":{"Name":{"required":true}}},"output":{"type":"structure","members":{}}},"describeTrails":{"name":"DescribeTrails","input":{"type":"structure","members":{"trailNameList":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"trailList":{"type":"list","members":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"}}}}}}},"getTrailStatus":{"name":"GetTrailStatus","input":{"type":"structure","members":{"Name":{"required":true}}},"output":{"type":"structure","members":{"IsLogging":{"type":"boolean"},"LatestDeliveryError":{},"LatestNotificationError":{},"LatestDeliveryTime":{"type":"timestamp"},"LatestNotificationTime":{"type":"timestamp"},"StartLoggingTime":{"type":"timestamp"},"StopLoggingTime":{"type":"timestamp"},"LatestDeliveryAttemptTime":{},"LatestNotificationAttemptTime":{},"LatestNotificationAttemptSucceeded":{},"LatestDeliveryAttemptSucceeded":{},"TimeLoggingStarted":{},"TimeLoggingStopped":{}}}},"startLogging":{"name":"StartLogging","input":{"type":"structure","members":{"Name":{"required":true}}},"output":{"type":"structure","members":{}}},"stopLogging":{"name":"StopLogging","input":{"type":"structure","members":{"Name":{"required":true}}},"output":{"type":"structure","members":{}}},"updateTrail":{"name":"UpdateTrail","input":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"},"trail":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"}}}}},"output":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"},"trail":{"type":"structure","members":{"Name":{},"S3BucketName":{},"S3KeyPrefix":{},"SnsTopicName":{},"IncludeGlobalServiceEvents":{"type":"boolean"}}}}}}}});
AWS.Service.defineServiceApi(require("./services/cloudwatch"), "2010-08-01", {"format":"query","apiVersion":"2010-08-01","endpointPrefix":"monitoring","resultWrapped":true,"serviceAbbreviation":"CloudWatch","serviceFullName":"Amazon CloudWatch","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"deleteAlarms":{"name":"DeleteAlarms","input":{"type":"structure","members":{"AlarmNames":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"describeAlarmHistory":{"name":"DescribeAlarmHistory","input":{"type":"structure","members":{"AlarmName":{},"HistoryItemType":{},"StartDate":{"type":"timestamp"},"EndDate":{"type":"timestamp"},"MaxRecords":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"AlarmHistoryItems":{"type":"list","members":{"type":"structure","members":{"AlarmName":{},"Timestamp":{"type":"timestamp"},"HistoryItemType":{},"HistorySummary":{},"HistoryData":{}}}},"NextToken":{}}}},"describeAlarms":{"name":"DescribeAlarms","input":{"type":"structure","members":{"AlarmNames":{"type":"list","members":{}},"AlarmNamePrefix":{},"StateValue":{},"ActionPrefix":{},"MaxRecords":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"MetricAlarms":{"type":"list","members":{"type":"structure","members":{"AlarmName":{},"AlarmArn":{},"AlarmDescription":{},"AlarmConfigurationUpdatedTimestamp":{"type":"timestamp"},"ActionsEnabled":{"type":"boolean"},"OKActions":{"type":"list","members":{}},"AlarmActions":{"type":"list","members":{}},"InsufficientDataActions":{"type":"list","members":{}},"StateValue":{},"StateReason":{},"StateReasonData":{},"StateUpdatedTimestamp":{"type":"timestamp"},"MetricName":{},"Namespace":{},"Statistic":{},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{}}}},"Period":{"type":"integer"},"Unit":{},"EvaluationPeriods":{"type":"integer"},"Threshold":{"type":"float"},"ComparisonOperator":{}}}},"NextToken":{}}}},"describeAlarmsForMetric":{"name":"DescribeAlarmsForMetric","input":{"type":"structure","members":{"MetricName":{"required":true},"Namespace":{"required":true},"Statistic":{},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true}},"order":["Name","Value"]}},"Period":{"type":"integer"},"Unit":{}}},"output":{"type":"structure","members":{"MetricAlarms":{"type":"list","members":{"type":"structure","members":{"AlarmName":{},"AlarmArn":{},"AlarmDescription":{},"AlarmConfigurationUpdatedTimestamp":{"type":"timestamp"},"ActionsEnabled":{"type":"boolean"},"OKActions":{"type":"list","members":{}},"AlarmActions":{"type":"list","members":{}},"InsufficientDataActions":{"type":"list","members":{}},"StateValue":{},"StateReason":{},"StateReasonData":{},"StateUpdatedTimestamp":{"type":"timestamp"},"MetricName":{},"Namespace":{},"Statistic":{},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{}}}},"Period":{"type":"integer"},"Unit":{},"EvaluationPeriods":{"type":"integer"},"Threshold":{"type":"float"},"ComparisonOperator":{}}}}}}},"disableAlarmActions":{"name":"DisableAlarmActions","input":{"type":"structure","members":{"AlarmNames":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"enableAlarmActions":{"name":"EnableAlarmActions","input":{"type":"structure","members":{"AlarmNames":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"getMetricStatistics":{"name":"GetMetricStatistics","input":{"type":"structure","members":{"Namespace":{"required":true},"MetricName":{"required":true},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true}},"order":["Name","Value"]}},"StartTime":{"type":"timestamp","required":true},"EndTime":{"type":"timestamp","required":true},"Period":{"type":"integer","required":true},"Statistics":{"type":"list","members":{},"required":true},"Unit":{}}},"output":{"type":"structure","members":{"Label":{},"Datapoints":{"type":"list","members":{"type":"structure","members":{"Timestamp":{"type":"timestamp"},"SampleCount":{"type":"float"},"Average":{"type":"float"},"Sum":{"type":"float"},"Minimum":{"type":"float"},"Maximum":{"type":"float"},"Unit":{}}}}}}},"listMetrics":{"name":"ListMetrics","input":{"type":"structure","members":{"Namespace":{},"MetricName":{},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{}}}},"NextToken":{}}},"output":{"type":"structure","members":{"Metrics":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"MetricName":{},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{}}}}}}},"NextToken":{}}}},"putMetricAlarm":{"name":"PutMetricAlarm","input":{"type":"structure","members":{"AlarmName":{"required":true},"AlarmDescription":{},"ActionsEnabled":{"type":"boolean"},"OKActions":{"type":"list","members":{}},"AlarmActions":{"type":"list","members":{}},"InsufficientDataActions":{"type":"list","members":{}},"MetricName":{"required":true},"Namespace":{"required":true},"Statistic":{"required":true},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true}},"order":["Name","Value"]}},"Period":{"type":"integer","required":true},"Unit":{},"EvaluationPeriods":{"type":"integer","required":true},"Threshold":{"type":"float","required":true},"ComparisonOperator":{"required":true}}},"output":{"type":"structure","members":{}}},"putMetricData":{"name":"PutMetricData","input":{"type":"structure","members":{"Namespace":{"required":true},"MetricData":{"type":"list","members":{"type":"structure","members":{"MetricName":{"required":true},"Dimensions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true}},"order":["Name","Value"]}},"Timestamp":{"type":"timestamp"},"Value":{"type":"float"},"StatisticValues":{"type":"structure","members":{"SampleCount":{"type":"float","required":true},"Sum":{"type":"float","required":true},"Minimum":{"type":"float","required":true},"Maximum":{"type":"float","required":true}}},"Unit":{}}},"required":true}}},"output":{"type":"structure","members":{}}},"setAlarmState":{"name":"SetAlarmState","input":{"type":"structure","members":{"AlarmName":{"required":true},"StateValue":{"required":true},"StateReason":{"required":true},"StateReasonData":{}}},"output":{"type":"structure","members":{}}}},"pagination":{"describeAlarmHistory":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"AlarmHistoryItems"},"describeAlarms":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"MetricAlarms"},"describeAlarmsForMetric":{"resultKey":"MetricAlarms"},"listMetrics":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Metrics"}}});
AWS.Service.defineServiceApi(require("./services/datapipeline"), "2012-10-29", {"format":"json","apiVersion":"2012-10-29","endpointPrefix":"datapipeline","jsonVersion":"1.1","serviceFullName":"AWS Data Pipeline","signatureVersion":"v4","targetPrefix":"DataPipeline","timestampFormat":"iso8601","operations":{"activatePipeline":{"name":"ActivatePipeline","input":{"type":"structure","members":{"pipelineId":{"required":true}}},"output":{"type":"structure","members":{}}},"createPipeline":{"name":"CreatePipeline","input":{"type":"structure","members":{"name":{"required":true},"uniqueId":{"required":true},"description":{}}},"output":{"type":"structure","members":{"pipelineId":{}}}},"deletePipeline":{"name":"DeletePipeline","input":{"type":"structure","members":{"pipelineId":{"required":true}}},"output":{"type":"structure","members":{}}},"describeObjects":{"name":"DescribeObjects","input":{"type":"structure","members":{"pipelineId":{"required":true},"objectIds":{"type":"list","members":{},"required":true},"evaluateExpressions":{"type":"boolean"},"marker":{}}},"output":{"type":"structure","members":{"pipelineObjects":{"type":"list","members":{"type":"structure","members":{"id":{},"name":{},"fields":{"type":"list","members":{"type":"structure","members":{"key":{},"stringValue":{},"refValue":{}}}}}}},"marker":{},"hasMoreResults":{"type":"boolean"}}}},"describePipelines":{"name":"DescribePipelines","input":{"type":"structure","members":{"pipelineIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"pipelineDescriptionList":{"type":"list","members":{"type":"structure","members":{"pipelineId":{},"name":{},"fields":{"type":"list","members":{"type":"structure","members":{"key":{},"stringValue":{},"refValue":{}}}},"description":{}}}}}}},"evaluateExpression":{"name":"EvaluateExpression","input":{"type":"structure","members":{"pipelineId":{"required":true},"objectId":{"required":true},"expression":{"required":true}}},"output":{"type":"structure","members":{"evaluatedExpression":{}}}},"getPipelineDefinition":{"name":"GetPipelineDefinition","input":{"type":"structure","members":{"pipelineId":{"required":true},"version":{}}},"output":{"type":"structure","members":{"pipelineObjects":{"type":"list","members":{"type":"structure","members":{"id":{},"name":{},"fields":{"type":"list","members":{"type":"structure","members":{"key":{},"stringValue":{},"refValue":{}}}}}}}}}},"listPipelines":{"name":"ListPipelines","input":{"type":"structure","members":{"marker":{}}},"output":{"type":"structure","members":{"pipelineIdList":{"type":"list","members":{"type":"structure","members":{"id":{},"name":{}}}},"marker":{},"hasMoreResults":{"type":"boolean"}}}},"pollForTask":{"name":"PollForTask","input":{"type":"structure","members":{"workerGroup":{"required":true},"hostname":{},"instanceIdentity":{"type":"structure","members":{"document":{},"signature":{}}}}},"output":{"type":"structure","members":{"taskObject":{"type":"structure","members":{"taskId":{},"pipelineId":{},"attemptId":{},"objects":{"type":"map","keys":{},"members":{"type":"structure","members":{"id":{},"name":{},"fields":{"type":"list","members":{"type":"structure","members":{"key":{},"stringValue":{},"refValue":{}}}}}}}}}}}},"putPipelineDefinition":{"name":"PutPipelineDefinition","input":{"type":"structure","members":{"pipelineId":{"required":true},"pipelineObjects":{"type":"list","members":{"type":"structure","members":{"id":{"required":true},"name":{"required":true},"fields":{"type":"list","members":{"type":"structure","members":{"key":{"required":true},"stringValue":{},"refValue":{}}},"required":true}}},"required":true}}},"output":{"type":"structure","members":{"validationErrors":{"type":"list","members":{"type":"structure","members":{"id":{},"errors":{"type":"list","members":{}}}}},"validationWarnings":{"type":"list","members":{"type":"structure","members":{"id":{},"warnings":{"type":"list","members":{}}}}},"errored":{"type":"boolean"}}}},"queryObjects":{"name":"QueryObjects","input":{"type":"structure","members":{"pipelineId":{"required":true},"query":{"type":"structure","members":{"selectors":{"type":"list","members":{"type":"structure","members":{"fieldName":{},"operator":{"type":"structure","members":{"type":{},"values":{"type":"list","members":{}}}}}}}}},"sphere":{"required":true},"marker":{},"limit":{"type":"integer"}}},"output":{"type":"structure","members":{"ids":{"type":"list","members":{}},"marker":{},"hasMoreResults":{"type":"boolean"}}}},"reportTaskProgress":{"name":"ReportTaskProgress","input":{"type":"structure","members":{"taskId":{"required":true}}},"output":{"type":"structure","members":{"canceled":{"type":"boolean"}}}},"reportTaskRunnerHeartbeat":{"name":"ReportTaskRunnerHeartbeat","input":{"type":"structure","members":{"taskrunnerId":{"required":true},"workerGroup":{},"hostname":{}}},"output":{"type":"structure","members":{"terminate":{"type":"boolean"}}}},"setStatus":{"name":"SetStatus","input":{"type":"structure","members":{"pipelineId":{"required":true},"objectIds":{"type":"list","members":{},"required":true},"status":{"required":true}}},"output":{"type":"structure","members":{}}},"setTaskStatus":{"name":"SetTaskStatus","input":{"type":"structure","members":{"taskId":{"required":true},"taskStatus":{"required":true},"errorId":{},"errorMessage":{},"errorStackTrace":{}}},"output":{"type":"structure","members":{}}},"validatePipelineDefinition":{"name":"ValidatePipelineDefinition","input":{"type":"structure","members":{"pipelineId":{"required":true},"pipelineObjects":{"type":"list","members":{"type":"structure","members":{"id":{"required":true},"name":{"required":true},"fields":{"type":"list","members":{"type":"structure","members":{"key":{"required":true},"stringValue":{},"refValue":{}}},"required":true}}},"required":true}}},"output":{"type":"structure","members":{"validationErrors":{"type":"list","members":{"type":"structure","members":{"id":{},"errors":{"type":"list","members":{}}}}},"validationWarnings":{"type":"list","members":{"type":"structure","members":{"id":{},"warnings":{"type":"list","members":{}}}}},"errored":{"type":"boolean"}}}}},"pagination":{"listPipelines":{"inputToken":"marker","outputToken":"marker","moreResults":"hasMoreResults","limitKey":"limit","resultKey":"pipelineIdList"},"describeObjects":{"inputToken":"marker","outputToken":"marker","moreResults":"hasMoreResults","limitKey":"limit","resultKey":"pipelineObjects"},"queryObjects":{"inputToken":"marker","outputToken":"marker","moreResults":"hasMoreResults","limitKey":"limit","resultKey":"ids"}}});
AWS.Service.defineServiceApi(require("./services/directconnect"), "2012-10-25", {"format":"json","apiVersion":"2012-10-25","endpointPrefix":"directconnect","jsonVersion":"1.1","serviceFullName":"AWS Direct Connect","signatureVersion":"v4","targetPrefix":"OvertureService","timestampFormat":"iso8601","operations":{"allocateConnectionOnInterconnect":{"name":"AllocateConnectionOnInterconnect","input":{"type":"structure","members":{"bandwidth":{"required":true},"connectionName":{"required":true},"ownerAccount":{"required":true},"interconnectId":{"required":true},"vlan":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"connectionId":{},"connectionName":{},"connectionState":{},"region":{},"location":{},"bandwidth":{},"vlan":{"type":"integer"},"partnerName":{}}}},"allocatePrivateVirtualInterface":{"name":"AllocatePrivateVirtualInterface","input":{"type":"structure","members":{"connectionId":{"required":true},"ownerAccount":{"required":true},"newPrivateVirtualInterfaceAllocation":{"type":"structure","members":{"virtualInterfaceName":{"required":true},"vlan":{"type":"integer","required":true},"asn":{"type":"integer","required":true},"authKey":{},"amazonAddress":{},"customerAddress":{}},"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"virtualInterfaceId":{},"location":{},"connectionId":{},"virtualInterfaceType":{},"virtualInterfaceName":{},"vlan":{"type":"integer"},"asn":{"type":"integer"},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualInterfaceState":{},"customerRouterConfig":{},"virtualGatewayId":{},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}}}}}},"allocatePublicVirtualInterface":{"name":"AllocatePublicVirtualInterface","input":{"type":"structure","members":{"connectionId":{"required":true},"ownerAccount":{"required":true},"newPublicVirtualInterfaceAllocation":{"type":"structure","members":{"virtualInterfaceName":{"required":true},"vlan":{"type":"integer","required":true},"asn":{"type":"integer","required":true},"authKey":{},"amazonAddress":{"required":true},"customerAddress":{"required":true},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}},"required":true}},"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"virtualInterfaceId":{},"location":{},"connectionId":{},"virtualInterfaceType":{},"virtualInterfaceName":{},"vlan":{"type":"integer"},"asn":{"type":"integer"},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualInterfaceState":{},"customerRouterConfig":{},"virtualGatewayId":{},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}}}}}},"confirmConnection":{"name":"ConfirmConnection","input":{"type":"structure","members":{"connectionId":{"required":true}}},"output":{"type":"structure","members":{"connectionState":{}}}},"confirmPrivateVirtualInterface":{"name":"ConfirmPrivateVirtualInterface","input":{"type":"structure","members":{"virtualInterfaceId":{"required":true},"virtualGatewayId":{"required":true}}},"output":{"type":"structure","members":{"virtualInterfaceState":{}}}},"confirmPublicVirtualInterface":{"name":"ConfirmPublicVirtualInterface","input":{"type":"structure","members":{"virtualInterfaceId":{"required":true}}},"output":{"type":"structure","members":{"virtualInterfaceState":{}}}},"createConnection":{"name":"CreateConnection","input":{"type":"structure","members":{"location":{"required":true},"bandwidth":{"required":true},"connectionName":{"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"connectionId":{},"connectionName":{},"connectionState":{},"region":{},"location":{},"bandwidth":{},"vlan":{"type":"integer"},"partnerName":{}}}},"createInterconnect":{"name":"CreateInterconnect","input":{"type":"structure","members":{"interconnectName":{"required":true},"bandwidth":{"required":true},"location":{"required":true}}},"output":{"type":"structure","members":{"interconnectId":{},"interconnectName":{},"interconnectState":{},"region":{},"location":{},"bandwidth":{}}}},"createPrivateVirtualInterface":{"name":"CreatePrivateVirtualInterface","input":{"type":"structure","members":{"connectionId":{"required":true},"newPrivateVirtualInterface":{"type":"structure","members":{"virtualInterfaceName":{"required":true},"vlan":{"type":"integer","required":true},"asn":{"type":"integer","required":true},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualGatewayId":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"virtualInterfaceId":{},"location":{},"connectionId":{},"virtualInterfaceType":{},"virtualInterfaceName":{},"vlan":{"type":"integer"},"asn":{"type":"integer"},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualInterfaceState":{},"customerRouterConfig":{},"virtualGatewayId":{},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}}}}}},"createPublicVirtualInterface":{"name":"CreatePublicVirtualInterface","input":{"type":"structure","members":{"connectionId":{"required":true},"newPublicVirtualInterface":{"type":"structure","members":{"virtualInterfaceName":{"required":true},"vlan":{"type":"integer","required":true},"asn":{"type":"integer","required":true},"authKey":{},"amazonAddress":{"required":true},"customerAddress":{"required":true},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}},"required":true}},"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"virtualInterfaceId":{},"location":{},"connectionId":{},"virtualInterfaceType":{},"virtualInterfaceName":{},"vlan":{"type":"integer"},"asn":{"type":"integer"},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualInterfaceState":{},"customerRouterConfig":{},"virtualGatewayId":{},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}}}}}},"deleteConnection":{"name":"DeleteConnection","input":{"type":"structure","members":{"connectionId":{"required":true}}},"output":{"type":"structure","members":{"ownerAccount":{},"connectionId":{},"connectionName":{},"connectionState":{},"region":{},"location":{},"bandwidth":{},"vlan":{"type":"integer"},"partnerName":{}}}},"deleteInterconnect":{"name":"DeleteInterconnect","input":{"type":"structure","members":{"interconnectId":{"required":true}}},"output":{"type":"structure","members":{"interconnectState":{}}}},"deleteVirtualInterface":{"name":"DeleteVirtualInterface","input":{"type":"structure","members":{"virtualInterfaceId":{"required":true}}},"output":{"type":"structure","members":{"virtualInterfaceState":{}}}},"describeConnections":{"name":"DescribeConnections","input":{"type":"structure","members":{"connectionId":{}}},"output":{"type":"structure","members":{"connections":{"type":"list","members":{"type":"structure","members":{"ownerAccount":{},"connectionId":{},"connectionName":{},"connectionState":{},"region":{},"location":{},"bandwidth":{},"vlan":{"type":"integer"},"partnerName":{}}}}}}},"describeConnectionsOnInterconnect":{"name":"DescribeConnectionsOnInterconnect","input":{"type":"structure","members":{"interconnectId":{"required":true}}},"output":{"type":"structure","members":{"connections":{"type":"list","members":{"type":"structure","members":{"ownerAccount":{},"connectionId":{},"connectionName":{},"connectionState":{},"region":{},"location":{},"bandwidth":{},"vlan":{"type":"integer"},"partnerName":{}}}}}}},"describeInterconnects":{"name":"DescribeInterconnects","input":{"type":"structure","members":{"interconnectId":{}}},"output":{"type":"structure","members":{"interconnects":{"type":"list","members":{"type":"structure","members":{"interconnectId":{},"interconnectName":{},"interconnectState":{},"region":{},"location":{},"bandwidth":{}}}}}}},"describeLocations":{"name":"DescribeLocations","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"locations":{"type":"list","members":{"type":"structure","members":{"locationCode":{},"locationName":{}}}}}}},"describeVirtualGateways":{"name":"DescribeVirtualGateways","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"virtualGateways":{"type":"list","members":{"type":"structure","members":{"virtualGatewayId":{},"virtualGatewayState":{}}}}}}},"describeVirtualInterfaces":{"name":"DescribeVirtualInterfaces","input":{"type":"structure","members":{"connectionId":{},"virtualInterfaceId":{}}},"output":{"type":"structure","members":{"virtualInterfaces":{"type":"list","members":{"type":"structure","members":{"ownerAccount":{},"virtualInterfaceId":{},"location":{},"connectionId":{},"virtualInterfaceType":{},"virtualInterfaceName":{},"vlan":{"type":"integer"},"asn":{"type":"integer"},"authKey":{},"amazonAddress":{},"customerAddress":{},"virtualInterfaceState":{},"customerRouterConfig":{},"virtualGatewayId":{},"routeFilterPrefixes":{"type":"list","members":{"type":"structure","members":{"cidr":{}}}}}}}}}}},"pagination":{"describeConnections":{"resultKey":"connections"},"describeOfferings":{"resultKey":"offerings"},"describeVirtualGateways":{"resultKey":"virtualGateways"},"describeVirtualInterfaces":{"resultKey":"virtualInterfaces"}}});
AWS.Service.defineServiceApi(require("./services/dynamodb"), "2011-12-05", {"format":"json","apiVersion":"2011-12-05","endpointPrefix":"dynamodb","jsonVersion":"1.0","serviceAbbreviation":"DynamoDB","serviceFullName":"Amazon DynamoDB","signatureVersion":"v4","targetPrefix":"DynamoDB_20111205","timestampFormat":"iso8601","operations":{"batchGetItem":{"name":"BatchGetItem","input":{"type":"structure","members":{"RequestItems":{"type":"map","keys":{},"members":{"type":"structure","members":{"Keys":{"type":"list","members":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"required":true},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"}}},"required":true}}},"output":{"type":"structure","members":{"Responses":{"type":"map","keys":{},"members":{"type":"structure","members":{"Items":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"UnprocessedKeys":{"type":"map","keys":{},"members":{"type":"structure","members":{"Keys":{"type":"list","members":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"}}}}}}},"batchWriteItem":{"name":"BatchWriteItem","input":{"type":"structure","members":{"RequestItems":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"structure","members":{"PutRequest":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true}}},"DeleteRequest":{"type":"structure","members":{"Key":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"required":true}}}}}},"required":true}}},"output":{"type":"structure","members":{"Responses":{"type":"map","keys":{},"members":{"type":"structure","members":{"ConsumedCapacityUnits":{"type":"float"}}}},"UnprocessedItems":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"structure","members":{"PutRequest":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}},"DeleteRequest":{"type":"structure","members":{"Key":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}}}}}}}}}},"createTable":{"name":"CreateTable","input":{"type":"structure","members":{"TableName":{"required":true},"KeySchema":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"AttributeName":{"required":true},"AttributeType":{"required":true}},"required":true},"RangeKeyElement":{"type":"structure","members":{"AttributeName":{"required":true},"AttributeType":{"required":true}}}},"required":true},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}},"required":true}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"TableName":{},"KeySchema":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}},"RangeKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}},"deleteItem":{"name":"DeleteItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"required":true},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"deleteTable":{"name":"DeleteTable","input":{"type":"structure","members":{"TableName":{"required":true}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"TableName":{},"KeySchema":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}},"RangeKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}},"describeTable":{"name":"DescribeTable","input":{"type":"structure","members":{"TableName":{"required":true}}},"output":{"type":"structure","members":{"Table":{"type":"structure","members":{"TableName":{},"KeySchema":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}},"RangeKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}},"getItem":{"name":"GetItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"required":true},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"}}},"output":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"listTables":{"name":"ListTables","input":{"type":"structure","members":{"ExclusiveStartTableName":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"TableNames":{"type":"list","members":{}},"LastEvaluatedTableName":{}}}},"putItem":{"name":"PutItem","input":{"type":"structure","members":{"TableName":{"required":true},"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"query":{"name":"Query","input":{"type":"structure","members":{"TableName":{"required":true},"AttributesToGet":{"type":"list","members":{}},"Limit":{"type":"integer"},"ConsistentRead":{"type":"boolean"},"Count":{"type":"boolean"},"HashKeyValue":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyCondition":{"type":"structure","members":{"AttributeValueList":{"type":"list","members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ComparisonOperator":{"required":true}}},"ScanIndexForward":{"type":"boolean"},"ExclusiveStartKey":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}}},"output":{"type":"structure","members":{"Items":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"Count":{"type":"integer"},"LastEvaluatedKey":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"scan":{"name":"Scan","input":{"type":"structure","members":{"TableName":{"required":true},"AttributesToGet":{"type":"list","members":{}},"Limit":{"type":"integer"},"Count":{"type":"boolean"},"ScanFilter":{"type":"map","keys":{},"members":{"type":"structure","members":{"AttributeValueList":{"type":"list","members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ComparisonOperator":{"required":true}}}},"ExclusiveStartKey":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}}},"output":{"type":"structure","members":{"Items":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"Count":{"type":"integer"},"ScannedCount":{"type":"integer"},"LastEvaluatedKey":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"updateItem":{"name":"UpdateItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}},"required":true},"RangeKeyElement":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"required":true},"AttributeUpdates":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Action":{}}},"required":true},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacityUnits":{"type":"float"}}}},"updateTable":{"name":"UpdateTable","input":{"type":"structure","members":{"TableName":{"required":true},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}},"required":true}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"TableName":{},"KeySchema":{"type":"structure","members":{"HashKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}},"RangeKeyElement":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}}},"pagination":{"batchGetItem":{"inputToken":"RequestItems","outputToken":"UnprocessedKeys","resultKey":"Responses[]"},"listTables":{"inputToken":"ExclusiveStartTableName","outputToken":"LastEvaluatedTableName","limitKey":"Limit","resultKey":"TableNames"},"query":{"inputToken":"ExclusiveStartKey","outputToken":"LastEvaluatedKey","limitKey":"Limit","resultKey":"Items"},"scan":{"inputToken":"ExclusiveStartKey","outputToken":"LastEvaluatedKey","limitKey":"Limit","resultKey":"Items"}}});
AWS.Service.defineServiceApi(require("./services/dynamodb"), "2012-08-10", {"format":"json","apiVersion":"2012-08-10","endpointPrefix":"dynamodb","jsonVersion":"1.0","serviceAbbreviation":"DynamoDB","serviceFullName":"Amazon DynamoDB","signatureVersion":"v4","targetPrefix":"DynamoDB_20120810","timestampFormat":"iso8601","operations":{"batchGetItem":{"name":"BatchGetItem","input":{"type":"structure","members":{"RequestItems":{"type":"map","keys":{},"members":{"type":"structure","members":{"Keys":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"required":true},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"}}},"required":true},"ReturnConsumedCapacity":{}}},"output":{"type":"structure","members":{"Responses":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}},"UnprocessedKeys":{"type":"map","keys":{},"members":{"type":"structure","members":{"Keys":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"}}}},"ConsumedCapacity":{"type":"list","members":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}}}}}},"batchWriteItem":{"name":"BatchWriteItem","input":{"type":"structure","members":{"RequestItems":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"structure","members":{"PutRequest":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true}}},"DeleteRequest":{"type":"structure","members":{"Key":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true}}}}}},"required":true},"ReturnConsumedCapacity":{},"ReturnItemCollectionMetrics":{}}},"output":{"type":"structure","members":{"UnprocessedItems":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"structure","members":{"PutRequest":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}},"DeleteRequest":{"type":"structure","members":{"Key":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}}}}}}},"ItemCollectionMetrics":{"type":"map","keys":{},"members":{"type":"list","members":{"type":"structure","members":{"ItemCollectionKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"SizeEstimateRangeGB":{"type":"list","members":{"type":"float"}}}}}},"ConsumedCapacity":{"type":"list","members":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}}}}}},"createTable":{"name":"CreateTable","input":{"type":"structure","members":{"AttributeDefinitions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{"required":true},"AttributeType":{"required":true}}},"required":true},"TableName":{"required":true},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{"required":true},"KeyType":{"required":true}}},"required":true},"LocalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{"required":true},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{"required":true},"KeyType":{"required":true}}},"required":true},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}},"required":true}}}},"GlobalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{"required":true},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{"required":true},"KeyType":{"required":true}}},"required":true},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}},"required":true},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}},"required":true}}}},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}},"required":true}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"AttributeDefinitions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}},"TableName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"},"LocalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}},"GlobalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexStatus":{},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}}}}},"deleteItem":{"name":"DeleteItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{},"ReturnConsumedCapacity":{},"ReturnItemCollectionMetrics":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}},"ItemCollectionMetrics":{"type":"structure","members":{"ItemCollectionKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"SizeEstimateRangeGB":{"type":"list","members":{"type":"float"}}}}}}},"deleteTable":{"name":"DeleteTable","input":{"type":"structure","members":{"TableName":{"required":true}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"AttributeDefinitions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}},"TableName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"},"LocalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}},"GlobalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexStatus":{},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}}}}},"describeTable":{"name":"DescribeTable","input":{"type":"structure","members":{"TableName":{"required":true}}},"output":{"type":"structure","members":{"Table":{"type":"structure","members":{"AttributeDefinitions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}},"TableName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"},"LocalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}},"GlobalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexStatus":{},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}}}}},"getItem":{"name":"GetItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true},"AttributesToGet":{"type":"list","members":{}},"ConsistentRead":{"type":"boolean"},"ReturnConsumedCapacity":{}}},"output":{"type":"structure","members":{"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}}}}},"listTables":{"name":"ListTables","input":{"type":"structure","members":{"ExclusiveStartTableName":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"TableNames":{"type":"list","members":{}},"LastEvaluatedTableName":{}}}},"putItem":{"name":"PutItem","input":{"type":"structure","members":{"TableName":{"required":true},"Item":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{},"ReturnConsumedCapacity":{},"ReturnItemCollectionMetrics":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}},"ItemCollectionMetrics":{"type":"structure","members":{"ItemCollectionKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"SizeEstimateRangeGB":{"type":"list","members":{"type":"float"}}}}}}},"query":{"name":"Query","input":{"type":"structure","members":{"TableName":{"required":true},"IndexName":{},"Select":{},"AttributesToGet":{"type":"list","members":{}},"Limit":{"type":"integer"},"ConsistentRead":{"type":"boolean"},"KeyConditions":{"type":"map","keys":{},"members":{"type":"structure","members":{"AttributeValueList":{"type":"list","members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ComparisonOperator":{"required":true}}}},"ScanIndexForward":{"type":"boolean"},"ExclusiveStartKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ReturnConsumedCapacity":{}}},"output":{"type":"structure","members":{"Items":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"Count":{"type":"integer"},"LastEvaluatedKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}}}}},"scan":{"name":"Scan","input":{"type":"structure","members":{"TableName":{"required":true},"AttributesToGet":{"type":"list","members":{}},"Limit":{"type":"integer"},"Select":{},"ScanFilter":{"type":"map","keys":{},"members":{"type":"structure","members":{"AttributeValueList":{"type":"list","members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ComparisonOperator":{"required":true}}}},"ExclusiveStartKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ReturnConsumedCapacity":{},"TotalSegments":{"type":"integer"},"Segment":{"type":"integer"}}},"output":{"type":"structure","members":{"Items":{"type":"list","members":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}}},"Count":{"type":"integer"},"ScannedCount":{"type":"integer"},"LastEvaluatedKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}}}}},"updateItem":{"name":"UpdateItem","input":{"type":"structure","members":{"TableName":{"required":true},"Key":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"required":true},"AttributeUpdates":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Action":{}}}},"Expected":{"type":"map","keys":{},"members":{"type":"structure","members":{"Value":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}},"Exists":{"type":"boolean"}}}},"ReturnValues":{},"ReturnConsumedCapacity":{},"ReturnItemCollectionMetrics":{}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"ConsumedCapacity":{"type":"structure","members":{"TableName":{},"CapacityUnits":{"type":"float"},"Table":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}},"LocalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}},"GlobalSecondaryIndexes":{"type":"map","keys":{},"members":{"type":"structure","members":{"CapacityUnits":{"type":"float"}}}}}},"ItemCollectionMetrics":{"type":"structure","members":{"ItemCollectionKey":{"type":"map","keys":{},"members":{"type":"structure","members":{"S":{},"N":{},"B":{"type":"base64"},"SS":{"type":"list","members":{}},"NS":{"type":"list","members":{}},"BS":{"type":"list","members":{"type":"base64"}}}}},"SizeEstimateRangeGB":{"type":"list","members":{"type":"float"}}}}}}},"updateTable":{"name":"UpdateTable","input":{"type":"structure","members":{"TableName":{"required":true},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}}},"GlobalSecondaryIndexUpdates":{"type":"list","members":{"type":"structure","members":{"Update":{"type":"structure","members":{"IndexName":{"required":true},"ProvisionedThroughput":{"type":"structure","members":{"ReadCapacityUnits":{"type":"integer","required":true},"WriteCapacityUnits":{"type":"integer","required":true}},"required":true}}}}}}}},"output":{"type":"structure","members":{"TableDescription":{"type":"structure","members":{"AttributeDefinitions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeType":{}}}},"TableName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"TableStatus":{},"CreationDateTime":{"type":"timestamp"},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"TableSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"},"LocalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}},"GlobalSecondaryIndexes":{"type":"list","members":{"type":"structure","members":{"IndexName":{},"KeySchema":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"KeyType":{}}}},"Projection":{"type":"structure","members":{"ProjectionType":{},"NonKeyAttributes":{"type":"list","members":{}}}},"IndexStatus":{},"ProvisionedThroughput":{"type":"structure","members":{"LastIncreaseDateTime":{"type":"timestamp"},"LastDecreaseDateTime":{"type":"timestamp"},"NumberOfDecreasesToday":{"type":"integer"},"ReadCapacityUnits":{"type":"integer"},"WriteCapacityUnits":{"type":"integer"}}},"IndexSizeBytes":{"type":"integer"},"ItemCount":{"type":"integer"}}}}}}}}}},"pagination":{"batchGetItem":{"inputToken":"RequestItems","outputToken":"UnprocessedKeys","resultKey":"Responses[]"},"listTables":{"inputToken":"ExclusiveStartTableName","outputToken":"LastEvaluatedTableName","limitKey":"Limit","resultKey":"TableNames"},"query":{"inputToken":"ExclusiveStartKey","outputToken":"LastEvaluatedKey","limitKey":"Limit","resultKey":"Items"},"scan":{"inputToken":"ExclusiveStartKey","outputToken":"LastEvaluatedKey","limitKey":"Limit","resultKey":"Items"}}});
AWS.Service.defineServiceApi(require("./services/ec2"), "2013-10-15", {"format":"query","apiVersion":"2013-10-15","endpointPrefix":"ec2","serviceAbbreviation":"Amazon EC2","serviceFullName":"Amazon Elastic Compute Cloud","signatureVersion":"v2","timestampFormat":"iso8601","operations":{"activateLicense":{"name":"ActivateLicense","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"LicenseId":{"required":true},"Capacity":{"type":"integer","required":true}}},"output":{"type":"structure","members":{}}},"allocateAddress":{"name":"AllocateAddress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Domain":{}}},"output":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"domain":{"name":"Domain"},"allocationId":{"name":"AllocationId"}}}},"assignPrivateIpAddresses":{"name":"AssignPrivateIpAddresses","input":{"type":"structure","members":{"NetworkInterfaceId":{"required":true},"PrivateIpAddresses":{"type":"list","members":{"name":"PrivateIpAddress"},"flattened":true},"SecondaryPrivateIpAddressCount":{"type":"integer"},"AllowReassignment":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"associateAddress":{"name":"AssociateAddress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{},"PublicIp":{},"AllocationId":{},"NetworkInterfaceId":{},"PrivateIpAddress":{},"AllowReassociation":{"type":"boolean"}}},"output":{"type":"structure","members":{"associationId":{"name":"AssociationId"}}}},"associateDhcpOptions":{"name":"AssociateDhcpOptions","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"DhcpOptionsId":{"required":true},"VpcId":{"required":true}}},"output":{"type":"structure","members":{}}},"associateRouteTable":{"name":"AssociateRouteTable","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SubnetId":{"required":true},"RouteTableId":{"required":true}}},"output":{"type":"structure","members":{"associationId":{"name":"AssociationId"}}}},"attachInternetGateway":{"name":"AttachInternetGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InternetGatewayId":{"required":true},"VpcId":{"required":true}}},"output":{"type":"structure","members":{}}},"attachNetworkInterface":{"name":"AttachNetworkInterface","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceId":{"required":true},"InstanceId":{"required":true},"DeviceIndex":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"}}}},"attachVolume":{"name":"AttachVolume","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true},"InstanceId":{"required":true},"Device":{"required":true}}},"output":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"instanceId":{"name":"InstanceId"},"device":{"name":"Device"},"status":{"name":"State"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"attachment"}},"attachVpnGateway":{"name":"AttachVpnGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnGatewayId":{"required":true},"VpcId":{"required":true}}},"output":{"type":"structure","members":{"attachment":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"}},"name":"VpcAttachment"}}}},"authorizeSecurityGroupEgress":{"name":"AuthorizeSecurityGroupEgress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupId":{"required":true},"SourceSecurityGroupName":{},"SourceSecurityGroupOwnerId":{},"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"CidrIp":{},"IpPermissions":{"type":"list","members":{"type":"structure","members":{"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"UserIdGroupPairs":{"type":"list","members":{"type":"structure","members":{"UserId":{},"GroupName":{},"GroupId":{}},"name":"Groups"},"flattened":true},"IpRanges":{"type":"list","members":{"type":"structure","members":{"CidrIp":{}}},"flattened":true}}},"flattened":true}}},"output":{"type":"structure","members":{}}},"authorizeSecurityGroupIngress":{"name":"AuthorizeSecurityGroupIngress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{},"GroupId":{},"SourceSecurityGroupName":{},"SourceSecurityGroupOwnerId":{},"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"CidrIp":{},"IpPermissions":{"type":"list","members":{"type":"structure","members":{"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"UserIdGroupPairs":{"type":"list","members":{"type":"structure","members":{"UserId":{},"GroupName":{},"GroupId":{}},"name":"Groups"},"flattened":true},"IpRanges":{"type":"list","members":{"type":"structure","members":{"CidrIp":{}}},"flattened":true}}},"flattened":true}}},"output":{"type":"structure","members":{}}},"bundleInstance":{"name":"BundleInstance","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true},"Storage":{"type":"structure","members":{"S3":{"type":"structure","members":{"Bucket":{},"Prefix":{},"AWSAccessKeyId":{},"UploadPolicy":{"type":"base64"},"UploadPolicySignature":{}}}},"required":true}}},"output":{"type":"structure","members":{"bundleInstanceTask":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"bundleId":{"name":"BundleId"},"state":{"name":"State"},"startTime":{"type":"timestamp","name":"StartTime"},"updateTime":{"type":"timestamp","name":"UpdateTime"},"storage":{"type":"structure","members":{"S3":{"type":"structure","members":{"bucket":{"name":"Bucket"},"prefix":{"name":"Prefix"},"AWSAccessKeyId":{},"uploadPolicy":{"name":"UploadPolicy"},"uploadPolicySignature":{"name":"UploadPolicySignature"}}}},"name":"Storage"},"progress":{"name":"Progress"},"error":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"BundleTaskError"}},"name":"BundleTask"}}}},"cancelBundleTask":{"name":"CancelBundleTask","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"BundleId":{"required":true}}},"output":{"type":"structure","members":{"bundleInstanceTask":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"bundleId":{"name":"BundleId"},"state":{"name":"State"},"startTime":{"type":"timestamp","name":"StartTime"},"updateTime":{"type":"timestamp","name":"UpdateTime"},"storage":{"type":"structure","members":{"S3":{"type":"structure","members":{"bucket":{"name":"Bucket"},"prefix":{"name":"Prefix"},"AWSAccessKeyId":{},"uploadPolicy":{"name":"UploadPolicy"},"uploadPolicySignature":{"name":"UploadPolicySignature"}}}},"name":"Storage"},"progress":{"name":"Progress"},"error":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"BundleTaskError"}},"name":"BundleTask"}}}},"cancelConversionTask":{"name":"CancelConversionTask","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ConversionTaskId":{"required":true},"ReasonMessage":{}}},"output":{"type":"structure","members":{}}},"cancelExportTask":{"name":"CancelExportTask","input":{"type":"structure","members":{"ExportTaskId":{"required":true}}},"output":{"type":"structure","members":{}}},"cancelReservedInstancesListing":{"name":"CancelReservedInstancesListing","input":{"type":"structure","members":{"ReservedInstancesListingId":{"required":true}}},"output":{"type":"structure","members":{"reservedInstancesListingsSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesListingId":{"name":"ReservedInstancesListingId"},"reservedInstancesId":{"name":"ReservedInstancesId"},"createDate":{"type":"timestamp","name":"CreateDate"},"updateDate":{"type":"timestamp","name":"UpdateDate"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"instanceCounts":{"type":"list","members":{"type":"structure","members":{"state":{"name":"State"},"instanceCount":{"type":"integer","name":"InstanceCount"}},"name":"item"},"name":"InstanceCounts"},"priceSchedules":{"type":"list","members":{"type":"structure","members":{"term":{"type":"integer","name":"Term"},"price":{"type":"float","name":"Price"},"currencyCode":{"name":"CurrencyCode"},"active":{"type":"boolean","name":"Active"}},"name":"item"},"name":"PriceSchedules"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"clientToken":{"name":"ClientToken"}},"name":"item"},"name":"ReservedInstancesListings"}}}},"cancelSpotInstanceRequests":{"name":"CancelSpotInstanceRequests","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SpotInstanceRequestIds":{"type":"list","members":{"name":"SpotInstanceRequestId"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"spotInstanceRequestSet":{"type":"list","members":{"type":"structure","members":{"spotInstanceRequestId":{"name":"SpotInstanceRequestId"},"state":{"name":"State"}},"name":"item"},"name":"CancelledSpotInstanceRequests"}}}},"confirmProductInstance":{"name":"ConfirmProductInstance","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ProductCode":{"required":true},"InstanceId":{"required":true}}},"output":{"type":"structure","members":{"ownerId":{"name":"OwnerId"}}}},"copyImage":{"name":"CopyImage","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SourceRegion":{"required":true},"SourceImageId":{"required":true},"Name":{"required":true},"Description":{},"ClientToken":{}}},"output":{"type":"structure","members":{"imageId":{"name":"ImageId"}}}},"copySnapshot":{"name":"CopySnapshot","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SourceRegion":{"required":true},"SourceSnapshotId":{"required":true},"Description":{}}},"output":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"}}}},"createCustomerGateway":{"name":"CreateCustomerGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Type":{"required":true},"PublicIp":{"required":true,"name":"IpAddress"},"BgpAsn":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"customerGateway":{"type":"structure","members":{"customerGatewayId":{"name":"CustomerGatewayId"},"state":{"name":"State"},"type":{"name":"Type"},"ipAddress":{"name":"IpAddress"},"bgpAsn":{"name":"BgpAsn"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"CustomerGateway"}}}},"createDhcpOptions":{"name":"CreateDhcpOptions","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"DhcpConfigurations":{"type":"list","members":{"type":"structure","members":{"Key":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"DhcpConfiguration"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"dhcpOptions":{"type":"structure","members":{"dhcpOptionsId":{"name":"DhcpOptionsId"},"dhcpConfigurationSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"valueSet":{"type":"list","members":{"name":"item"},"name":"Values"}},"name":"item"},"name":"DhcpConfigurations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"DhcpOptions"}}}},"createImage":{"name":"CreateImage","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true},"Name":{"required":true},"Description":{},"NoReboot":{"type":"boolean"},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"DeleteOnTermination":{"type":"boolean"},"VolumeType":{},"Iops":{"type":"integer"}}},"NoDevice":{}},"name":"BlockDeviceMapping"},"flattened":true}}},"output":{"type":"structure","members":{"imageId":{"name":"ImageId"}}}},"createInstanceExportTask":{"name":"CreateInstanceExportTask","input":{"type":"structure","members":{"Description":{},"InstanceId":{"required":true},"TargetEnvironment":{},"ExportToS3Task":{"type":"structure","members":{"DiskImageFormat":{},"ContainerFormat":{},"S3Bucket":{},"S3Prefix":{}},"name":"ExportToS3"}}},"output":{"type":"structure","members":{"exportTask":{"type":"structure","members":{"exportTaskId":{"name":"ExportTaskId"},"description":{"name":"Description"},"state":{"name":"State"},"statusMessage":{"name":"StatusMessage"},"instanceExport":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"targetEnvironment":{"name":"TargetEnvironment"}},"name":"InstanceExportDetails"},"exportToS3":{"type":"structure","members":{"diskImageFormat":{"name":"DiskImageFormat"},"containerFormat":{"name":"ContainerFormat"},"s3Bucket":{"name":"S3Bucket"},"s3Key":{"name":"S3Key"}},"name":"ExportToS3Task"}},"name":"ExportTask"}}}},"createInternetGateway":{"name":"CreateInternetGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"}}},"output":{"type":"structure","members":{"internetGateway":{"type":"structure","members":{"internetGatewayId":{"name":"InternetGatewayId"},"attachmentSet":{"type":"list","members":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"}},"name":"item"},"name":"Attachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"InternetGateway"}}}},"createKeyPair":{"name":"CreateKeyPair","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"KeyName":{"required":true}}},"output":{"type":"structure","members":{"keyName":{"name":"KeyName"},"keyFingerprint":{"name":"KeyFingerprint"},"keyMaterial":{"name":"KeyMaterial"}}}},"createNetworkAcl":{"name":"CreateNetworkAcl","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcId":{"required":true}}},"output":{"type":"structure","members":{"networkAcl":{"type":"structure","members":{"networkAclId":{"name":"NetworkAclId"},"vpcId":{"name":"VpcId"},"default":{"type":"boolean","name":"IsDefault"},"entrySet":{"type":"list","members":{"type":"structure","members":{"ruleNumber":{"type":"integer","name":"RuleNumber"},"protocol":{"name":"Protocol"},"ruleAction":{"name":"RuleAction"},"egress":{"type":"boolean","name":"Egress"},"cidrBlock":{"name":"CidrBlock"},"icmpTypeCode":{"type":"structure","members":{"type":{"type":"integer","name":"Type"},"code":{"type":"integer","name":"Code"}},"name":"IcmpTypeCode"},"portRange":{"type":"structure","members":{"from":{"type":"integer","name":"From"},"to":{"type":"integer","name":"To"}},"name":"PortRange"}},"name":"item"},"name":"Entries"},"associationSet":{"type":"list","members":{"type":"structure","members":{"networkAclAssociationId":{"name":"NetworkAclAssociationId"},"networkAclId":{"name":"NetworkAclId"},"subnetId":{"name":"SubnetId"}},"name":"item"},"name":"Associations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"NetworkAcl"}}}},"createNetworkAclEntry":{"name":"CreateNetworkAclEntry","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkAclId":{"required":true},"RuleNumber":{"type":"integer","required":true},"Protocol":{"required":true},"RuleAction":{"required":true},"Egress":{"type":"boolean","required":true},"CidrBlock":{"required":true},"IcmpTypeCode":{"type":"structure","members":{"Type":{"type":"integer"},"Code":{"type":"integer"}},"name":"Icmp"},"PortRange":{"type":"structure","members":{"From":{"type":"integer"},"To":{"type":"integer"}}}}},"output":{"type":"structure","members":{}}},"createNetworkInterface":{"name":"CreateNetworkInterface","input":{"type":"structure","members":{"SubnetId":{"required":true},"Description":{},"PrivateIpAddress":{},"Groups":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"PrivateIpAddresses":{"type":"list","members":{"type":"structure","members":{"PrivateIpAddress":{"required":true},"Primary":{"type":"boolean"}}},"flattened":true},"SecondaryPrivateIpAddressCount":{"type":"integer"},"DryRun":{"type":"boolean"}}},"output":{"type":"structure","members":{"networkInterface":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"availabilityZone":{"name":"AvailabilityZone"},"description":{"name":"Description"},"ownerId":{"name":"OwnerId"},"requesterId":{"name":"RequesterId"},"requesterManaged":{"type":"boolean","name":"RequesterManaged"},"status":{"name":"Status"},"macAddress":{"name":"MacAddress"},"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"attachment":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"},"instanceId":{"name":"InstanceId"},"instanceOwnerId":{"name":"InstanceOwnerId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Attachment"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"ipOwnerId":{"name":"IpOwnerId"},"allocationId":{"name":"AllocationId"},"associationId":{"name":"AssociationId"}},"name":"Association"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"TagSet"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"primary":{"type":"boolean","name":"Primary"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"ipOwnerId":{"name":"IpOwnerId"},"allocationId":{"name":"AllocationId"},"associationId":{"name":"AssociationId"}},"name":"Association"}},"name":"item"},"name":"PrivateIpAddresses"}},"name":"NetworkInterface"}}}},"createPlacementGroup":{"name":"CreatePlacementGroup","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{"required":true},"Strategy":{"required":true}}},"output":{"type":"structure","members":{}}},"createReservedInstancesListing":{"name":"CreateReservedInstancesListing","input":{"type":"structure","members":{"ReservedInstancesId":{"required":true},"InstanceCount":{"type":"integer","required":true},"PriceSchedules":{"type":"list","members":{"type":"structure","members":{"Term":{"type":"integer"},"Price":{"type":"float"},"CurrencyCode":{}}},"required":true,"flattened":true},"ClientToken":{"required":true}}},"output":{"type":"structure","members":{"reservedInstancesListingsSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesListingId":{"name":"ReservedInstancesListingId"},"reservedInstancesId":{"name":"ReservedInstancesId"},"createDate":{"type":"timestamp","name":"CreateDate"},"updateDate":{"type":"timestamp","name":"UpdateDate"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"instanceCounts":{"type":"list","members":{"type":"structure","members":{"state":{"name":"State"},"instanceCount":{"type":"integer","name":"InstanceCount"}},"name":"item"},"name":"InstanceCounts"},"priceSchedules":{"type":"list","members":{"type":"structure","members":{"term":{"type":"integer","name":"Term"},"price":{"type":"float","name":"Price"},"currencyCode":{"name":"CurrencyCode"},"active":{"type":"boolean","name":"Active"}},"name":"item"},"name":"PriceSchedules"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"clientToken":{"name":"ClientToken"}},"name":"item"},"name":"ReservedInstancesListings"}}}},"createRoute":{"name":"CreateRoute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RouteTableId":{"required":true},"DestinationCidrBlock":{"required":true},"GatewayId":{},"InstanceId":{},"NetworkInterfaceId":{}}},"output":{"type":"structure","members":{}}},"createRouteTable":{"name":"CreateRouteTable","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcId":{"required":true}}},"output":{"type":"structure","members":{"routeTable":{"type":"structure","members":{"routeTableId":{"name":"RouteTableId"},"vpcId":{"name":"VpcId"},"routeSet":{"type":"list","members":{"type":"structure","members":{"destinationCidrBlock":{"name":"DestinationCidrBlock"},"gatewayId":{"name":"GatewayId"},"instanceId":{"name":"InstanceId"},"instanceOwnerId":{"name":"InstanceOwnerId"},"networkInterfaceId":{"name":"NetworkInterfaceId"},"state":{"name":"State"},"origin":{"name":"Origin"}},"name":"item"},"name":"Routes"},"associationSet":{"type":"list","members":{"type":"structure","members":{"routeTableAssociationId":{"name":"RouteTableAssociationId"},"routeTableId":{"name":"RouteTableId"},"subnetId":{"name":"SubnetId"},"main":{"type":"boolean","name":"Main"}},"name":"item"},"name":"Associations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"propagatingVgwSet":{"type":"list","members":{"type":"structure","members":{"gatewayId":{"name":"GatewayId"}},"name":"item"},"name":"PropagatingVgws"}},"name":"RouteTable"}}}},"createSecurityGroup":{"name":"CreateSecurityGroup","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{"required":true},"Description":{"required":true,"name":"GroupDescription"},"VpcId":{}}},"output":{"type":"structure","members":{"groupId":{"name":"GroupId"}}}},"createSnapshot":{"name":"CreateSnapshot","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true},"Description":{}}},"output":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeId":{"name":"VolumeId"},"status":{"name":"State"},"startTime":{"type":"timestamp","name":"StartTime"},"progress":{"name":"Progress"},"ownerId":{"name":"OwnerId"},"description":{"name":"Description"},"volumeSize":{"type":"integer","name":"VolumeSize"},"ownerAlias":{"name":"OwnerAlias"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"snapshot"}},"createSpotDatafeedSubscription":{"name":"CreateSpotDatafeedSubscription","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Bucket":{"required":true},"Prefix":{}}},"output":{"type":"structure","members":{"spotDatafeedSubscription":{"type":"structure","members":{"ownerId":{"name":"OwnerId"},"bucket":{"name":"Bucket"},"prefix":{"name":"Prefix"},"state":{"name":"State"},"fault":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"Fault"}},"name":"SpotDatafeedSubscription"}}}},"createSubnet":{"name":"CreateSubnet","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcId":{"required":true},"CidrBlock":{"required":true},"AvailabilityZone":{}}},"output":{"type":"structure","members":{"subnet":{"type":"structure","members":{"subnetId":{"name":"SubnetId"},"state":{"name":"State"},"vpcId":{"name":"VpcId"},"cidrBlock":{"name":"CidrBlock"},"availableIpAddressCount":{"type":"integer","name":"AvailableIpAddressCount"},"availabilityZone":{"name":"AvailabilityZone"},"defaultForAz":{"type":"boolean","name":"DefaultForAz"},"mapPublicIpOnLaunch":{"type":"boolean","name":"MapPublicIpOnLaunch"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"Subnet"}}}},"createTags":{"name":"CreateTags","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Resources":{"type":"list","members":{"name":"ResourceId"},"required":true,"flattened":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{}}},"createVolume":{"name":"CreateVolume","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Size":{"type":"integer"},"SnapshotId":{},"AvailabilityZone":{"required":true},"VolumeType":{},"Iops":{"type":"integer"}}},"output":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"size":{"type":"integer","name":"Size"},"snapshotId":{"name":"SnapshotId"},"availabilityZone":{"name":"AvailabilityZone"},"status":{"name":"State"},"createTime":{"type":"timestamp","name":"CreateTime"},"attachmentSet":{"type":"list","members":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"instanceId":{"name":"InstanceId"},"device":{"name":"Device"},"status":{"name":"State"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"item"},"name":"Attachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"volume"}},"createVpc":{"name":"CreateVpc","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"CidrBlock":{"required":true},"InstanceTenancy":{}}},"output":{"type":"structure","members":{"vpc":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"},"cidrBlock":{"name":"CidrBlock"},"dhcpOptionsId":{"name":"DhcpOptionsId"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"instanceTenancy":{"name":"InstanceTenancy"},"isDefault":{"type":"boolean","name":"IsDefault"}},"name":"Vpc"}}}},"createVpnConnection":{"name":"CreateVpnConnection","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Type":{"required":true},"CustomerGatewayId":{"required":true},"VpnGatewayId":{"required":true},"Options":{"type":"structure","members":{"StaticRoutesOnly":{"type":"boolean"}}}}},"output":{"type":"structure","members":{"vpnConnection":{"type":"structure","members":{"vpnConnectionId":{"name":"VpnConnectionId"},"state":{"name":"State"},"customerGatewayConfiguration":{"name":"CustomerGatewayConfiguration"},"type":{"name":"Type"},"customerGatewayId":{"name":"CustomerGatewayId"},"vpnGatewayId":{"name":"VpnGatewayId"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"vgwTelemetry":{"type":"list","members":{"type":"structure","members":{"outsideIpAddress":{"name":"OutsideIpAddress"},"status":{"name":"Status"},"lastStatusChange":{"type":"timestamp","name":"LastStatusChange"},"statusMessage":{"name":"StatusMessage"},"acceptedRouteCount":{"type":"integer","name":"AcceptedRouteCount"}},"name":"item"},"name":"VgwTelemetry"},"options":{"type":"structure","members":{"staticRoutesOnly":{"type":"boolean","name":"StaticRoutesOnly"}},"name":"Options"},"routes":{"type":"list","members":{"type":"structure","members":{"destinationCidrBlock":{"name":"DestinationCidrBlock"},"source":{"name":"Source"},"state":{"name":"State"}},"name":"item"},"name":"Routes"}},"name":"VpnConnection"}}}},"createVpnConnectionRoute":{"name":"CreateVpnConnectionRoute","input":{"type":"structure","members":{"VpnConnectionId":{"required":true},"DestinationCidrBlock":{"required":true}}},"output":{"type":"structure","members":{}}},"createVpnGateway":{"name":"CreateVpnGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Type":{"required":true},"AvailabilityZone":{}}},"output":{"type":"structure","members":{"vpnGateway":{"type":"structure","members":{"vpnGatewayId":{"name":"VpnGatewayId"},"state":{"name":"State"},"type":{"name":"Type"},"availabilityZone":{"name":"AvailabilityZone"},"attachments":{"type":"list","members":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"}},"name":"item"},"name":"VpcAttachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"VpnGateway"}}}},"deleteCustomerGateway":{"name":"DeleteCustomerGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"CustomerGatewayId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDhcpOptions":{"name":"DeleteDhcpOptions","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"DhcpOptionsId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteInternetGateway":{"name":"DeleteInternetGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InternetGatewayId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteKeyPair":{"name":"DeleteKeyPair","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"KeyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteNetworkAcl":{"name":"DeleteNetworkAcl","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkAclId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteNetworkAclEntry":{"name":"DeleteNetworkAclEntry","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkAclId":{"required":true},"RuleNumber":{"type":"integer","required":true},"Egress":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{}}},"deleteNetworkInterface":{"name":"DeleteNetworkInterface","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceId":{"required":true}}},"output":{"type":"structure","members":{}}},"deletePlacementGroup":{"name":"DeletePlacementGroup","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteRoute":{"name":"DeleteRoute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RouteTableId":{"required":true},"DestinationCidrBlock":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteRouteTable":{"name":"DeleteRouteTable","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RouteTableId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteSecurityGroup":{"name":"DeleteSecurityGroup","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{},"GroupId":{}}},"output":{"type":"structure","members":{}}},"deleteSnapshot":{"name":"DeleteSnapshot","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SnapshotId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteSpotDatafeedSubscription":{"name":"DeleteSpotDatafeedSubscription","input":{"type":"structure","members":{"DryRun":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"deleteSubnet":{"name":"DeleteSubnet","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SubnetId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteTags":{"name":"DeleteTags","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Resources":{"type":"list","members":{"name":"ResourceId"},"required":true,"flattened":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"},"flattened":true}}},"output":{"type":"structure","members":{}}},"deleteVolume":{"name":"DeleteVolume","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVpc":{"name":"DeleteVpc","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVpnConnection":{"name":"DeleteVpnConnection","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnConnectionId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVpnConnectionRoute":{"name":"DeleteVpnConnectionRoute","input":{"type":"structure","members":{"VpnConnectionId":{"required":true},"DestinationCidrBlock":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVpnGateway":{"name":"DeleteVpnGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnGatewayId":{"required":true}}},"output":{"type":"structure","members":{}}},"deregisterImage":{"name":"DeregisterImage","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageId":{"required":true}}},"output":{"type":"structure","members":{}}},"describeAccountAttributes":{"name":"DescribeAccountAttributes","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AttributeNames":{"type":"list","members":{"name":"AttributeName"},"flattened":true}}},"output":{"type":"structure","members":{"accountAttributeSet":{"type":"list","members":{"type":"structure","members":{"attributeName":{"name":"AttributeName"},"attributeValueSet":{"type":"list","members":{"type":"structure","members":{"attributeValue":{"name":"AttributeValue"}},"name":"item"},"name":"AttributeValues"}},"name":"item"},"name":"AccountAttributes"}}}},"describeAddresses":{"name":"DescribeAddresses","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"PublicIps":{"type":"list","members":{"name":"PublicIp"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"AllocationIds":{"type":"list","members":{"name":"AllocationId"},"flattened":true}}},"output":{"type":"structure","members":{"addressesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"publicIp":{"name":"PublicIp"},"allocationId":{"name":"AllocationId"},"associationId":{"name":"AssociationId"},"domain":{"name":"Domain"},"networkInterfaceId":{"name":"NetworkInterfaceId"},"networkInterfaceOwnerId":{"name":"NetworkInterfaceOwnerId"},"privateIpAddress":{"name":"PrivateIpAddress"}},"name":"item"},"name":"Addresses"}}}},"describeAvailabilityZones":{"name":"DescribeAvailabilityZones","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ZoneNames":{"type":"list","members":{"name":"ZoneName"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"availabilityZoneInfo":{"type":"list","members":{"type":"structure","members":{"zoneName":{"name":"ZoneName"},"zoneState":{"name":"State"},"regionName":{"name":"RegionName"},"messageSet":{"type":"list","members":{"type":"structure","members":{"message":{"name":"Message"}},"name":"item"},"name":"Messages"}},"name":"item"},"name":"AvailabilityZones"}}}},"describeBundleTasks":{"name":"DescribeBundleTasks","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"BundleIds":{"type":"list","members":{"name":"BundleId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"bundleInstanceTasksSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"bundleId":{"name":"BundleId"},"state":{"name":"State"},"startTime":{"type":"timestamp","name":"StartTime"},"updateTime":{"type":"timestamp","name":"UpdateTime"},"storage":{"type":"structure","members":{"S3":{"type":"structure","members":{"bucket":{"name":"Bucket"},"prefix":{"name":"Prefix"},"AWSAccessKeyId":{},"uploadPolicy":{"name":"UploadPolicy"},"uploadPolicySignature":{"name":"UploadPolicySignature"}}}},"name":"Storage"},"progress":{"name":"Progress"},"error":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"BundleTaskError"}},"name":"item"},"name":"BundleTasks"}}}},"describeConversionTasks":{"name":"DescribeConversionTasks","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"ConversionTaskIds":{"type":"list","members":{"name":"ConversionTaskId"},"flattened":true}}},"output":{"type":"structure","members":{"conversionTasks":{"type":"list","members":{"type":"structure","members":{"conversionTaskId":{"name":"ConversionTaskId"},"expirationTime":{"name":"ExpirationTime"},"importInstance":{"type":"structure","members":{"volumes":{"type":"list","members":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"description":{"name":"Description"}},"name":"item"},"name":"Volumes"},"instanceId":{"name":"InstanceId"},"platform":{"name":"Platform"},"description":{"name":"Description"}},"name":"ImportInstance"},"importVolume":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"description":{"name":"Description"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"}},"name":"ImportVolume"},"state":{"name":"State"},"statusMessage":{"name":"StatusMessage"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"ConversionTasks"}}}},"describeCustomerGateways":{"name":"DescribeCustomerGateways","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"CustomerGatewayIds":{"type":"list","members":{"name":"CustomerGatewayId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"customerGatewaySet":{"type":"list","members":{"type":"structure","members":{"customerGatewayId":{"name":"CustomerGatewayId"},"state":{"name":"State"},"type":{"name":"Type"},"ipAddress":{"name":"IpAddress"},"bgpAsn":{"name":"BgpAsn"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"CustomerGateways"}}}},"describeDhcpOptions":{"name":"DescribeDhcpOptions","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"DhcpOptionsIds":{"type":"list","members":{"name":"DhcpOptionsId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"dhcpOptionsSet":{"type":"list","members":{"type":"structure","members":{"dhcpOptionsId":{"name":"DhcpOptionsId"},"dhcpConfigurationSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"valueSet":{"type":"list","members":{"name":"item"},"name":"Values"}},"name":"item"},"name":"DhcpConfigurations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"DhcpOptions"}}}},"describeExportTasks":{"name":"DescribeExportTasks","input":{"type":"structure","members":{"ExportTaskIds":{"type":"list","members":{"name":"ExportTaskId"},"flattened":true}}},"output":{"type":"structure","members":{"exportTaskSet":{"type":"list","members":{"type":"structure","members":{"exportTaskId":{"name":"ExportTaskId"},"description":{"name":"Description"},"state":{"name":"State"},"statusMessage":{"name":"StatusMessage"},"instanceExport":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"targetEnvironment":{"name":"TargetEnvironment"}},"name":"InstanceExportDetails"},"exportToS3":{"type":"structure","members":{"diskImageFormat":{"name":"DiskImageFormat"},"containerFormat":{"name":"ContainerFormat"},"s3Bucket":{"name":"S3Bucket"},"s3Key":{"name":"S3Key"}},"name":"ExportToS3Task"}},"name":"item"},"name":"ExportTasks"}}}},"describeImageAttribute":{"name":"DescribeImageAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{"imageId":{"name":"ImageId"},"launchPermission":{"type":"list","members":{"type":"structure","members":{"userId":{"name":"UserId"},"group":{"name":"Group"}},"name":"item"},"name":"LaunchPermissions"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"},"kernel":{"type":"structure","members":{"value":{"name":"Value"}},"name":"KernelId"},"ramdisk":{"type":"structure","members":{"value":{"name":"Value"}},"name":"RamdiskId"},"description":{"type":"structure","members":{"value":{"name":"Value"}},"name":"Description"},"sriovNetSupport":{"type":"structure","members":{"value":{"name":"Value"}},"name":"SriovNetSupport"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"virtualName":{"name":"VirtualName"},"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeSize":{"type":"integer","name":"VolumeSize"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"Ebs"},"noDevice":{"name":"NoDevice"}},"name":"item"},"name":"BlockDeviceMappings"}},"name":"imageAttribute"}},"describeImages":{"name":"DescribeImages","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageIds":{"type":"list","members":{"name":"ImageId"},"flattened":true},"Owners":{"type":"list","members":{"name":"Owner"},"flattened":true},"ExecutableUsers":{"type":"list","members":{"name":"ExecutableBy"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"imagesSet":{"type":"list","members":{"type":"structure","members":{"imageId":{"name":"ImageId"},"imageLocation":{"name":"ImageLocation"},"imageState":{"name":"State"},"imageOwnerId":{"name":"OwnerId"},"isPublic":{"type":"boolean","name":"Public"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"},"architecture":{"name":"Architecture"},"imageType":{"name":"ImageType"},"kernelId":{"name":"KernelId"},"ramdiskId":{"name":"RamdiskId"},"platform":{"name":"Platform"},"sriovNetSupport":{"name":"SriovNetSupport"},"stateReason":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"StateReason"},"imageOwnerAlias":{"name":"ImageOwnerAlias"},"name":{"name":"Name"},"description":{"name":"Description"},"rootDeviceType":{"name":"RootDeviceType"},"rootDeviceName":{"name":"RootDeviceName"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"virtualName":{"name":"VirtualName"},"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeSize":{"type":"integer","name":"VolumeSize"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"Ebs"},"noDevice":{"name":"NoDevice"}},"name":"item"},"name":"BlockDeviceMappings"},"virtualizationType":{"name":"VirtualizationType"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"hypervisor":{"name":"Hypervisor"}},"name":"item"},"name":"Images"}}}},"describeInstanceAttribute":{"name":"DescribeInstanceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"instanceType":{"type":"structure","members":{"value":{"name":"Value"}},"name":"InstanceType"},"kernel":{"type":"structure","members":{"value":{"name":"Value"}},"name":"KernelId"},"ramdisk":{"type":"structure","members":{"value":{"name":"Value"}},"name":"RamdiskId"},"userData":{"type":"structure","members":{"value":{"name":"Value"}},"name":"UserData"},"disableApiTermination":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"DisableApiTermination"},"instanceInitiatedShutdownBehavior":{"type":"structure","members":{"value":{"name":"Value"}},"name":"InstanceInitiatedShutdownBehavior"},"rootDeviceName":{"type":"structure","members":{"value":{"name":"Value"}},"name":"RootDeviceName"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Ebs"}},"name":"item"},"name":"BlockDeviceMappings"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"},"ebsOptimized":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"EbsOptimized"},"sriovNetSupport":{"type":"structure","members":{"value":{"name":"Value"}},"name":"SriovNetSupport"}}}},"describeInstanceStatus":{"name":"DescribeInstanceStatus","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"NextToken":{},"MaxResults":{"type":"integer"},"IncludeAllInstances":{"type":"boolean"}}},"output":{"type":"structure","members":{"instanceStatusSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"availabilityZone":{"name":"AvailabilityZone"},"eventsSet":{"type":"list","members":{"type":"structure","members":{"code":{"name":"Code"},"description":{"name":"Description"},"notBefore":{"type":"timestamp","name":"NotBefore"},"notAfter":{"type":"timestamp","name":"NotAfter"}},"name":"item"},"name":"Events"},"instanceState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"InstanceState"},"systemStatus":{"type":"structure","members":{"status":{"name":"Status"},"details":{"type":"list","members":{"type":"structure","members":{"name":{"name":"Name"},"status":{"name":"Status"},"impairedSince":{"type":"timestamp","name":"ImpairedSince"}},"name":"item"},"name":"Details"}},"name":"SystemStatus"},"instanceStatus":{"type":"structure","members":{"status":{"name":"Status"},"details":{"type":"list","members":{"type":"structure","members":{"name":{"name":"Name"},"status":{"name":"Status"},"impairedSince":{"type":"timestamp","name":"ImpairedSince"}},"name":"item"},"name":"Details"}},"name":"InstanceStatus"}},"name":"item"},"name":"InstanceStatuses"},"nextToken":{"name":"NextToken"}}}},"describeInstances":{"name":"DescribeInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"NextToken":{},"MaxResults":{"type":"integer"}}},"output":{"type":"structure","members":{"reservationSet":{"type":"list","members":{"type":"structure","members":{"reservationId":{"name":"ReservationId"},"ownerId":{"name":"OwnerId"},"requesterId":{"name":"RequesterId"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"imageId":{"name":"ImageId"},"instanceState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"State"},"privateDnsName":{"name":"PrivateDnsName"},"dnsName":{"name":"PublicDnsName"},"reason":{"name":"StateTransitionReason"},"keyName":{"name":"KeyName"},"amiLaunchIndex":{"type":"integer","name":"AmiLaunchIndex"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"},"instanceType":{"name":"InstanceType"},"launchTime":{"type":"timestamp","name":"LaunchTime"},"placement":{"type":"structure","members":{"availabilityZone":{"name":"AvailabilityZone"},"groupName":{"name":"GroupName"},"tenancy":{"name":"Tenancy"}},"name":"Placement"},"kernelId":{"name":"KernelId"},"ramdiskId":{"name":"RamdiskId"},"platform":{"name":"Platform"},"monitoring":{"type":"structure","members":{"state":{"name":"State"}},"name":"Monitoring"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"privateIpAddress":{"name":"PrivateIpAddress"},"ipAddress":{"name":"PublicIpAddress"},"stateReason":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"StateReason"},"architecture":{"name":"Architecture"},"rootDeviceType":{"name":"RootDeviceType"},"rootDeviceName":{"name":"RootDeviceName"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Ebs"}},"name":"item"},"name":"BlockDeviceMappings"},"virtualizationType":{"name":"VirtualizationType"},"instanceLifecycle":{"name":"InstanceLifecycle"},"spotInstanceRequestId":{"name":"SpotInstanceRequestId"},"clientToken":{"name":"ClientToken"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"SecurityGroups"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"hypervisor":{"name":"Hypervisor"},"networkInterfaceSet":{"type":"list","members":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"description":{"name":"Description"},"ownerId":{"name":"OwnerId"},"status":{"name":"Status"},"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"attachment":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Attachment"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"publicDnsName":{"name":"PublicDnsName"},"ipOwnerId":{"name":"IpOwnerId"}},"name":"Association"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"primary":{"type":"boolean","name":"Primary"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"publicDnsName":{"name":"PublicDnsName"},"ipOwnerId":{"name":"IpOwnerId"}},"name":"Association"}},"name":"item"},"name":"PrivateIpAddresses"}},"name":"item"},"name":"NetworkInterfaces"},"iamInstanceProfile":{"type":"structure","members":{"arn":{"name":"Arn"},"id":{"name":"Id"}},"name":"IamInstanceProfile"},"ebsOptimized":{"type":"boolean","name":"EbsOptimized"},"sriovNetSupport":{"name":"SriovNetSupport"}},"name":"item"},"name":"Instances"}},"name":"item"},"name":"Reservations"},"nextToken":{"name":"NextToken"}}}},"describeInternetGateways":{"name":"DescribeInternetGateways","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InternetGatewayIds":{"type":"list","members":{"name":"InternetGatewayId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"internetGatewaySet":{"type":"list","members":{"type":"structure","members":{"internetGatewayId":{"name":"InternetGatewayId"},"attachmentSet":{"type":"list","members":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"}},"name":"item"},"name":"Attachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"InternetGateways"}}}},"describeKeyPairs":{"name":"DescribeKeyPairs","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"KeyNames":{"type":"list","members":{"name":"KeyName"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"keySet":{"type":"list","members":{"type":"structure","members":{"keyName":{"name":"KeyName"},"keyFingerprint":{"name":"KeyFingerprint"}},"name":"item"},"name":"KeyPairs"}}}},"describeNetworkAcls":{"name":"DescribeNetworkAcls","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkAclIds":{"type":"list","members":{"name":"NetworkAclId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"networkAclSet":{"type":"list","members":{"type":"structure","members":{"networkAclId":{"name":"NetworkAclId"},"vpcId":{"name":"VpcId"},"default":{"type":"boolean","name":"IsDefault"},"entrySet":{"type":"list","members":{"type":"structure","members":{"ruleNumber":{"type":"integer","name":"RuleNumber"},"protocol":{"name":"Protocol"},"ruleAction":{"name":"RuleAction"},"egress":{"type":"boolean","name":"Egress"},"cidrBlock":{"name":"CidrBlock"},"icmpTypeCode":{"type":"structure","members":{"type":{"type":"integer","name":"Type"},"code":{"type":"integer","name":"Code"}},"name":"IcmpTypeCode"},"portRange":{"type":"structure","members":{"from":{"type":"integer","name":"From"},"to":{"type":"integer","name":"To"}},"name":"PortRange"}},"name":"item"},"name":"Entries"},"associationSet":{"type":"list","members":{"type":"structure","members":{"networkAclAssociationId":{"name":"NetworkAclAssociationId"},"networkAclId":{"name":"NetworkAclId"},"subnetId":{"name":"SubnetId"}},"name":"item"},"name":"Associations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"NetworkAcls"}}}},"describeNetworkInterfaceAttribute":{"name":"DescribeNetworkInterfaceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceId":{"required":true},"Description":{},"SourceDestCheck":{},"Groups":{"name":"GroupSet"},"Attachment":{}}},"output":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"description":{"type":"structure","members":{"value":{"name":"Value"}},"name":"Description"},"sourceDestCheck":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"SourceDestCheck"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"attachment":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"},"instanceId":{"name":"InstanceId"},"instanceOwnerId":{"name":"InstanceOwnerId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Attachment"}}}},"describeNetworkInterfaces":{"name":"DescribeNetworkInterfaces","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceIds":{"type":"list","members":{"name":"NetworkInterfaceId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"networkInterfaceSet":{"type":"list","members":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"availabilityZone":{"name":"AvailabilityZone"},"description":{"name":"Description"},"ownerId":{"name":"OwnerId"},"requesterId":{"name":"RequesterId"},"requesterManaged":{"type":"boolean","name":"RequesterManaged"},"status":{"name":"Status"},"macAddress":{"name":"MacAddress"},"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"attachment":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"},"instanceId":{"name":"InstanceId"},"instanceOwnerId":{"name":"InstanceOwnerId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Attachment"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"ipOwnerId":{"name":"IpOwnerId"},"allocationId":{"name":"AllocationId"},"associationId":{"name":"AssociationId"}},"name":"Association"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"TagSet"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"primary":{"type":"boolean","name":"Primary"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"ipOwnerId":{"name":"IpOwnerId"},"allocationId":{"name":"AllocationId"},"associationId":{"name":"AssociationId"}},"name":"Association"}},"name":"item"},"name":"PrivateIpAddresses"}},"name":"item"},"name":"NetworkInterfaces"}}}},"describePlacementGroups":{"name":"DescribePlacementGroups","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupNames":{"type":"list","members":{"name":"GroupName"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"placementGroupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"strategy":{"name":"Strategy"},"state":{"name":"State"}},"name":"item"},"name":"PlacementGroups"}}}},"describeRegions":{"name":"DescribeRegions","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RegionNames":{"type":"list","members":{"name":"RegionName"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"regionInfo":{"type":"list","members":{"type":"structure","members":{"regionName":{"name":"RegionName"},"regionEndpoint":{"name":"Endpoint"}},"name":"item"},"name":"Regions"}}}},"describeReservedInstances":{"name":"DescribeReservedInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ReservedInstancesIds":{"type":"list","members":{"name":"ReservedInstancesId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"OfferingType":{}}},"output":{"type":"structure","members":{"reservedInstancesSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesId":{"name":"ReservedInstancesId"},"instanceType":{"name":"InstanceType"},"availabilityZone":{"name":"AvailabilityZone"},"start":{"type":"timestamp","name":"Start"},"end":{"type":"timestamp","name":"End"},"duration":{"type":"integer","name":"Duration"},"usagePrice":{"type":"float","name":"UsagePrice"},"fixedPrice":{"type":"float","name":"FixedPrice"},"instanceCount":{"type":"integer","name":"InstanceCount"},"productDescription":{"name":"ProductDescription"},"state":{"name":"State"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"instanceTenancy":{"name":"InstanceTenancy"},"currencyCode":{"name":"CurrencyCode"},"offeringType":{"name":"OfferingType"},"recurringCharges":{"type":"list","members":{"type":"structure","members":{"frequency":{"name":"Frequency"},"amount":{"type":"float","name":"Amount"}},"name":"item"},"name":"RecurringCharges"}},"name":"item"},"name":"ReservedInstances"}}}},"describeReservedInstancesListings":{"name":"DescribeReservedInstancesListings","input":{"type":"structure","members":{"ReservedInstancesId":{},"ReservedInstancesListingId":{},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}}},"flattened":true}}},"output":{"type":"structure","members":{"reservedInstancesListingsSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesListingId":{"name":"ReservedInstancesListingId"},"reservedInstancesId":{"name":"ReservedInstancesId"},"createDate":{"type":"timestamp","name":"CreateDate"},"updateDate":{"type":"timestamp","name":"UpdateDate"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"instanceCounts":{"type":"list","members":{"type":"structure","members":{"state":{"name":"State"},"instanceCount":{"type":"integer","name":"InstanceCount"}},"name":"item"},"name":"InstanceCounts"},"priceSchedules":{"type":"list","members":{"type":"structure","members":{"term":{"type":"integer","name":"Term"},"price":{"type":"float","name":"Price"},"currencyCode":{"name":"CurrencyCode"},"active":{"type":"boolean","name":"Active"}},"name":"item"},"name":"PriceSchedules"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"clientToken":{"name":"ClientToken"}},"name":"item"},"name":"ReservedInstancesListings"}}}},"describeReservedInstancesModifications":{"name":"DescribeReservedInstancesModifications","input":{"type":"structure","members":{"ReservedInstancesModificationIds":{"type":"list","members":{"name":"ReservedInstancesModificationId"},"flattened":true},"NextToken":{},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"reservedInstancesModificationsSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesModificationId":{"name":"ReservedInstancesModificationId"},"reservedInstancesSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesId":{"name":"ReservedInstancesId"}},"name":"item"},"name":"ReservedInstancesIds"},"modificationResultSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesId":{"name":"ReservedInstancesId"},"targetConfiguration":{"type":"structure","members":{"availabilityZone":{"name":"AvailabilityZone"},"platform":{"name":"Platform"},"instanceCount":{"type":"integer","name":"InstanceCount"},"instanceType":{"name":"InstanceType"}},"name":"TargetConfiguration"}},"name":"item"},"name":"ModificationResults"},"createDate":{"type":"timestamp","name":"CreateDate"},"updateDate":{"type":"timestamp","name":"UpdateDate"},"effectiveDate":{"type":"timestamp","name":"EffectiveDate"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"clientToken":{"name":"ClientToken"}},"name":"item"},"name":"ReservedInstancesModifications"},"nextToken":{"name":"NextToken"}}}},"describeReservedInstancesOfferings":{"name":"DescribeReservedInstancesOfferings","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ReservedInstancesOfferingIds":{"type":"list","members":{"name":"ReservedInstancesOfferingId"},"flattened":true},"InstanceType":{},"AvailabilityZone":{},"ProductDescription":{},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"InstanceTenancy":{},"OfferingType":{},"NextToken":{},"MaxResults":{"type":"integer"},"IncludeMarketplace":{"type":"boolean"},"MinDuration":{"type":"integer"},"MaxDuration":{"type":"integer"},"MaxInstanceCount":{"type":"integer"}}},"output":{"type":"structure","members":{"reservedInstancesOfferingsSet":{"type":"list","members":{"type":"structure","members":{"reservedInstancesOfferingId":{"name":"ReservedInstancesOfferingId"},"instanceType":{"name":"InstanceType"},"availabilityZone":{"name":"AvailabilityZone"},"duration":{"type":"integer","name":"Duration"},"usagePrice":{"type":"float","name":"UsagePrice"},"fixedPrice":{"type":"float","name":"FixedPrice"},"productDescription":{"name":"ProductDescription"},"instanceTenancy":{"name":"InstanceTenancy"},"currencyCode":{"name":"CurrencyCode"},"offeringType":{"name":"OfferingType"},"recurringCharges":{"type":"list","members":{"type":"structure","members":{"frequency":{"name":"Frequency"},"amount":{"type":"float","name":"Amount"}},"name":"item"},"name":"RecurringCharges"},"marketplace":{"type":"boolean","name":"Marketplace"},"pricingDetailsSet":{"type":"list","members":{"type":"structure","members":{"price":{"type":"float","name":"Price"},"count":{"type":"integer","name":"Count"}},"name":"item"},"name":"PricingDetails"}},"name":"item"},"name":"ReservedInstancesOfferings"},"nextToken":{"name":"NextToken"}}}},"describeRouteTables":{"name":"DescribeRouteTables","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RouteTableIds":{"type":"list","members":{"name":"RouteTableId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"routeTableSet":{"type":"list","members":{"type":"structure","members":{"routeTableId":{"name":"RouteTableId"},"vpcId":{"name":"VpcId"},"routeSet":{"type":"list","members":{"type":"structure","members":{"destinationCidrBlock":{"name":"DestinationCidrBlock"},"gatewayId":{"name":"GatewayId"},"instanceId":{"name":"InstanceId"},"instanceOwnerId":{"name":"InstanceOwnerId"},"networkInterfaceId":{"name":"NetworkInterfaceId"},"state":{"name":"State"},"origin":{"name":"Origin"}},"name":"item"},"name":"Routes"},"associationSet":{"type":"list","members":{"type":"structure","members":{"routeTableAssociationId":{"name":"RouteTableAssociationId"},"routeTableId":{"name":"RouteTableId"},"subnetId":{"name":"SubnetId"},"main":{"type":"boolean","name":"Main"}},"name":"item"},"name":"Associations"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"propagatingVgwSet":{"type":"list","members":{"type":"structure","members":{"gatewayId":{"name":"GatewayId"}},"name":"item"},"name":"PropagatingVgws"}},"name":"item"},"name":"RouteTables"}}}},"describeSecurityGroups":{"name":"DescribeSecurityGroups","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupNames":{"type":"list","members":{"name":"GroupName"},"flattened":true},"GroupIds":{"type":"list","members":{"name":"GroupId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"securityGroupInfo":{"type":"list","members":{"type":"structure","members":{"ownerId":{"name":"OwnerId"},"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"},"groupDescription":{"name":"Description"},"ipPermissions":{"type":"list","members":{"type":"structure","members":{"ipProtocol":{"name":"IpProtocol"},"fromPort":{"type":"integer","name":"FromPort"},"toPort":{"type":"integer","name":"ToPort"},"groups":{"type":"list","members":{"type":"structure","members":{"userId":{"name":"UserId"},"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"UserIdGroupPairs"},"ipRanges":{"type":"list","members":{"type":"structure","members":{"cidrIp":{"name":"CidrIp"}},"name":"item"},"name":"IpRanges"}},"name":"item"},"name":"IpPermissions"},"ipPermissionsEgress":{"type":"list","members":{"type":"structure","members":{"ipProtocol":{"name":"IpProtocol"},"fromPort":{"type":"integer","name":"FromPort"},"toPort":{"type":"integer","name":"ToPort"},"groups":{"type":"list","members":{"type":"structure","members":{"userId":{"name":"UserId"},"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"UserIdGroupPairs"},"ipRanges":{"type":"list","members":{"type":"structure","members":{"cidrIp":{"name":"CidrIp"}},"name":"item"},"name":"IpRanges"}},"name":"item"},"name":"IpPermissionsEgress"},"vpcId":{"name":"VpcId"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"SecurityGroups"}}}},"describeSnapshotAttribute":{"name":"DescribeSnapshotAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SnapshotId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"createVolumePermission":{"type":"list","members":{"type":"structure","members":{"userId":{"name":"UserId"},"group":{"name":"Group"}},"name":"item"},"name":"CreateVolumePermissions"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"}}}},"describeSnapshots":{"name":"DescribeSnapshots","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SnapshotIds":{"type":"list","members":{"name":"SnapshotId"},"flattened":true},"OwnerIds":{"type":"list","members":{"name":"Owner"},"flattened":true},"RestorableByUserIds":{"type":"list","members":{"name":"RestorableBy"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"snapshotSet":{"type":"list","members":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeId":{"name":"VolumeId"},"status":{"name":"State"},"startTime":{"type":"timestamp","name":"StartTime"},"progress":{"name":"Progress"},"ownerId":{"name":"OwnerId"},"description":{"name":"Description"},"volumeSize":{"type":"integer","name":"VolumeSize"},"ownerAlias":{"name":"OwnerAlias"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"Snapshots"}}}},"describeSpotDatafeedSubscription":{"name":"DescribeSpotDatafeedSubscription","input":{"type":"structure","members":{"DryRun":{"type":"boolean"}}},"output":{"type":"structure","members":{"spotDatafeedSubscription":{"type":"structure","members":{"ownerId":{"name":"OwnerId"},"bucket":{"name":"Bucket"},"prefix":{"name":"Prefix"},"state":{"name":"State"},"fault":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"Fault"}},"name":"SpotDatafeedSubscription"}}}},"describeSpotInstanceRequests":{"name":"DescribeSpotInstanceRequests","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SpotInstanceRequestIds":{"type":"list","members":{"name":"SpotInstanceRequestId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"spotInstanceRequestSet":{"type":"list","members":{"type":"structure","members":{"spotInstanceRequestId":{"name":"SpotInstanceRequestId"},"spotPrice":{"name":"SpotPrice"},"type":{"name":"Type"},"state":{"name":"State"},"fault":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"Fault"},"status":{"type":"structure","members":{"code":{"name":"Code"},"updateTime":{"type":"timestamp","name":"UpdateTime"},"message":{"name":"Message"}},"name":"Status"},"validFrom":{"type":"timestamp","name":"ValidFrom"},"validUntil":{"type":"timestamp","name":"ValidUntil"},"launchGroup":{"name":"LaunchGroup"},"availabilityZoneGroup":{"name":"AvailabilityZoneGroup"},"launchSpecification":{"type":"structure","members":{"imageId":{"name":"ImageId"},"keyName":{"name":"KeyName"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"SecurityGroups"},"userData":{"name":"UserData"},"addressingType":{"name":"AddressingType"},"instanceType":{"name":"InstanceType"},"placement":{"type":"structure","members":{"availabilityZone":{"name":"AvailabilityZone"},"groupName":{"name":"GroupName"}},"name":"Placement"},"kernelId":{"name":"KernelId"},"ramdiskId":{"name":"RamdiskId"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"virtualName":{"name":"VirtualName"},"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeSize":{"type":"integer","name":"VolumeSize"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"Ebs"},"noDevice":{"name":"NoDevice"}},"name":"item"},"name":"BlockDeviceMappings"},"monitoringEnabled":{"type":"boolean","name":"MonitoringEnabled"},"subnetId":{"name":"SubnetId"},"networkInterfaceSet":{"type":"list","members":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"subnetId":{"name":"SubnetId"},"description":{"name":"Description"},"privateIpAddress":{"name":"PrivateIpAddress"},"SecurityGroupId":{"type":"list","members":{"name":"SecurityGroupId"},"name":"Groups"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"primary":{"type":"boolean","name":"Primary"}},"name":"item"},"name":"PrivateIpAddresses"},"secondaryPrivateIpAddressCount":{"type":"integer","name":"SecondaryPrivateIpAddressCount"},"associatePublicIpAddress":{"type":"boolean","name":"AssociatePublicIpAddress"}},"name":"item"},"name":"NetworkInterfaces"},"iamInstanceProfile":{"type":"structure","members":{"arn":{"name":"Arn"},"name":{"name":"Name"}},"name":"IamInstanceProfile"},"ebsOptimized":{"type":"boolean","name":"EbsOptimized"}},"name":"LaunchSpecification"},"instanceId":{"name":"InstanceId"},"createTime":{"type":"timestamp","name":"CreateTime"},"productDescription":{"name":"ProductDescription"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"launchedAvailabilityZone":{"name":"LaunchedAvailabilityZone"}},"name":"item"},"name":"SpotInstanceRequests"}}}},"describeSpotPriceHistory":{"name":"DescribeSpotPriceHistory","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"InstanceTypes":{"type":"list","members":{"name":"InstanceType"},"flattened":true},"ProductDescriptions":{"type":"list","members":{"name":"ProductDescription"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"AvailabilityZone":{},"MaxResults":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"spotPriceHistorySet":{"type":"list","members":{"type":"structure","members":{"instanceType":{"name":"InstanceType"},"productDescription":{"name":"ProductDescription"},"spotPrice":{"name":"SpotPrice"},"timestamp":{"type":"timestamp","name":"Timestamp"},"availabilityZone":{"name":"AvailabilityZone"}},"name":"item"},"name":"SpotPriceHistory"},"nextToken":{"name":"NextToken"}}}},"describeSubnets":{"name":"DescribeSubnets","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SubnetIds":{"type":"list","members":{"name":"SubnetId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"subnetSet":{"type":"list","members":{"type":"structure","members":{"subnetId":{"name":"SubnetId"},"state":{"name":"State"},"vpcId":{"name":"VpcId"},"cidrBlock":{"name":"CidrBlock"},"availableIpAddressCount":{"type":"integer","name":"AvailableIpAddressCount"},"availabilityZone":{"name":"AvailabilityZone"},"defaultForAz":{"type":"boolean","name":"DefaultForAz"},"mapPublicIpOnLaunch":{"type":"boolean","name":"MapPublicIpOnLaunch"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"Subnets"}}}},"describeTags":{"name":"DescribeTags","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"MaxResults":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"tagSet":{"type":"list","members":{"type":"structure","members":{"resourceId":{"name":"ResourceId"},"resourceType":{"name":"ResourceType"},"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"nextToken":{"name":"NextToken"}}}},"describeVolumeAttribute":{"name":"DescribeVolumeAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true},"Attribute":{}}},"output":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"autoEnableIO":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"AutoEnableIO"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"}}}},"describeVolumeStatus":{"name":"DescribeVolumeStatus","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeIds":{"type":"list","members":{"name":"VolumeId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true},"NextToken":{},"MaxResults":{"type":"integer"}}},"output":{"type":"structure","members":{"volumeStatusSet":{"type":"list","members":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"availabilityZone":{"name":"AvailabilityZone"},"volumeStatus":{"type":"structure","members":{"status":{"name":"Status"},"details":{"type":"list","members":{"type":"structure","members":{"name":{"name":"Name"},"status":{"name":"Status"}},"name":"item"},"name":"Details"}},"name":"VolumeStatus"},"eventsSet":{"type":"list","members":{"type":"structure","members":{"eventType":{"name":"EventType"},"description":{"name":"Description"},"notBefore":{"type":"timestamp","name":"NotBefore"},"notAfter":{"type":"timestamp","name":"NotAfter"},"eventId":{"name":"EventId"}},"name":"item"},"name":"Events"},"actionsSet":{"type":"list","members":{"type":"structure","members":{"code":{"name":"Code"},"description":{"name":"Description"},"eventType":{"name":"EventType"},"eventId":{"name":"EventId"}},"name":"item"},"name":"Actions"}},"name":"item"},"name":"VolumeStatuses"},"nextToken":{"name":"NextToken"}}}},"describeVolumes":{"name":"DescribeVolumes","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeIds":{"type":"list","members":{"name":"VolumeId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"volumeSet":{"type":"list","members":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"size":{"type":"integer","name":"Size"},"snapshotId":{"name":"SnapshotId"},"availabilityZone":{"name":"AvailabilityZone"},"status":{"name":"State"},"createTime":{"type":"timestamp","name":"CreateTime"},"attachmentSet":{"type":"list","members":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"instanceId":{"name":"InstanceId"},"device":{"name":"Device"},"status":{"name":"State"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"item"},"name":"Attachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"item"},"name":"Volumes"}}}},"describeVpcAttribute":{"name":"DescribeVpcAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcId":{"required":true},"Attribute":{}}},"output":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"enableDnsSupport":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"EnableDnsSupport"},"enableDnsHostnames":{"type":"structure","members":{"value":{"type":"boolean","name":"Value"}},"name":"EnableDnsHostnames"}}}},"describeVpcs":{"name":"DescribeVpcs","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpcIds":{"type":"list","members":{"name":"VpcId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"vpcSet":{"type":"list","members":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"},"cidrBlock":{"name":"CidrBlock"},"dhcpOptionsId":{"name":"DhcpOptionsId"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"instanceTenancy":{"name":"InstanceTenancy"},"isDefault":{"type":"boolean","name":"IsDefault"}},"name":"item"},"name":"Vpcs"}}}},"describeVpnConnections":{"name":"DescribeVpnConnections","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnConnectionIds":{"type":"list","members":{"name":"VpnConnectionId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"vpnConnectionSet":{"type":"list","members":{"type":"structure","members":{"vpnConnectionId":{"name":"VpnConnectionId"},"state":{"name":"State"},"customerGatewayConfiguration":{"name":"CustomerGatewayConfiguration"},"type":{"name":"Type"},"customerGatewayId":{"name":"CustomerGatewayId"},"vpnGatewayId":{"name":"VpnGatewayId"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"vgwTelemetry":{"type":"list","members":{"type":"structure","members":{"outsideIpAddress":{"name":"OutsideIpAddress"},"status":{"name":"Status"},"lastStatusChange":{"type":"timestamp","name":"LastStatusChange"},"statusMessage":{"name":"StatusMessage"},"acceptedRouteCount":{"type":"integer","name":"AcceptedRouteCount"}},"name":"item"},"name":"VgwTelemetry"},"options":{"type":"structure","members":{"staticRoutesOnly":{"type":"boolean","name":"StaticRoutesOnly"}},"name":"Options"},"routes":{"type":"list","members":{"type":"structure","members":{"destinationCidrBlock":{"name":"DestinationCidrBlock"},"source":{"name":"Source"},"state":{"name":"State"}},"name":"item"},"name":"Routes"}},"name":"item"},"name":"VpnConnections"}}}},"describeVpnGateways":{"name":"DescribeVpnGateways","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnGatewayIds":{"type":"list","members":{"name":"VpnGatewayId"},"flattened":true},"Filters":{"type":"list","members":{"type":"structure","members":{"Name":{},"Values":{"type":"list","members":{"name":"Value"},"flattened":true}},"name":"Filter"},"flattened":true}}},"output":{"type":"structure","members":{"vpnGatewaySet":{"type":"list","members":{"type":"structure","members":{"vpnGatewayId":{"name":"VpnGatewayId"},"state":{"name":"State"},"type":{"name":"Type"},"availabilityZone":{"name":"AvailabilityZone"},"attachments":{"type":"list","members":{"type":"structure","members":{"vpcId":{"name":"VpcId"},"state":{"name":"State"}},"name":"item"},"name":"VpcAttachments"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"item"},"name":"VpnGateways"}}}},"detachInternetGateway":{"name":"DetachInternetGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InternetGatewayId":{"required":true},"VpcId":{"required":true}}},"output":{"type":"structure","members":{}}},"detachNetworkInterface":{"name":"DetachNetworkInterface","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AttachmentId":{"required":true},"Force":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"detachVolume":{"name":"DetachVolume","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true},"InstanceId":{},"Device":{},"Force":{"type":"boolean"}}},"output":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"instanceId":{"name":"InstanceId"},"device":{"name":"Device"},"status":{"name":"State"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"attachment"}},"detachVpnGateway":{"name":"DetachVpnGateway","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VpnGatewayId":{"required":true},"VpcId":{"required":true}}},"output":{"type":"structure","members":{}}},"disableVgwRoutePropagation":{"name":"DisableVgwRoutePropagation","input":{"type":"structure","members":{"RouteTableId":{"required":true},"GatewayId":{"required":true}}},"output":{"type":"structure","members":{}}},"disassociateAddress":{"name":"DisassociateAddress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"PublicIp":{},"AssociationId":{}}},"output":{"type":"structure","members":{}}},"disassociateRouteTable":{"name":"DisassociateRouteTable","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AssociationId":{"required":true}}},"output":{"type":"structure","members":{}}},"enableVgwRoutePropagation":{"name":"EnableVgwRoutePropagation","input":{"type":"structure","members":{"RouteTableId":{"required":true},"GatewayId":{"required":true}}},"output":{"type":"structure","members":{}}},"enableVolumeIO":{"name":"EnableVolumeIO","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true}}},"output":{"type":"structure","members":{}}},"getConsoleOutput":{"name":"GetConsoleOutput","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true}}},"output":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"timestamp":{"type":"timestamp","name":"Timestamp"},"output":{"name":"Output"}}}},"getPasswordData":{"name":"GetPasswordData","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true}}},"output":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"timestamp":{"type":"timestamp","name":"Timestamp"},"passwordData":{"name":"PasswordData"}}}},"importInstance":{"name":"ImportInstance","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Description":{},"LaunchSpecification":{"type":"structure","members":{"Architecture":{},"GroupNames":{"type":"list","members":{"name":"GroupName"},"flattened":true},"AdditionalInfo":{},"UserData":{},"InstanceType":{},"Placement":{"type":"structure","members":{"AvailabilityZone":{},"GroupName":{},"Tenancy":{}}},"Monitoring":{"type":"boolean"},"SubnetId":{},"InstanceInitiatedShutdownBehavior":{},"PrivateIpAddress":{}}},"DiskImages":{"type":"list","members":{"type":"structure","members":{"Image":{"type":"structure","members":{"Format":{"required":true},"Bytes":{"type":"integer","required":true},"ImportManifestUrl":{"required":true}}},"Description":{},"Volume":{"type":"structure","members":{"Size":{"type":"integer","required":true}}}},"name":"DiskImage"},"flattened":true},"Platform":{"required":true}}},"output":{"type":"structure","members":{"conversionTask":{"type":"structure","members":{"conversionTaskId":{"name":"ConversionTaskId"},"expirationTime":{"name":"ExpirationTime"},"importInstance":{"type":"structure","members":{"volumes":{"type":"list","members":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"description":{"name":"Description"}},"name":"item"},"name":"Volumes"},"instanceId":{"name":"InstanceId"},"platform":{"name":"Platform"},"description":{"name":"Description"}},"name":"ImportInstance"},"importVolume":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"description":{"name":"Description"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"}},"name":"ImportVolume"},"state":{"name":"State"},"statusMessage":{"name":"StatusMessage"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"ConversionTask"}}}},"importKeyPair":{"name":"ImportKeyPair","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"KeyName":{"required":true},"PublicKeyMaterial":{"type":"base64","required":true}}},"output":{"type":"structure","members":{"keyName":{"name":"KeyName"},"keyFingerprint":{"name":"KeyFingerprint"}}}},"importVolume":{"name":"ImportVolume","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AvailabilityZone":{},"Image":{"type":"structure","members":{"Format":{"required":true},"Bytes":{"type":"integer","required":true},"ImportManifestUrl":{"required":true}}},"Description":{},"Volume":{"type":"structure","members":{"Size":{"type":"integer","required":true}}}}},"output":{"type":"structure","members":{"conversionTask":{"type":"structure","members":{"conversionTaskId":{"name":"ConversionTaskId"},"expirationTime":{"name":"ExpirationTime"},"importInstance":{"type":"structure","members":{"volumes":{"type":"list","members":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"},"status":{"name":"Status"},"statusMessage":{"name":"StatusMessage"},"description":{"name":"Description"}},"name":"item"},"name":"Volumes"},"instanceId":{"name":"InstanceId"},"platform":{"name":"Platform"},"description":{"name":"Description"}},"name":"ImportInstance"},"importVolume":{"type":"structure","members":{"bytesConverted":{"type":"integer","name":"BytesConverted"},"availabilityZone":{"name":"AvailabilityZone"},"description":{"name":"Description"},"image":{"type":"structure","members":{"format":{"name":"Format"},"size":{"type":"integer","name":"Size"},"importManifestUrl":{"name":"ImportManifestUrl"},"checksum":{"name":"Checksum"}},"name":"Image"},"volume":{"type":"structure","members":{"size":{"type":"integer","name":"Size"},"id":{"name":"Id"}},"name":"Volume"}},"name":"ImportVolume"},"state":{"name":"State"},"statusMessage":{"name":"StatusMessage"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"}},"name":"ConversionTask"}}}},"modifyImageAttribute":{"name":"ModifyImageAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageId":{"required":true},"Attribute":{},"OperationType":{},"UserIds":{"type":"list","members":{"name":"UserId"},"flattened":true},"UserGroups":{"type":"list","members":{"name":"UserGroup"},"flattened":true},"ProductCodes":{"type":"list","members":{"name":"ProductCode"},"flattened":true},"Value":{},"LaunchPermission":{"type":"structure","members":{"Add":{"type":"list","members":{"type":"structure","members":{"UserId":{},"Group":{}}},"flattened":true},"Remove":{"type":"list","members":{"type":"structure","members":{"UserId":{},"Group":{}}},"flattened":true}}},"Description":{"type":"structure","members":{"Value":{}}}}},"output":{"type":"structure","members":{}}},"modifyInstanceAttribute":{"name":"ModifyInstanceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true},"Attribute":{},"Value":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"DeviceName":{},"Ebs":{"type":"structure","members":{"VolumeId":{},"DeleteOnTermination":{"type":"boolean"}}},"VirtualName":{},"NoDevice":{}},"name":"BlockDeviceMapping"},"flattened":true},"SourceDestCheck":{"type":"structure","members":{"Value":{"type":"boolean"}}},"DisableApiTermination":{"type":"structure","members":{"Value":{"type":"boolean"}}},"InstanceType":{"type":"structure","members":{"Value":{}}},"Kernel":{"type":"structure","members":{"Value":{}}},"Ramdisk":{"type":"structure","members":{"Value":{}}},"UserData":{"type":"structure","members":{"Value":{"type":"base64"}}},"InstanceInitiatedShutdownBehavior":{"type":"structure","members":{"Value":{}}},"Groups":{"type":"list","members":{"name":"GroupId"},"flattened":true},"EbsOptimized":{"type":"structure","members":{"Value":{"type":"boolean"}}},"SriovNetSupport":{"type":"structure","members":{"Value":{}}}}},"output":{"type":"structure","members":{}}},"modifyNetworkInterfaceAttribute":{"name":"ModifyNetworkInterfaceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceId":{"required":true},"Description":{"type":"structure","members":{"Value":{}}},"SourceDestCheck":{"type":"structure","members":{"Value":{"type":"boolean"}}},"Groups":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"Attachment":{"type":"structure","members":{"AttachmentId":{},"DeleteOnTermination":{"type":"boolean"}}}}},"output":{"type":"structure","members":{}}},"modifyReservedInstances":{"name":"ModifyReservedInstances","input":{"type":"structure","members":{"ClientToken":{},"ReservedInstancesIds":{"type":"list","members":{"name":"ReservedInstancesId"},"required":true,"flattened":true},"TargetConfigurations":{"type":"list","members":{"type":"structure","members":{"AvailabilityZone":{},"Platform":{},"InstanceCount":{"type":"integer"},"InstanceType":{}},"name":"ReservedInstancesConfigurationSetItemType"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"reservedInstancesModificationId":{"name":"ReservedInstancesModificationId"}}}},"modifySnapshotAttribute":{"name":"ModifySnapshotAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SnapshotId":{"required":true},"Attribute":{},"OperationType":{},"UserIds":{"type":"list","members":{"name":"UserId"},"flattened":true},"GroupNames":{"type":"list","members":{"name":"UserGroup"},"flattened":true},"CreateVolumePermission":{"type":"structure","members":{"Add":{"type":"list","members":{"type":"structure","members":{"UserId":{},"Group":{}}},"flattened":true},"Remove":{"type":"list","members":{"type":"structure","members":{"UserId":{},"Group":{}}},"flattened":true}}}}},"output":{"type":"structure","members":{}}},"modifyVolumeAttribute":{"name":"ModifyVolumeAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"VolumeId":{"required":true},"AutoEnableIO":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"modifyVpcAttribute":{"name":"ModifyVpcAttribute","input":{"type":"structure","members":{"VpcId":{"required":true},"EnableDnsSupport":{"type":"structure","members":{"Value":{"type":"boolean"}}},"EnableDnsHostnames":{"type":"structure","members":{"Value":{"type":"boolean"}}}}},"output":{"type":"structure","members":{}}},"monitorInstances":{"name":"MonitorInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"monitoring":{"type":"structure","members":{"state":{"name":"State"}},"name":"Monitoring"}},"name":"item"},"name":"InstanceMonitorings"}}}},"purchaseReservedInstancesOffering":{"name":"PurchaseReservedInstancesOffering","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ReservedInstancesOfferingId":{"required":true},"InstanceCount":{"type":"integer","required":true},"LimitPrice":{"type":"structure","members":{"Amount":{"type":"float"},"CurrencyCode":{}}}}},"output":{"type":"structure","members":{"reservedInstancesId":{"name":"ReservedInstancesId"}}}},"rebootInstances":{"name":"RebootInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{}}},"registerImage":{"name":"RegisterImage","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageLocation":{},"Name":{},"Description":{},"Architecture":{},"KernelId":{},"RamdiskId":{},"RootDeviceName":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"DeleteOnTermination":{"type":"boolean"},"VolumeType":{},"Iops":{"type":"integer"}}},"NoDevice":{}},"name":"BlockDeviceMapping"},"flattened":true},"VirtualizationType":{},"SriovNetSupport":{}}},"output":{"type":"structure","members":{"imageId":{"name":"ImageId"}}}},"releaseAddress":{"name":"ReleaseAddress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"PublicIp":{},"AllocationId":{}}},"output":{"type":"structure","members":{}}},"replaceNetworkAclAssociation":{"name":"ReplaceNetworkAclAssociation","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AssociationId":{"required":true},"NetworkAclId":{"required":true}}},"output":{"type":"structure","members":{"newAssociationId":{"name":"NewAssociationId"}}}},"replaceNetworkAclEntry":{"name":"ReplaceNetworkAclEntry","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkAclId":{"required":true},"RuleNumber":{"type":"integer","required":true},"Protocol":{"required":true},"RuleAction":{"required":true},"Egress":{"type":"boolean","required":true},"CidrBlock":{"required":true},"IcmpTypeCode":{"type":"structure","members":{"Type":{"type":"integer"},"Code":{"type":"integer"}},"name":"Icmp"},"PortRange":{"type":"structure","members":{"From":{"type":"integer"},"To":{"type":"integer"}}}}},"output":{"type":"structure","members":{}}},"replaceRoute":{"name":"ReplaceRoute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"RouteTableId":{"required":true},"DestinationCidrBlock":{"required":true},"GatewayId":{},"InstanceId":{},"NetworkInterfaceId":{}}},"output":{"type":"structure","members":{}}},"replaceRouteTableAssociation":{"name":"ReplaceRouteTableAssociation","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"AssociationId":{"required":true},"RouteTableId":{"required":true}}},"output":{"type":"structure","members":{"newAssociationId":{"name":"NewAssociationId"}}}},"reportInstanceStatus":{"name":"ReportInstanceStatus","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"Instances":{"type":"list","members":{"name":"InstanceId"},"flattened":true},"Status":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"ReasonCodes":{"type":"list","members":{"name":"ReasonCode"},"flattened":true},"Description":{}}},"output":{"type":"structure","members":{}}},"requestSpotInstances":{"name":"RequestSpotInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SpotPrice":{"required":true},"InstanceCount":{"type":"integer"},"Type":{},"ValidFrom":{"type":"timestamp"},"ValidUntil":{"type":"timestamp"},"LaunchGroup":{},"AvailabilityZoneGroup":{},"LaunchSpecification":{"type":"structure","members":{"ImageId":{},"KeyName":{},"UserData":{},"AddressingType":{},"InstanceType":{},"Placement":{"type":"structure","members":{"AvailabilityZone":{},"GroupName":{}}},"KernelId":{},"RamdiskId":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"DeleteOnTermination":{"type":"boolean"},"VolumeType":{},"Iops":{"type":"integer"}}},"NoDevice":{}},"name":"BlockDeviceMapping"},"flattened":true},"Monitoring":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true}}},"SubnetId":{},"NetworkInterfaces":{"type":"list","members":{"type":"structure","members":{"NetworkInterfaceId":{},"DeviceIndex":{"type":"integer"},"SubnetId":{},"Description":{},"PrivateIpAddress":{},"Groups":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"DeleteOnTermination":{"type":"boolean"},"PrivateIpAddresses":{"type":"list","members":{"type":"structure","members":{"PrivateIpAddress":{"required":true},"Primary":{"type":"boolean"}}},"flattened":true},"SecondaryPrivateIpAddressCount":{"type":"integer"},"AssociatePublicIpAddress":{"type":"boolean"}},"name":"NetworkInterface"},"flattened":true},"IamInstanceProfile":{"type":"structure","members":{"Arn":{},"Name":{}}},"EbsOptimized":{"type":"boolean"},"SecurityGroupIds":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"SecurityGroups":{"type":"list","members":{"name":"SecurityGroup"},"flattened":true}}}}},"output":{"type":"structure","members":{"spotInstanceRequestSet":{"type":"list","members":{"type":"structure","members":{"spotInstanceRequestId":{"name":"SpotInstanceRequestId"},"spotPrice":{"name":"SpotPrice"},"type":{"name":"Type"},"state":{"name":"State"},"fault":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"Fault"},"status":{"type":"structure","members":{"code":{"name":"Code"},"updateTime":{"type":"timestamp","name":"UpdateTime"},"message":{"name":"Message"}},"name":"Status"},"validFrom":{"type":"timestamp","name":"ValidFrom"},"validUntil":{"type":"timestamp","name":"ValidUntil"},"launchGroup":{"name":"LaunchGroup"},"availabilityZoneGroup":{"name":"AvailabilityZoneGroup"},"launchSpecification":{"type":"structure","members":{"imageId":{"name":"ImageId"},"keyName":{"name":"KeyName"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"SecurityGroups"},"userData":{"name":"UserData"},"addressingType":{"name":"AddressingType"},"instanceType":{"name":"InstanceType"},"placement":{"type":"structure","members":{"availabilityZone":{"name":"AvailabilityZone"},"groupName":{"name":"GroupName"}},"name":"Placement"},"kernelId":{"name":"KernelId"},"ramdiskId":{"name":"RamdiskId"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"virtualName":{"name":"VirtualName"},"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"snapshotId":{"name":"SnapshotId"},"volumeSize":{"type":"integer","name":"VolumeSize"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"volumeType":{"name":"VolumeType"},"iops":{"type":"integer","name":"Iops"}},"name":"Ebs"},"noDevice":{"name":"NoDevice"}},"name":"item"},"name":"BlockDeviceMappings"},"monitoringEnabled":{"type":"boolean","name":"MonitoringEnabled"},"subnetId":{"name":"SubnetId"},"networkInterfaceSet":{"type":"list","members":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"subnetId":{"name":"SubnetId"},"description":{"name":"Description"},"privateIpAddress":{"name":"PrivateIpAddress"},"SecurityGroupId":{"type":"list","members":{"name":"SecurityGroupId"},"name":"Groups"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"primary":{"type":"boolean","name":"Primary"}},"name":"item"},"name":"PrivateIpAddresses"},"secondaryPrivateIpAddressCount":{"type":"integer","name":"SecondaryPrivateIpAddressCount"},"associatePublicIpAddress":{"type":"boolean","name":"AssociatePublicIpAddress"}},"name":"item"},"name":"NetworkInterfaces"},"iamInstanceProfile":{"type":"structure","members":{"arn":{"name":"Arn"},"name":{"name":"Name"}},"name":"IamInstanceProfile"},"ebsOptimized":{"type":"boolean","name":"EbsOptimized"}},"name":"LaunchSpecification"},"instanceId":{"name":"InstanceId"},"createTime":{"type":"timestamp","name":"CreateTime"},"productDescription":{"name":"ProductDescription"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"launchedAvailabilityZone":{"name":"LaunchedAvailabilityZone"}},"name":"item"},"name":"SpotInstanceRequests"}}}},"resetImageAttribute":{"name":"ResetImageAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{}}},"resetInstanceAttribute":{"name":"ResetInstanceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{}}},"resetNetworkInterfaceAttribute":{"name":"ResetNetworkInterfaceAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"NetworkInterfaceId":{"required":true},"SourceDestCheck":{}}},"output":{"type":"structure","members":{}}},"resetSnapshotAttribute":{"name":"ResetSnapshotAttribute","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"SnapshotId":{"required":true},"Attribute":{"required":true}}},"output":{"type":"structure","members":{}}},"revokeSecurityGroupEgress":{"name":"RevokeSecurityGroupEgress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupId":{"required":true},"SourceSecurityGroupName":{},"SourceSecurityGroupOwnerId":{},"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"CidrIp":{},"IpPermissions":{"type":"list","members":{"type":"structure","members":{"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"UserIdGroupPairs":{"type":"list","members":{"type":"structure","members":{"UserId":{},"GroupName":{},"GroupId":{}},"name":"Groups"},"flattened":true},"IpRanges":{"type":"list","members":{"type":"structure","members":{"CidrIp":{}}},"flattened":true}}},"flattened":true}}},"output":{"type":"structure","members":{}}},"revokeSecurityGroupIngress":{"name":"RevokeSecurityGroupIngress","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"GroupName":{},"GroupId":{},"SourceSecurityGroupName":{},"SourceSecurityGroupOwnerId":{},"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"CidrIp":{},"IpPermissions":{"type":"list","members":{"type":"structure","members":{"IpProtocol":{},"FromPort":{"type":"integer"},"ToPort":{"type":"integer"},"UserIdGroupPairs":{"type":"list","members":{"type":"structure","members":{"UserId":{},"GroupName":{},"GroupId":{}},"name":"Groups"},"flattened":true},"IpRanges":{"type":"list","members":{"type":"structure","members":{"CidrIp":{}}},"flattened":true}}},"flattened":true}}},"output":{"type":"structure","members":{}}},"runInstances":{"name":"RunInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"ImageId":{"required":true},"MinCount":{"type":"integer","required":true},"MaxCount":{"type":"integer","required":true},"KeyName":{},"SecurityGroups":{"type":"list","members":{"name":"SecurityGroup"},"flattened":true},"SecurityGroupIds":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"UserData":{},"InstanceType":{},"Placement":{"type":"structure","members":{"AvailabilityZone":{},"GroupName":{},"Tenancy":{}}},"KernelId":{},"RamdiskId":{},"BlockDeviceMappings":{"type":"list","members":{"type":"structure","members":{"VirtualName":{},"DeviceName":{},"Ebs":{"type":"structure","members":{"SnapshotId":{},"VolumeSize":{"type":"integer"},"DeleteOnTermination":{"type":"boolean"},"VolumeType":{},"Iops":{"type":"integer"}}},"NoDevice":{}},"name":"BlockDeviceMapping"},"flattened":true},"Monitoring":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true}}},"SubnetId":{},"DisableApiTermination":{"type":"boolean"},"InstanceInitiatedShutdownBehavior":{},"PrivateIpAddress":{},"ClientToken":{},"AdditionalInfo":{},"NetworkInterfaces":{"type":"list","members":{"type":"structure","members":{"NetworkInterfaceId":{},"DeviceIndex":{"type":"integer"},"SubnetId":{},"Description":{},"PrivateIpAddress":{},"Groups":{"type":"list","members":{"name":"SecurityGroupId"},"flattened":true},"DeleteOnTermination":{"type":"boolean"},"PrivateIpAddresses":{"type":"list","members":{"type":"structure","members":{"PrivateIpAddress":{"required":true},"Primary":{"type":"boolean"}}},"flattened":true},"SecondaryPrivateIpAddressCount":{"type":"integer"},"AssociatePublicIpAddress":{"type":"boolean"}},"name":"NetworkInterface"},"flattened":true},"IamInstanceProfile":{"type":"structure","members":{"Arn":{},"Name":{}}},"EbsOptimized":{"type":"boolean"}}},"output":{"type":"structure","members":{"reservationId":{"name":"ReservationId"},"ownerId":{"name":"OwnerId"},"requesterId":{"name":"RequesterId"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"imageId":{"name":"ImageId"},"instanceState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"State"},"privateDnsName":{"name":"PrivateDnsName"},"dnsName":{"name":"PublicDnsName"},"reason":{"name":"StateTransitionReason"},"keyName":{"name":"KeyName"},"amiLaunchIndex":{"type":"integer","name":"AmiLaunchIndex"},"productCodes":{"type":"list","members":{"type":"structure","members":{"productCode":{"name":"ProductCodeId"},"type":{"name":"ProductCodeType"}},"name":"item"},"name":"ProductCodes"},"instanceType":{"name":"InstanceType"},"launchTime":{"type":"timestamp","name":"LaunchTime"},"placement":{"type":"structure","members":{"availabilityZone":{"name":"AvailabilityZone"},"groupName":{"name":"GroupName"},"tenancy":{"name":"Tenancy"}},"name":"Placement"},"kernelId":{"name":"KernelId"},"ramdiskId":{"name":"RamdiskId"},"platform":{"name":"Platform"},"monitoring":{"type":"structure","members":{"state":{"name":"State"}},"name":"Monitoring"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"privateIpAddress":{"name":"PrivateIpAddress"},"ipAddress":{"name":"PublicIpAddress"},"stateReason":{"type":"structure","members":{"code":{"name":"Code"},"message":{"name":"Message"}},"name":"StateReason"},"architecture":{"name":"Architecture"},"rootDeviceType":{"name":"RootDeviceType"},"rootDeviceName":{"name":"RootDeviceName"},"blockDeviceMapping":{"type":"list","members":{"type":"structure","members":{"deviceName":{"name":"DeviceName"},"ebs":{"type":"structure","members":{"volumeId":{"name":"VolumeId"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Ebs"}},"name":"item"},"name":"BlockDeviceMappings"},"virtualizationType":{"name":"VirtualizationType"},"instanceLifecycle":{"name":"InstanceLifecycle"},"spotInstanceRequestId":{"name":"SpotInstanceRequestId"},"clientToken":{"name":"ClientToken"},"tagSet":{"type":"list","members":{"type":"structure","members":{"key":{"name":"Key"},"value":{"name":"Value"}},"name":"item"},"name":"Tags"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"SecurityGroups"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"hypervisor":{"name":"Hypervisor"},"networkInterfaceSet":{"type":"list","members":{"type":"structure","members":{"networkInterfaceId":{"name":"NetworkInterfaceId"},"subnetId":{"name":"SubnetId"},"vpcId":{"name":"VpcId"},"description":{"name":"Description"},"ownerId":{"name":"OwnerId"},"status":{"name":"Status"},"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"sourceDestCheck":{"type":"boolean","name":"SourceDestCheck"},"groupSet":{"type":"list","members":{"type":"structure","members":{"groupName":{"name":"GroupName"},"groupId":{"name":"GroupId"}},"name":"item"},"name":"Groups"},"attachment":{"type":"structure","members":{"attachmentId":{"name":"AttachmentId"},"deviceIndex":{"type":"integer","name":"DeviceIndex"},"status":{"name":"Status"},"attachTime":{"type":"timestamp","name":"AttachTime"},"deleteOnTermination":{"type":"boolean","name":"DeleteOnTermination"}},"name":"Attachment"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"publicDnsName":{"name":"PublicDnsName"},"ipOwnerId":{"name":"IpOwnerId"}},"name":"Association"},"privateIpAddressesSet":{"type":"list","members":{"type":"structure","members":{"privateIpAddress":{"name":"PrivateIpAddress"},"privateDnsName":{"name":"PrivateDnsName"},"primary":{"type":"boolean","name":"Primary"},"association":{"type":"structure","members":{"publicIp":{"name":"PublicIp"},"publicDnsName":{"name":"PublicDnsName"},"ipOwnerId":{"name":"IpOwnerId"}},"name":"Association"}},"name":"item"},"name":"PrivateIpAddresses"}},"name":"item"},"name":"NetworkInterfaces"},"iamInstanceProfile":{"type":"structure","members":{"arn":{"name":"Arn"},"id":{"name":"Id"}},"name":"IamInstanceProfile"},"ebsOptimized":{"type":"boolean","name":"EbsOptimized"},"sriovNetSupport":{"name":"SriovNetSupport"}},"name":"item"},"name":"Instances"}},"name":"reservation"}},"startInstances":{"name":"StartInstances","input":{"type":"structure","members":{"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true},"AdditionalInfo":{},"DryRun":{"type":"boolean"}}},"output":{"type":"structure","members":{"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"currentState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"CurrentState"},"previousState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"PreviousState"}},"name":"item"},"name":"StartingInstances"}}}},"stopInstances":{"name":"StopInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true},"Force":{"type":"boolean"}}},"output":{"type":"structure","members":{"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"currentState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"CurrentState"},"previousState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"PreviousState"}},"name":"item"},"name":"StoppingInstances"}}}},"terminateInstances":{"name":"TerminateInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"currentState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"CurrentState"},"previousState":{"type":"structure","members":{"code":{"type":"integer","name":"Code"},"name":{"name":"Name"}},"name":"PreviousState"}},"name":"item"},"name":"TerminatingInstances"}}}},"unassignPrivateIpAddresses":{"name":"UnassignPrivateIpAddresses","input":{"type":"structure","members":{"NetworkInterfaceId":{"required":true},"PrivateIpAddresses":{"type":"list","members":{"name":"PrivateIpAddress"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{}}},"unmonitorInstances":{"name":"UnmonitorInstances","input":{"type":"structure","members":{"DryRun":{"type":"boolean"},"InstanceIds":{"type":"list","members":{"name":"InstanceId"},"required":true,"flattened":true}}},"output":{"type":"structure","members":{"instancesSet":{"type":"list","members":{"type":"structure","members":{"instanceId":{"name":"InstanceId"},"monitoring":{"type":"structure","members":{"state":{"name":"State"}},"name":"Monitoring"}},"name":"item"},"name":"InstanceMonitorings"}}}}},"pagination":{"describeAccountAttributes":{"resultKey":"AccountAttributes"},"describeAddresses":{"resultKey":"Addresses"},"describeAvailabilityZones":{"resultKey":"AvailabilityZones"},"describeBundleTasks":{"resultKey":"BundleTasks"},"describeConversionTasks":{"resultKey":"ConversionTasks"},"describeCustomerGateways":{"resultKey":"CustomerGateways"},"describeDhcpOptions":{"resultKey":"DhcpOptions"},"describeExportTasks":{"resultKey":"ExportTasks"},"describeImages":{"resultKey":"Images"},"describeInstanceStatus":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"InstanceStatuses"},"describeInstances":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"Reservations"},"describeInternetGateways":{"resultKey":"InternetGateways"},"describeKeyPairs":{"resultKey":"KeyPairs"},"describeLicenses":{"resultKey":"Licenses"},"describeNetworkAcls":{"resultKey":"NetworkAcls"},"describeNetworkInterfaces":{"resultKey":"NetworkInterfaces"},"describePlacementGroups":{"resultKey":"PlacementGroups"},"describeRegions":{"resultKey":"Regions"},"describeReservedInstances":{"resultKey":"ReservedInstances"},"describeReservedInstancesListings":{"resultKey":"ReservedInstancesListings"},"describeReservedInstancesModifications":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"ReservedInstancesModifications"},"describeReservedInstancesOfferings":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"ReservedInstancesOfferings"},"describeRouteTables":{"resultKey":"RouteTables"},"describeSecurityGroups":{"resultKey":"SecurityGroups"},"describeSnapshots":{"resultKey":"Snapshots"},"describeSpotInstanceRequests":{"resultKey":"SpotInstanceRequests"},"describeSpotPriceHistory":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"SpotPriceHistory"},"describeSubnets":{"resultKey":"Subnets"},"describeTags":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"Tags"},"describeVolumeStatus":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxResults","resultKey":"VolumeStatuses"},"describeVolumes":{"resultKey":"Volumes"},"describeVpcs":{"resultKey":"Vpcs"},"describeVpnConnections":{"resultKey":"VpnConnections"},"describeVpnGateways":{"resultKey":"VpnGateways"}}});
AWS.Service.defineServiceApi(require("./services/elasticache"), "2013-06-15", {"format":"query","apiVersion":"2013-06-15","endpointPrefix":"elasticache","resultWrapped":true,"serviceFullName":"Amazon ElastiCache","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"authorizeCacheSecurityGroupIngress":{"name":"AuthorizeCacheSecurityGroupIngress","input":{"type":"structure","members":{"CacheSecurityGroupName":{"required":true},"EC2SecurityGroupName":{"required":true},"EC2SecurityGroupOwnerId":{"required":true}}},"output":{"type":"structure","members":{"CacheSecurityGroup":{"type":"structure","members":{"OwnerId":{},"CacheSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}}},"wrapper":true}}}},"createCacheCluster":{"name":"CreateCacheCluster","input":{"type":"structure","members":{"CacheClusterId":{"required":true},"ReplicationGroupId":{},"NumCacheNodes":{"type":"integer","required":true},"CacheNodeType":{"required":true},"Engine":{"required":true},"EngineVersion":{},"CacheParameterGroupName":{},"CacheSubnetGroupName":{},"CacheSecurityGroupNames":{"type":"list","members":{"name":"CacheSecurityGroupName"}},"SecurityGroupIds":{"type":"list","members":{"name":"SecurityGroupId"}},"SnapshotArns":{"type":"list","members":{"name":"SnapshotArn"}},"PreferredAvailabilityZone":{},"PreferredMaintenanceWindow":{},"Port":{"type":"integer"},"NotificationTopicArn":{},"AutoMinorVersionUpgrade":{"type":"boolean"}}},"output":{"type":"structure","members":{"CacheCluster":{"type":"structure","members":{"CacheClusterId":{},"ConfigurationEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClientDownloadLandingPage":{},"CacheNodeType":{},"Engine":{},"EngineVersion":{},"CacheClusterStatus":{},"NumCacheNodes":{"type":"integer"},"PreferredAvailabilityZone":{},"CacheClusterCreateTime":{"type":"timestamp"},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"EngineVersion":{}}},"NotificationConfiguration":{"type":"structure","members":{"TopicArn":{},"TopicStatus":{}}},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"CacheSecurityGroupName":{},"Status":{}},"name":"CacheSecurityGroup"}},"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"ParameterApplyStatus":{},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"}}}},"CacheSubnetGroupName":{},"CacheNodes":{"type":"list","members":{"type":"structure","members":{"CacheNodeId":{},"CacheNodeStatus":{},"CacheNodeCreateTime":{"type":"timestamp"},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ParameterGroupStatus":{},"SourceCacheNodeId":{}},"name":"CacheNode"}},"AutoMinorVersionUpgrade":{"type":"boolean"},"SecurityGroups":{"type":"list","members":{"type":"structure","members":{"SecurityGroupId":{},"Status":{}}}},"ReplicationGroupId":{}},"wrapper":true}}}},"createCacheParameterGroup":{"name":"CreateCacheParameterGroup","input":{"type":"structure","members":{"CacheParameterGroupName":{"required":true},"CacheParameterGroupFamily":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"CacheParameterGroupFamily":{},"Description":{}},"wrapper":true}}}},"createCacheSecurityGroup":{"name":"CreateCacheSecurityGroup","input":{"type":"structure","members":{"CacheSecurityGroupName":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"CacheSecurityGroup":{"type":"structure","members":{"OwnerId":{},"CacheSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}}},"wrapper":true}}}},"createCacheSubnetGroup":{"name":"CreateCacheSubnetGroup","input":{"type":"structure","members":{"CacheSubnetGroupName":{"required":true},"CacheSubnetGroupDescription":{"required":true},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"CacheSubnetGroup":{"type":"structure","members":{"CacheSubnetGroupName":{},"CacheSubnetGroupDescription":{},"VpcId":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true}},"name":"Subnet"}}},"wrapper":true}}}},"createReplicationGroup":{"name":"CreateReplicationGroup","input":{"type":"structure","members":{"ReplicationGroupId":{"required":true},"PrimaryClusterId":{"required":true},"ReplicationGroupDescription":{"required":true}}},"output":{"type":"structure","members":{"ReplicationGroup":{"type":"structure","members":{"ReplicationGroupId":{},"Description":{},"Status":{},"PendingModifiedValues":{"type":"structure","members":{"PrimaryClusterId":{}}},"MemberClusters":{"type":"list","members":{"name":"ClusterId"}},"NodeGroups":{"type":"list","members":{"type":"structure","members":{"NodeGroupId":{},"Status":{},"PrimaryEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"NodeGroupMembers":{"type":"list","members":{"type":"structure","members":{"CacheClusterId":{},"CacheNodeId":{},"ReadEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"PreferredAvailabilityZone":{},"CurrentRole":{}},"name":"NodeGroupMember"}}},"name":"NodeGroup"}}},"wrapper":true}}}},"deleteCacheCluster":{"name":"DeleteCacheCluster","input":{"type":"structure","members":{"CacheClusterId":{"required":true}}},"output":{"type":"structure","members":{"CacheCluster":{"type":"structure","members":{"CacheClusterId":{},"ConfigurationEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClientDownloadLandingPage":{},"CacheNodeType":{},"Engine":{},"EngineVersion":{},"CacheClusterStatus":{},"NumCacheNodes":{"type":"integer"},"PreferredAvailabilityZone":{},"CacheClusterCreateTime":{"type":"timestamp"},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"EngineVersion":{}}},"NotificationConfiguration":{"type":"structure","members":{"TopicArn":{},"TopicStatus":{}}},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"CacheSecurityGroupName":{},"Status":{}},"name":"CacheSecurityGroup"}},"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"ParameterApplyStatus":{},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"}}}},"CacheSubnetGroupName":{},"CacheNodes":{"type":"list","members":{"type":"structure","members":{"CacheNodeId":{},"CacheNodeStatus":{},"CacheNodeCreateTime":{"type":"timestamp"},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ParameterGroupStatus":{},"SourceCacheNodeId":{}},"name":"CacheNode"}},"AutoMinorVersionUpgrade":{"type":"boolean"},"SecurityGroups":{"type":"list","members":{"type":"structure","members":{"SecurityGroupId":{},"Status":{}}}},"ReplicationGroupId":{}},"wrapper":true}}}},"deleteCacheParameterGroup":{"name":"DeleteCacheParameterGroup","input":{"type":"structure","members":{"CacheParameterGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteCacheSecurityGroup":{"name":"DeleteCacheSecurityGroup","input":{"type":"structure","members":{"CacheSecurityGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteCacheSubnetGroup":{"name":"DeleteCacheSubnetGroup","input":{"type":"structure","members":{"CacheSubnetGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteReplicationGroup":{"name":"DeleteReplicationGroup","input":{"type":"structure","members":{"ReplicationGroupId":{"required":true}}},"output":{"type":"structure","members":{"ReplicationGroup":{"type":"structure","members":{"ReplicationGroupId":{},"Description":{},"Status":{},"PendingModifiedValues":{"type":"structure","members":{"PrimaryClusterId":{}}},"MemberClusters":{"type":"list","members":{"name":"ClusterId"}},"NodeGroups":{"type":"list","members":{"type":"structure","members":{"NodeGroupId":{},"Status":{},"PrimaryEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"NodeGroupMembers":{"type":"list","members":{"type":"structure","members":{"CacheClusterId":{},"CacheNodeId":{},"ReadEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"PreferredAvailabilityZone":{},"CurrentRole":{}},"name":"NodeGroupMember"}}},"name":"NodeGroup"}}},"wrapper":true}}}},"describeCacheClusters":{"name":"DescribeCacheClusters","input":{"type":"structure","members":{"CacheClusterId":{},"MaxRecords":{"type":"integer"},"Marker":{},"ShowCacheNodeInfo":{"type":"boolean"}}},"output":{"type":"structure","members":{"Marker":{},"CacheClusters":{"type":"list","members":{"type":"structure","members":{"CacheClusterId":{},"ConfigurationEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClientDownloadLandingPage":{},"CacheNodeType":{},"Engine":{},"EngineVersion":{},"CacheClusterStatus":{},"NumCacheNodes":{"type":"integer"},"PreferredAvailabilityZone":{},"CacheClusterCreateTime":{"type":"timestamp"},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"EngineVersion":{}}},"NotificationConfiguration":{"type":"structure","members":{"TopicArn":{},"TopicStatus":{}}},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"CacheSecurityGroupName":{},"Status":{}},"name":"CacheSecurityGroup"}},"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"ParameterApplyStatus":{},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"}}}},"CacheSubnetGroupName":{},"CacheNodes":{"type":"list","members":{"type":"structure","members":{"CacheNodeId":{},"CacheNodeStatus":{},"CacheNodeCreateTime":{"type":"timestamp"},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ParameterGroupStatus":{},"SourceCacheNodeId":{}},"name":"CacheNode"}},"AutoMinorVersionUpgrade":{"type":"boolean"},"SecurityGroups":{"type":"list","members":{"type":"structure","members":{"SecurityGroupId":{},"Status":{}}}},"ReplicationGroupId":{}},"wrapper":true,"name":"CacheCluster"}}}}},"describeCacheEngineVersions":{"name":"DescribeCacheEngineVersions","input":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"CacheParameterGroupFamily":{},"MaxRecords":{"type":"integer"},"Marker":{},"DefaultOnly":{"type":"boolean"}}},"output":{"type":"structure","members":{"Marker":{},"CacheEngineVersions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"CacheParameterGroupFamily":{},"CacheEngineDescription":{},"CacheEngineVersionDescription":{}},"name":"CacheEngineVersion"}}}}},"describeCacheParameterGroups":{"name":"DescribeCacheParameterGroups","input":{"type":"structure","members":{"CacheParameterGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"CacheParameterGroups":{"type":"list","members":{"type":"structure","members":{"CacheParameterGroupName":{},"CacheParameterGroupFamily":{},"Description":{}},"wrapper":true,"name":"CacheParameterGroup"}}}}},"describeCacheParameters":{"name":"DescribeCacheParameters","input":{"type":"structure","members":{"CacheParameterGroupName":{"required":true},"Source":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"}},"CacheNodeTypeSpecificParameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"CacheNodeTypeSpecificValues":{"type":"list","members":{"type":"structure","members":{"CacheNodeType":{},"Value":{}},"name":"CacheNodeTypeSpecificValue"}}},"name":"CacheNodeTypeSpecificParameter"}}}}},"describeCacheSecurityGroups":{"name":"DescribeCacheSecurityGroups","input":{"type":"structure","members":{"CacheSecurityGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"OwnerId":{},"CacheSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}}},"wrapper":true,"name":"CacheSecurityGroup"}}}}},"describeCacheSubnetGroups":{"name":"DescribeCacheSubnetGroups","input":{"type":"structure","members":{"CacheSubnetGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"CacheSubnetGroups":{"type":"list","members":{"type":"structure","members":{"CacheSubnetGroupName":{},"CacheSubnetGroupDescription":{},"VpcId":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true}},"name":"Subnet"}}},"wrapper":true,"name":"CacheSubnetGroup"}}}}},"describeEngineDefaultParameters":{"name":"DescribeEngineDefaultParameters","input":{"type":"structure","members":{"CacheParameterGroupFamily":{"required":true},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"EngineDefaults":{"type":"structure","members":{"CacheParameterGroupFamily":{},"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"}},"CacheNodeTypeSpecificParameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"CacheNodeTypeSpecificValues":{"type":"list","members":{"type":"structure","members":{"CacheNodeType":{},"Value":{}},"name":"CacheNodeTypeSpecificValue"}}},"name":"CacheNodeTypeSpecificParameter"}}},"wrapper":true}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Duration":{"type":"integer"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Events":{"type":"list","members":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"Message":{},"Date":{"type":"timestamp"}},"name":"Event"}}}}},"describeReplicationGroups":{"name":"DescribeReplicationGroups","input":{"type":"structure","members":{"ReplicationGroupId":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReplicationGroups":{"type":"list","members":{"type":"structure","members":{"ReplicationGroupId":{},"Description":{},"Status":{},"PendingModifiedValues":{"type":"structure","members":{"PrimaryClusterId":{}}},"MemberClusters":{"type":"list","members":{"name":"ClusterId"}},"NodeGroups":{"type":"list","members":{"type":"structure","members":{"NodeGroupId":{},"Status":{},"PrimaryEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"NodeGroupMembers":{"type":"list","members":{"type":"structure","members":{"CacheClusterId":{},"CacheNodeId":{},"ReadEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"PreferredAvailabilityZone":{},"CurrentRole":{}},"name":"NodeGroupMember"}}},"name":"NodeGroup"}}},"wrapper":true,"name":"ReplicationGroup"}}}}},"describeReservedCacheNodes":{"name":"DescribeReservedCacheNodes","input":{"type":"structure","members":{"ReservedCacheNodeId":{},"ReservedCacheNodesOfferingId":{},"CacheNodeType":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedCacheNodes":{"type":"list","members":{"type":"structure","members":{"ReservedCacheNodeId":{},"ReservedCacheNodesOfferingId":{},"CacheNodeType":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CacheNodeCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedCacheNode"}}}}},"describeReservedCacheNodesOfferings":{"name":"DescribeReservedCacheNodesOfferings","input":{"type":"structure","members":{"ReservedCacheNodesOfferingId":{},"CacheNodeType":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedCacheNodesOfferings":{"type":"list","members":{"type":"structure","members":{"ReservedCacheNodesOfferingId":{},"CacheNodeType":{},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"ProductDescription":{},"OfferingType":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedCacheNodesOffering"}}}}},"modifyCacheCluster":{"name":"ModifyCacheCluster","input":{"type":"structure","members":{"CacheClusterId":{"required":true},"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"CacheSecurityGroupNames":{"type":"list","members":{"name":"CacheSecurityGroupName"}},"SecurityGroupIds":{"type":"list","members":{"name":"SecurityGroupId"}},"PreferredMaintenanceWindow":{},"NotificationTopicArn":{},"CacheParameterGroupName":{},"NotificationTopicStatus":{},"ApplyImmediately":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"}}},"output":{"type":"structure","members":{"CacheCluster":{"type":"structure","members":{"CacheClusterId":{},"ConfigurationEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClientDownloadLandingPage":{},"CacheNodeType":{},"Engine":{},"EngineVersion":{},"CacheClusterStatus":{},"NumCacheNodes":{"type":"integer"},"PreferredAvailabilityZone":{},"CacheClusterCreateTime":{"type":"timestamp"},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"EngineVersion":{}}},"NotificationConfiguration":{"type":"structure","members":{"TopicArn":{},"TopicStatus":{}}},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"CacheSecurityGroupName":{},"Status":{}},"name":"CacheSecurityGroup"}},"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"ParameterApplyStatus":{},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"}}}},"CacheSubnetGroupName":{},"CacheNodes":{"type":"list","members":{"type":"structure","members":{"CacheNodeId":{},"CacheNodeStatus":{},"CacheNodeCreateTime":{"type":"timestamp"},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ParameterGroupStatus":{},"SourceCacheNodeId":{}},"name":"CacheNode"}},"AutoMinorVersionUpgrade":{"type":"boolean"},"SecurityGroups":{"type":"list","members":{"type":"structure","members":{"SecurityGroupId":{},"Status":{}}}},"ReplicationGroupId":{}},"wrapper":true}}}},"modifyCacheParameterGroup":{"name":"ModifyCacheParameterGroup","input":{"type":"structure","members":{"CacheParameterGroupName":{"required":true},"ParameterNameValues":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{}},"name":"ParameterNameValue"},"required":true}}},"output":{"type":"structure","members":{"CacheParameterGroupName":{}}}},"modifyCacheSubnetGroup":{"name":"ModifyCacheSubnetGroup","input":{"type":"structure","members":{"CacheSubnetGroupName":{"required":true},"CacheSubnetGroupDescription":{},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"}}}},"output":{"type":"structure","members":{"CacheSubnetGroup":{"type":"structure","members":{"CacheSubnetGroupName":{},"CacheSubnetGroupDescription":{},"VpcId":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true}},"name":"Subnet"}}},"wrapper":true}}}},"modifyReplicationGroup":{"name":"ModifyReplicationGroup","input":{"type":"structure","members":{"ReplicationGroupId":{"required":true},"ReplicationGroupDescription":{},"CacheSecurityGroupNames":{"type":"list","members":{"name":"CacheSecurityGroupName"}},"SecurityGroupIds":{"type":"list","members":{"name":"SecurityGroupId"}},"PreferredMaintenanceWindow":{},"NotificationTopicArn":{},"CacheParameterGroupName":{},"NotificationTopicStatus":{},"ApplyImmediately":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"PrimaryClusterId":{}}},"output":{"type":"structure","members":{"ReplicationGroup":{"type":"structure","members":{"ReplicationGroupId":{},"Description":{},"Status":{},"PendingModifiedValues":{"type":"structure","members":{"PrimaryClusterId":{}}},"MemberClusters":{"type":"list","members":{"name":"ClusterId"}},"NodeGroups":{"type":"list","members":{"type":"structure","members":{"NodeGroupId":{},"Status":{},"PrimaryEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"NodeGroupMembers":{"type":"list","members":{"type":"structure","members":{"CacheClusterId":{},"CacheNodeId":{},"ReadEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"PreferredAvailabilityZone":{},"CurrentRole":{}},"name":"NodeGroupMember"}}},"name":"NodeGroup"}}},"wrapper":true}}}},"purchaseReservedCacheNodesOffering":{"name":"PurchaseReservedCacheNodesOffering","input":{"type":"structure","members":{"ReservedCacheNodesOfferingId":{"required":true},"ReservedCacheNodeId":{},"CacheNodeCount":{"type":"integer"}}},"output":{"type":"structure","members":{"ReservedCacheNode":{"type":"structure","members":{"ReservedCacheNodeId":{},"ReservedCacheNodesOfferingId":{},"CacheNodeType":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CacheNodeCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true}}}},"rebootCacheCluster":{"name":"RebootCacheCluster","input":{"type":"structure","members":{"CacheClusterId":{"required":true},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"},"required":true}}},"output":{"type":"structure","members":{"CacheCluster":{"type":"structure","members":{"CacheClusterId":{},"ConfigurationEndpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClientDownloadLandingPage":{},"CacheNodeType":{},"Engine":{},"EngineVersion":{},"CacheClusterStatus":{},"NumCacheNodes":{"type":"integer"},"PreferredAvailabilityZone":{},"CacheClusterCreateTime":{"type":"timestamp"},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"NumCacheNodes":{"type":"integer"},"CacheNodeIdsToRemove":{"type":"list","members":{"name":"CacheNodeId"}},"EngineVersion":{}}},"NotificationConfiguration":{"type":"structure","members":{"TopicArn":{},"TopicStatus":{}}},"CacheSecurityGroups":{"type":"list","members":{"type":"structure","members":{"CacheSecurityGroupName":{},"Status":{}},"name":"CacheSecurityGroup"}},"CacheParameterGroup":{"type":"structure","members":{"CacheParameterGroupName":{},"ParameterApplyStatus":{},"CacheNodeIdsToReboot":{"type":"list","members":{"name":"CacheNodeId"}}}},"CacheSubnetGroupName":{},"CacheNodes":{"type":"list","members":{"type":"structure","members":{"CacheNodeId":{},"CacheNodeStatus":{},"CacheNodeCreateTime":{"type":"timestamp"},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ParameterGroupStatus":{},"SourceCacheNodeId":{}},"name":"CacheNode"}},"AutoMinorVersionUpgrade":{"type":"boolean"},"SecurityGroups":{"type":"list","members":{"type":"structure","members":{"SecurityGroupId":{},"Status":{}}}},"ReplicationGroupId":{}},"wrapper":true}}}},"resetCacheParameterGroup":{"name":"ResetCacheParameterGroup","input":{"type":"structure","members":{"CacheParameterGroupName":{"required":true},"ResetAllParameters":{"type":"boolean"},"ParameterNameValues":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{}},"name":"ParameterNameValue"},"required":true}}},"output":{"type":"structure","members":{"CacheParameterGroupName":{}}}},"revokeCacheSecurityGroupIngress":{"name":"RevokeCacheSecurityGroupIngress","input":{"type":"structure","members":{"CacheSecurityGroupName":{"required":true},"EC2SecurityGroupName":{"required":true},"EC2SecurityGroupOwnerId":{"required":true}}},"output":{"type":"structure","members":{"CacheSecurityGroup":{"type":"structure","members":{"OwnerId":{},"CacheSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}}},"wrapper":true}}}}},"pagination":{"describeCacheClusters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"CacheClusters"},"describeCacheEngineVersions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"CacheEngineVersions"},"describeCacheParameterGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"CacheParameterGroups"},"describeCacheParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeCacheSecurityGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"CacheSecurityGroups"},"describeCacheSubnetGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"CacheSubnetGroups"},"describeEngineDefaultParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeEvents":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Events"},"describeReservedCacheNodes":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedCacheNodes"},"describeReservedCacheNodesOfferings":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedCacheNodesOfferings"}}});
AWS.Service.defineServiceApi(require("./services/elasticbeanstalk"), "2010-12-01", {"format":"query","apiVersion":"2010-12-01","endpointPrefix":"elasticbeanstalk","resultWrapped":true,"serviceAbbreviation":"Elastic Beanstalk","serviceFullName":"AWS Elastic Beanstalk","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"checkDNSAvailability":{"name":"CheckDNSAvailability","input":{"type":"structure","members":{"CNAMEPrefix":{"required":true}}},"output":{"type":"structure","members":{"Available":{"type":"boolean"},"FullyQualifiedCNAME":{}}}},"createApplication":{"name":"CreateApplication","input":{"type":"structure","members":{"ApplicationName":{"required":true},"Description":{}}},"output":{"type":"structure","members":{"Application":{"type":"structure","members":{"ApplicationName":{},"Description":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Versions":{"type":"list","members":{}},"ConfigurationTemplates":{"type":"list","members":{}}}}}}},"createApplicationVersion":{"name":"CreateApplicationVersion","input":{"type":"structure","members":{"ApplicationName":{"required":true},"VersionLabel":{"required":true},"Description":{},"SourceBundle":{"type":"structure","members":{"S3Bucket":{},"S3Key":{}}},"AutoCreateApplication":{"type":"boolean"}}},"output":{"type":"structure","members":{"ApplicationVersion":{"type":"structure","members":{"ApplicationName":{},"Description":{},"VersionLabel":{},"SourceBundle":{"type":"structure","members":{"S3Bucket":{},"S3Key":{}}},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"}}}}}},"createConfigurationTemplate":{"name":"CreateConfigurationTemplate","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TemplateName":{"required":true},"SolutionStackName":{},"SourceConfiguration":{"type":"structure","members":{"ApplicationName":{},"TemplateName":{}}},"EnvironmentId":{},"Description":{},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}}}},"output":{"type":"structure","members":{"SolutionStackName":{},"ApplicationName":{},"TemplateName":{},"Description":{},"EnvironmentName":{},"DeploymentStatus":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}}}}},"createEnvironment":{"name":"CreateEnvironment","input":{"type":"structure","members":{"ApplicationName":{"required":true},"EnvironmentName":{"required":true},"Description":{},"CNAMEPrefix":{},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}},"VersionLabel":{},"TemplateName":{},"SolutionStackName":{},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}},"OptionsToRemove":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{}}}}}},"output":{"type":"structure","members":{"EnvironmentName":{},"EnvironmentId":{},"ApplicationName":{},"VersionLabel":{},"SolutionStackName":{},"TemplateName":{},"Description":{},"EndpointURL":{},"CNAME":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Status":{},"Health":{},"Resources":{"type":"structure","members":{"LoadBalancer":{"type":"structure","members":{"LoadBalancerName":{},"Domain":{},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{},"Port":{"type":"integer"}}}}}}}},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}}}}},"createStorageLocation":{"name":"CreateStorageLocation","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"S3Bucket":{}}}},"deleteApplication":{"name":"DeleteApplication","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TerminateEnvByForce":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"deleteApplicationVersion":{"name":"DeleteApplicationVersion","input":{"type":"structure","members":{"ApplicationName":{"required":true},"VersionLabel":{"required":true},"DeleteSourceBundle":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"deleteConfigurationTemplate":{"name":"DeleteConfigurationTemplate","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TemplateName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteEnvironmentConfiguration":{"name":"DeleteEnvironmentConfiguration","input":{"type":"structure","members":{"ApplicationName":{"required":true},"EnvironmentName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeApplicationVersions":{"name":"DescribeApplicationVersions","input":{"type":"structure","members":{"ApplicationName":{},"VersionLabels":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"ApplicationVersions":{"type":"list","members":{"type":"structure","members":{"ApplicationName":{},"Description":{},"VersionLabel":{},"SourceBundle":{"type":"structure","members":{"S3Bucket":{},"S3Key":{}}},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"}}}}}}},"describeApplications":{"name":"DescribeApplications","input":{"type":"structure","members":{"ApplicationNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Applications":{"type":"list","members":{"type":"structure","members":{"ApplicationName":{},"Description":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Versions":{"type":"list","members":{}},"ConfigurationTemplates":{"type":"list","members":{}}}}}}}},"describeConfigurationOptions":{"name":"DescribeConfigurationOptions","input":{"type":"structure","members":{"ApplicationName":{},"TemplateName":{},"EnvironmentName":{},"SolutionStackName":{},"Options":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{}}}}}},"output":{"type":"structure","members":{"SolutionStackName":{},"Options":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"Name":{},"DefaultValue":{},"ChangeSeverity":{},"UserDefined":{"type":"boolean"},"ValueType":{},"ValueOptions":{"type":"list","members":{}},"MinValue":{"type":"integer"},"MaxValue":{"type":"integer"},"MaxLength":{"type":"integer"},"Regex":{"type":"structure","members":{"Pattern":{},"Label":{}}}}}}}}},"describeConfigurationSettings":{"name":"DescribeConfigurationSettings","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TemplateName":{},"EnvironmentName":{}}},"output":{"type":"structure","members":{"ConfigurationSettings":{"type":"list","members":{"type":"structure","members":{"SolutionStackName":{},"ApplicationName":{},"TemplateName":{},"Description":{},"EnvironmentName":{},"DeploymentStatus":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}}}}}}}},"describeEnvironmentResources":{"name":"DescribeEnvironmentResources","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{}}},"output":{"type":"structure","members":{"EnvironmentResources":{"type":"structure","members":{"EnvironmentName":{},"AutoScalingGroups":{"type":"list","members":{"type":"structure","members":{"Name":{}}}},"Instances":{"type":"list","members":{"type":"structure","members":{"Id":{}}}},"LaunchConfigurations":{"type":"list","members":{"type":"structure","members":{"Name":{}}}},"LoadBalancers":{"type":"list","members":{"type":"structure","members":{"Name":{}}}},"Triggers":{"type":"list","members":{"type":"structure","members":{"Name":{}}}},"Queues":{"type":"list","members":{"type":"structure","members":{"Name":{},"URL":{}}}}}}}}},"describeEnvironments":{"name":"DescribeEnvironments","input":{"type":"structure","members":{"ApplicationName":{},"VersionLabel":{},"EnvironmentIds":{"type":"list","members":{}},"EnvironmentNames":{"type":"list","members":{}},"IncludeDeleted":{"type":"boolean"},"IncludedDeletedBackTo":{"type":"timestamp"}}},"output":{"type":"structure","members":{"Environments":{"type":"list","members":{"type":"structure","members":{"EnvironmentName":{},"EnvironmentId":{},"ApplicationName":{},"VersionLabel":{},"SolutionStackName":{},"TemplateName":{},"Description":{},"EndpointURL":{},"CNAME":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Status":{},"Health":{},"Resources":{"type":"structure","members":{"LoadBalancer":{"type":"structure","members":{"LoadBalancerName":{},"Domain":{},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{},"Port":{"type":"integer"}}}}}}}},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}}}}}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"ApplicationName":{},"VersionLabel":{},"TemplateName":{},"EnvironmentId":{},"EnvironmentName":{},"RequestId":{},"Severity":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"MaxRecords":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"Events":{"type":"list","members":{"type":"structure","members":{"EventDate":{"type":"timestamp"},"Message":{},"ApplicationName":{},"VersionLabel":{},"TemplateName":{},"EnvironmentName":{},"RequestId":{},"Severity":{}}}},"NextToken":{}}}},"listAvailableSolutionStacks":{"name":"ListAvailableSolutionStacks","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"SolutionStacks":{"type":"list","members":{}},"SolutionStackDetails":{"type":"list","members":{"type":"structure","members":{"SolutionStackName":{},"PermittedFileTypes":{"type":"list","members":{}}}}}}}},"rebuildEnvironment":{"name":"RebuildEnvironment","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{}}},"output":{"type":"structure","members":{}}},"requestEnvironmentInfo":{"name":"RequestEnvironmentInfo","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{},"InfoType":{"required":true}}},"output":{"type":"structure","members":{}}},"restartAppServer":{"name":"RestartAppServer","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{}}},"output":{"type":"structure","members":{}}},"retrieveEnvironmentInfo":{"name":"RetrieveEnvironmentInfo","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{},"InfoType":{"required":true}}},"output":{"type":"structure","members":{"EnvironmentInfo":{"type":"list","members":{"type":"structure","members":{"InfoType":{},"Ec2InstanceId":{},"SampleTimestamp":{"type":"timestamp"},"Message":{}}}}}}},"swapEnvironmentCNAMEs":{"name":"SwapEnvironmentCNAMEs","input":{"type":"structure","members":{"SourceEnvironmentId":{},"SourceEnvironmentName":{},"DestinationEnvironmentId":{},"DestinationEnvironmentName":{}}},"output":{"type":"structure","members":{}}},"terminateEnvironment":{"name":"TerminateEnvironment","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{},"TerminateResources":{"type":"boolean"}}},"output":{"type":"structure","members":{"EnvironmentName":{},"EnvironmentId":{},"ApplicationName":{},"VersionLabel":{},"SolutionStackName":{},"TemplateName":{},"Description":{},"EndpointURL":{},"CNAME":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Status":{},"Health":{},"Resources":{"type":"structure","members":{"LoadBalancer":{"type":"structure","members":{"LoadBalancerName":{},"Domain":{},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{},"Port":{"type":"integer"}}}}}}}},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}}}}},"updateApplication":{"name":"UpdateApplication","input":{"type":"structure","members":{"ApplicationName":{"required":true},"Description":{}}},"output":{"type":"structure","members":{"Application":{"type":"structure","members":{"ApplicationName":{},"Description":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Versions":{"type":"list","members":{}},"ConfigurationTemplates":{"type":"list","members":{}}}}}}},"updateApplicationVersion":{"name":"UpdateApplicationVersion","input":{"type":"structure","members":{"ApplicationName":{"required":true},"VersionLabel":{"required":true},"Description":{}}},"output":{"type":"structure","members":{"ApplicationVersion":{"type":"structure","members":{"ApplicationName":{},"Description":{},"VersionLabel":{},"SourceBundle":{"type":"structure","members":{"S3Bucket":{},"S3Key":{}}},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"}}}}}},"updateConfigurationTemplate":{"name":"UpdateConfigurationTemplate","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TemplateName":{"required":true},"Description":{},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}},"OptionsToRemove":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{}}}}}},"output":{"type":"structure","members":{"SolutionStackName":{},"ApplicationName":{},"TemplateName":{},"Description":{},"EnvironmentName":{},"DeploymentStatus":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}}}}},"updateEnvironment":{"name":"UpdateEnvironment","input":{"type":"structure","members":{"EnvironmentId":{},"EnvironmentName":{},"Description":{},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}},"VersionLabel":{},"TemplateName":{},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}}},"OptionsToRemove":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{}}}}}},"output":{"type":"structure","members":{"EnvironmentName":{},"EnvironmentId":{},"ApplicationName":{},"VersionLabel":{},"SolutionStackName":{},"TemplateName":{},"Description":{},"EndpointURL":{},"CNAME":{},"DateCreated":{"type":"timestamp"},"DateUpdated":{"type":"timestamp"},"Status":{},"Health":{},"Resources":{"type":"structure","members":{"LoadBalancer":{"type":"structure","members":{"LoadBalancerName":{},"Domain":{},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{},"Port":{"type":"integer"}}}}}}}},"Tier":{"type":"structure","members":{"Name":{},"Type":{},"Version":{}}}}}},"validateConfigurationSettings":{"name":"ValidateConfigurationSettings","input":{"type":"structure","members":{"ApplicationName":{"required":true},"TemplateName":{},"EnvironmentName":{},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Namespace":{},"OptionName":{},"Value":{}}},"required":true}}},"output":{"type":"structure","members":{"Messages":{"type":"list","members":{"type":"structure","members":{"Message":{},"Severity":{},"Namespace":{},"OptionName":{}}}}}}}},"pagination":{"describeApplicationVersions":{"resultKey":"ApplicationVersions"},"describeApplications":{"resultKey":"Applications"},"describeConfigurationOptions":{"resultKey":"Options"},"describeEnvironments":{"resultKey":"Environments"},"describeEvents":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxRecords","resultKey":"Events"},"listAvailableSolutionStacks":{"resultKey":"SolutionStacks"}}});
AWS.Service.defineServiceApi(require("./services/elastictranscoder"), "2012-09-25", {"format":"rest-json","apiVersion":"2012-09-25","endpointPrefix":"elastictranscoder","serviceFullName":"Amazon Elastic Transcoder","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"cancelJob":{"name":"CancelJob","http":{"method":"DELETE","uri":"/2012-09-25/jobs/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"createJob":{"name":"CreateJob","http":{"method":"POST","uri":"/2012-09-25/jobs"},"input":{"payload":["PipelineId","Input","Output","Outputs","OutputKeyPrefix","Playlists"],"type":"structure","members":{"PipelineId":{},"Input":{"type":"structure","members":{"Key":{},"FrameRate":{},"Resolution":{},"AspectRatio":{},"Interlaced":{},"Container":{}}},"Output":{"type":"structure","members":{"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}},"Outputs":{"type":"list","members":{"type":"structure","members":{"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}}},"OutputKeyPrefix":{},"Playlists":{"type":"list","members":{"type":"structure","members":{"Name":{},"Format":{},"OutputKeys":{"type":"list","members":{}}}}}}},"output":{"type":"structure","members":{"Job":{"type":"structure","members":{"Id":{},"Arn":{},"PipelineId":{},"Input":{"type":"structure","members":{"Key":{},"FrameRate":{},"Resolution":{},"AspectRatio":{},"Interlaced":{},"Container":{}}},"Output":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}},"Outputs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}}},"OutputKeyPrefix":{},"Playlists":{"type":"list","members":{"type":"structure","members":{"Name":{},"Format":{},"OutputKeys":{"type":"list","members":{}},"Status":{},"StatusDetail":{}}}},"Status":{}}}}}},"createPipeline":{"name":"CreatePipeline","http":{"method":"POST","uri":"/2012-09-25/pipelines"},"input":{"payload":["Name","InputBucket","OutputBucket","Role","Notifications","ContentConfig","ThumbnailConfig"],"type":"structure","members":{"Name":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}},"output":{"type":"structure","members":{"Pipeline":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}}}},"createPreset":{"name":"CreatePreset","http":{"method":"POST","uri":"/2012-09-25/presets"},"input":{"payload":["Name","Description","Container","Video","Audio","Thumbnails"],"type":"structure","members":{"Name":{},"Description":{},"Container":{},"Video":{"type":"structure","members":{"Codec":{},"CodecOptions":{"type":"map","keys":{},"members":{}},"KeyframesMaxDist":{},"FixedGOP":{},"BitRate":{},"FrameRate":{},"MaxFrameRate":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"DisplayAspectRatio":{},"SizingPolicy":{},"PaddingPolicy":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"Id":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"HorizontalAlign":{},"HorizontalOffset":{},"VerticalAlign":{},"VerticalOffset":{},"Opacity":{},"Target":{}}}}}},"Audio":{"type":"structure","members":{"Codec":{},"SampleRate":{},"BitRate":{},"Channels":{},"CodecOptions":{"type":"structure","members":{"Profile":{}}}}},"Thumbnails":{"type":"structure","members":{"Format":{},"Interval":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{}}}}},"output":{"type":"structure","members":{"Preset":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Description":{},"Container":{},"Audio":{"type":"structure","members":{"Codec":{},"SampleRate":{},"BitRate":{},"Channels":{},"CodecOptions":{"type":"structure","members":{"Profile":{}}}}},"Video":{"type":"structure","members":{"Codec":{},"CodecOptions":{"type":"map","keys":{},"members":{}},"KeyframesMaxDist":{},"FixedGOP":{},"BitRate":{},"FrameRate":{},"MaxFrameRate":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"DisplayAspectRatio":{},"SizingPolicy":{},"PaddingPolicy":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"Id":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"HorizontalAlign":{},"HorizontalOffset":{},"VerticalAlign":{},"VerticalOffset":{},"Opacity":{},"Target":{}}}}}},"Thumbnails":{"type":"structure","members":{"Format":{},"Interval":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{}}},"Type":{}}},"Warning":{}}}},"deletePipeline":{"name":"DeletePipeline","http":{"method":"DELETE","uri":"/2012-09-25/pipelines/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"deletePreset":{"name":"DeletePreset","http":{"method":"DELETE","uri":"/2012-09-25/presets/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"listJobsByPipeline":{"name":"ListJobsByPipeline","http":{"method":"GET","uri":"/2012-09-25/jobsByPipeline/{PipelineId}?Ascending={Ascending}&PageToken={PageToken}"},"input":{"type":"structure","members":{"PipelineId":{"location":"uri"},"Ascending":{"location":"uri"},"PageToken":{"location":"uri"}}},"output":{"type":"structure","members":{"Jobs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Arn":{},"PipelineId":{},"Input":{"type":"structure","members":{"Key":{},"FrameRate":{},"Resolution":{},"AspectRatio":{},"Interlaced":{},"Container":{}}},"Output":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}},"Outputs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}}},"OutputKeyPrefix":{},"Playlists":{"type":"list","members":{"type":"structure","members":{"Name":{},"Format":{},"OutputKeys":{"type":"list","members":{}},"Status":{},"StatusDetail":{}}}},"Status":{}}}},"NextPageToken":{}}}},"listJobsByStatus":{"name":"ListJobsByStatus","http":{"method":"GET","uri":"/2012-09-25/jobsByStatus/{Status}?Ascending={Ascending}&PageToken={PageToken}"},"input":{"type":"structure","members":{"Status":{"location":"uri"},"Ascending":{"location":"uri"},"PageToken":{"location":"uri"}}},"output":{"type":"structure","members":{"Jobs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Arn":{},"PipelineId":{},"Input":{"type":"structure","members":{"Key":{},"FrameRate":{},"Resolution":{},"AspectRatio":{},"Interlaced":{},"Container":{}}},"Output":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}},"Outputs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}}},"OutputKeyPrefix":{},"Playlists":{"type":"list","members":{"type":"structure","members":{"Name":{},"Format":{},"OutputKeys":{"type":"list","members":{}},"Status":{},"StatusDetail":{}}}},"Status":{}}}},"NextPageToken":{}}}},"listPipelines":{"name":"ListPipelines","http":{"method":"GET","uri":"/2012-09-25/pipelines?Ascending={Ascending}&PageToken={PageToken}"},"input":{"type":"structure","members":{"Ascending":{"location":"uri"},"PageToken":{"location":"uri"}}},"output":{"type":"structure","members":{"Pipelines":{"type":"list","members":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}},"NextPageToken":{}}}},"listPresets":{"name":"ListPresets","http":{"method":"GET","uri":"/2012-09-25/presets?Ascending={Ascending}&PageToken={PageToken}"},"input":{"type":"structure","members":{"Ascending":{"location":"uri"},"PageToken":{"location":"uri"}}},"output":{"type":"structure","members":{"Presets":{"type":"list","members":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Description":{},"Container":{},"Audio":{"type":"structure","members":{"Codec":{},"SampleRate":{},"BitRate":{},"Channels":{},"CodecOptions":{"type":"structure","members":{"Profile":{}}}}},"Video":{"type":"structure","members":{"Codec":{},"CodecOptions":{"type":"map","keys":{},"members":{}},"KeyframesMaxDist":{},"FixedGOP":{},"BitRate":{},"FrameRate":{},"MaxFrameRate":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"DisplayAspectRatio":{},"SizingPolicy":{},"PaddingPolicy":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"Id":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"HorizontalAlign":{},"HorizontalOffset":{},"VerticalAlign":{},"VerticalOffset":{},"Opacity":{},"Target":{}}}}}},"Thumbnails":{"type":"structure","members":{"Format":{},"Interval":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{}}},"Type":{}}}},"NextPageToken":{}}}},"readJob":{"name":"ReadJob","http":{"method":"GET","uri":"/2012-09-25/jobs/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"Job":{"type":"structure","members":{"Id":{},"Arn":{},"PipelineId":{},"Input":{"type":"structure","members":{"Key":{},"FrameRate":{},"Resolution":{},"AspectRatio":{},"Interlaced":{},"Container":{}}},"Output":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}},"Outputs":{"type":"list","members":{"type":"structure","members":{"Id":{},"Key":{},"ThumbnailPattern":{},"Rotate":{},"PresetId":{},"SegmentDuration":{},"Status":{},"StatusDetail":{},"Duration":{"type":"integer"},"Width":{"type":"integer"},"Height":{"type":"integer"},"Watermarks":{"type":"list","members":{"type":"structure","members":{"PresetWatermarkId":{},"InputKey":{}}}},"AlbumArt":{"type":"structure","members":{"MergePolicy":{},"Artwork":{"type":"list","members":{"type":"structure","members":{"InputKey":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{},"AlbumArtFormat":{}}}}}},"Composition":{"type":"list","members":{"type":"structure","members":{"TimeSpan":{"type":"structure","members":{"StartTime":{},"Duration":{}}}}}}}}},"OutputKeyPrefix":{},"Playlists":{"type":"list","members":{"type":"structure","members":{"Name":{},"Format":{},"OutputKeys":{"type":"list","members":{}},"Status":{},"StatusDetail":{}}}},"Status":{}}}}}},"readPipeline":{"name":"ReadPipeline","http":{"method":"GET","uri":"/2012-09-25/pipelines/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"Pipeline":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}}}},"readPreset":{"name":"ReadPreset","http":{"method":"GET","uri":"/2012-09-25/presets/{Id}"},"input":{"type":"structure","members":{"Id":{"location":"uri"}}},"output":{"type":"structure","members":{"Preset":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Description":{},"Container":{},"Audio":{"type":"structure","members":{"Codec":{},"SampleRate":{},"BitRate":{},"Channels":{},"CodecOptions":{"type":"structure","members":{"Profile":{}}}}},"Video":{"type":"structure","members":{"Codec":{},"CodecOptions":{"type":"map","keys":{},"members":{}},"KeyframesMaxDist":{},"FixedGOP":{},"BitRate":{},"FrameRate":{},"MaxFrameRate":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"DisplayAspectRatio":{},"SizingPolicy":{},"PaddingPolicy":{},"Watermarks":{"type":"list","members":{"type":"structure","members":{"Id":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"HorizontalAlign":{},"HorizontalOffset":{},"VerticalAlign":{},"VerticalOffset":{},"Opacity":{},"Target":{}}}}}},"Thumbnails":{"type":"structure","members":{"Format":{},"Interval":{},"Resolution":{},"AspectRatio":{},"MaxWidth":{},"MaxHeight":{},"SizingPolicy":{},"PaddingPolicy":{}}},"Type":{}}}}}},"testRole":{"name":"TestRole","http":{"method":"POST","uri":"/2012-09-25/roleTests"},"input":{"payload":["Role","InputBucket","OutputBucket","Topics"],"type":"structure","members":{"Role":{},"InputBucket":{},"OutputBucket":{},"Topics":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Success":{},"Messages":{"type":"list","members":{}}}}},"updatePipeline":{"name":"UpdatePipeline","http":{"method":"PUT","uri":"/2012-09-25/pipelines/{Id}"},"input":{"payload":["Name","InputBucket","Role","Notifications","ContentConfig","ThumbnailConfig"],"type":"structure","members":{"Id":{"required":true,"location":"uri"},"Name":{},"InputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}},"output":{"type":"structure","members":{"Pipeline":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}}}},"updatePipelineNotifications":{"name":"UpdatePipelineNotifications","http":{"method":"POST","uri":"/2012-09-25/pipelines/{Id}/notifications"},"input":{"payload":["Notifications"],"type":"structure","members":{"Id":{"location":"uri"},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}}}},"output":{"type":"structure","members":{"Pipeline":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}}}},"updatePipelineStatus":{"name":"UpdatePipelineStatus","http":{"method":"POST","uri":"/2012-09-25/pipelines/{Id}/status"},"input":{"payload":["Status"],"type":"structure","members":{"Id":{"location":"uri"},"Status":{}}},"output":{"type":"structure","members":{"Pipeline":{"type":"structure","members":{"Id":{},"Arn":{},"Name":{},"Status":{},"InputBucket":{},"OutputBucket":{},"Role":{},"Notifications":{"type":"structure","members":{"Progressing":{},"Completed":{},"Warning":{},"Error":{}}},"ContentConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}},"ThumbnailConfig":{"type":"structure","members":{"Bucket":{},"StorageClass":{},"Permissions":{"type":"list","members":{"type":"structure","members":{"GranteeType":{},"Grantee":{},"Access":{"type":"list","members":{}}}}}}}}}}}}},"pagination":{"listJobsByPipeline":{"inputToken":"PageToken","outputToken":"NextPageToken","resultKey":"Jobs"},"listJobsByStatus":{"inputToken":"PageToken","outputToken":"NextPageToken","resultKey":"Jobs"},"listPipelines":{"inputToken":"PageToken","outputToken":"NextPageToken","resultKey":"Pipelines"},"listPresets":{"inputToken":"PageToken","outputToken":"NextPageToken","resultKey":"Presets"}}});
AWS.Service.defineServiceApi(require("./services/elb"), "2012-06-01", {"format":"query","apiVersion":"2012-06-01","endpointPrefix":"elasticloadbalancing","resultWrapped":true,"serviceFullName":"Elastic Load Balancing","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"applySecurityGroupsToLoadBalancer":{"name":"ApplySecurityGroupsToLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"SecurityGroups":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"SecurityGroups":{"type":"list","members":{}}}}},"attachLoadBalancerToSubnets":{"name":"AttachLoadBalancerToSubnets","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Subnets":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"Subnets":{"type":"list","members":{}}}}},"configureHealthCheck":{"name":"ConfigureHealthCheck","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"HealthCheck":{"type":"structure","members":{"Target":{"required":true},"Interval":{"type":"integer","required":true},"Timeout":{"type":"integer","required":true},"UnhealthyThreshold":{"type":"integer","required":true},"HealthyThreshold":{"type":"integer","required":true}},"required":true}}},"output":{"type":"structure","members":{"HealthCheck":{"type":"structure","members":{"Target":{},"Interval":{"type":"integer"},"Timeout":{"type":"integer"},"UnhealthyThreshold":{"type":"integer"},"HealthyThreshold":{"type":"integer"}}}}}},"createAppCookieStickinessPolicy":{"name":"CreateAppCookieStickinessPolicy","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"PolicyName":{"required":true},"CookieName":{"required":true}}},"output":{"type":"structure","members":{}}},"createLBCookieStickinessPolicy":{"name":"CreateLBCookieStickinessPolicy","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"PolicyName":{"required":true},"CookieExpirationPeriod":{"type":"integer"}}},"output":{"type":"structure","members":{}}},"createLoadBalancer":{"name":"CreateLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{"required":true},"LoadBalancerPort":{"type":"integer","required":true},"InstanceProtocol":{},"InstancePort":{"type":"integer","required":true},"SSLCertificateId":{}}},"required":true},"AvailabilityZones":{"type":"list","members":{}},"Subnets":{"type":"list","members":{}},"SecurityGroups":{"type":"list","members":{}},"Scheme":{}}},"output":{"type":"structure","members":{"DNSName":{}}}},"createLoadBalancerListeners":{"name":"CreateLoadBalancerListeners","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Listeners":{"type":"list","members":{"type":"structure","members":{"Protocol":{"required":true},"LoadBalancerPort":{"type":"integer","required":true},"InstanceProtocol":{},"InstancePort":{"type":"integer","required":true},"SSLCertificateId":{}}},"required":true}}},"output":{"type":"structure","members":{}}},"createLoadBalancerPolicy":{"name":"CreateLoadBalancerPolicy","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"PolicyName":{"required":true},"PolicyTypeName":{"required":true},"PolicyAttributes":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeValue":{}}}}}},"output":{"type":"structure","members":{}}},"deleteLoadBalancer":{"name":"DeleteLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteLoadBalancerListeners":{"name":"DeleteLoadBalancerListeners","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"LoadBalancerPorts":{"type":"list","members":{"type":"integer"},"required":true}}},"output":{"type":"structure","members":{}}},"deleteLoadBalancerPolicy":{"name":"DeleteLoadBalancerPolicy","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deregisterInstancesFromLoadBalancer":{"name":"DeregisterInstancesFromLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}},"required":true}}},"output":{"type":"structure","members":{"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}}}}}},"describeInstanceHealth":{"name":"DescribeInstanceHealth","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}}}}},"output":{"type":"structure","members":{"InstanceStates":{"type":"list","members":{"type":"structure","members":{"InstanceId":{},"State":{},"ReasonCode":{},"Description":{}}}}}}},"describeLoadBalancerAttributes":{"name":"DescribeLoadBalancerAttributes","input":{"type":"structure","members":{"LoadBalancerName":{"required":true}}},"output":{"type":"structure","members":{"LoadBalancerAttributes":{"type":"structure","members":{"CrossZoneLoadBalancing":{"type":"structure","members":{"Enabled":{"type":"boolean"}}}}}}}},"describeLoadBalancerPolicies":{"name":"DescribeLoadBalancerPolicies","input":{"type":"structure","members":{"LoadBalancerName":{},"PolicyNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"PolicyDescriptions":{"type":"list","members":{"type":"structure","members":{"PolicyName":{},"PolicyTypeName":{},"PolicyAttributeDescriptions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeValue":{}}}}}}}}}},"describeLoadBalancerPolicyTypes":{"name":"DescribeLoadBalancerPolicyTypes","input":{"type":"structure","members":{"PolicyTypeNames":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"PolicyTypeDescriptions":{"type":"list","members":{"type":"structure","members":{"PolicyTypeName":{},"Description":{},"PolicyAttributeTypeDescriptions":{"type":"list","members":{"type":"structure","members":{"AttributeName":{},"AttributeType":{},"Description":{},"DefaultValue":{},"Cardinality":{}}}}}}}}}},"describeLoadBalancers":{"name":"DescribeLoadBalancers","input":{"type":"structure","members":{"LoadBalancerNames":{"type":"list","members":{}},"Marker":{}}},"output":{"type":"structure","members":{"LoadBalancerDescriptions":{"type":"list","members":{"type":"structure","members":{"LoadBalancerName":{},"DNSName":{},"CanonicalHostedZoneName":{},"CanonicalHostedZoneNameID":{},"ListenerDescriptions":{"type":"list","members":{"type":"structure","members":{"Listener":{"type":"structure","members":{"Protocol":{},"LoadBalancerPort":{"type":"integer"},"InstanceProtocol":{},"InstancePort":{"type":"integer"},"SSLCertificateId":{}}},"PolicyNames":{"type":"list","members":{}}}}},"Policies":{"type":"structure","members":{"AppCookieStickinessPolicies":{"type":"list","members":{"type":"structure","members":{"PolicyName":{},"CookieName":{}}}},"LBCookieStickinessPolicies":{"type":"list","members":{"type":"structure","members":{"PolicyName":{},"CookieExpirationPeriod":{"type":"integer"}}}},"OtherPolicies":{"type":"list","members":{}}}},"BackendServerDescriptions":{"type":"list","members":{"type":"structure","members":{"InstancePort":{"type":"integer"},"PolicyNames":{"type":"list","members":{}}}}},"AvailabilityZones":{"type":"list","members":{}},"Subnets":{"type":"list","members":{}},"VPCId":{},"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}}},"HealthCheck":{"type":"structure","members":{"Target":{},"Interval":{"type":"integer"},"Timeout":{"type":"integer"},"UnhealthyThreshold":{"type":"integer"},"HealthyThreshold":{"type":"integer"}}},"SourceSecurityGroup":{"type":"structure","members":{"OwnerAlias":{},"GroupName":{}}},"SecurityGroups":{"type":"list","members":{}},"CreatedTime":{"type":"timestamp"},"Scheme":{}}}},"NextMarker":{}}}},"detachLoadBalancerFromSubnets":{"name":"DetachLoadBalancerFromSubnets","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Subnets":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"Subnets":{"type":"list","members":{}}}}},"disableAvailabilityZonesForLoadBalancer":{"name":"DisableAvailabilityZonesForLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"AvailabilityZones":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"AvailabilityZones":{"type":"list","members":{}}}}},"enableAvailabilityZonesForLoadBalancer":{"name":"EnableAvailabilityZonesForLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"AvailabilityZones":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"AvailabilityZones":{"type":"list","members":{}}}}},"modifyLoadBalancerAttributes":{"name":"ModifyLoadBalancerAttributes","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"LoadBalancerAttributes":{"type":"structure","members":{"CrossZoneLoadBalancing":{"type":"structure","members":{"Enabled":{"type":"boolean","required":true}}}},"required":true}}},"output":{"type":"structure","members":{}}},"registerInstancesWithLoadBalancer":{"name":"RegisterInstancesWithLoadBalancer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}},"required":true}}},"output":{"type":"structure","members":{"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{}}}}}}},"setLoadBalancerListenerSSLCertificate":{"name":"SetLoadBalancerListenerSSLCertificate","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"LoadBalancerPort":{"type":"integer","required":true},"SSLCertificateId":{"required":true}}},"output":{"type":"structure","members":{}}},"setLoadBalancerPoliciesForBackendServer":{"name":"SetLoadBalancerPoliciesForBackendServer","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"InstancePort":{"type":"integer","required":true},"PolicyNames":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"setLoadBalancerPoliciesOfListener":{"name":"SetLoadBalancerPoliciesOfListener","input":{"type":"structure","members":{"LoadBalancerName":{"required":true},"LoadBalancerPort":{"type":"integer","required":true},"PolicyNames":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}}},"pagination":{"describeInstanceHealth":{"resultKey":"InstanceStates"},"describeLoadBalancerPolicies":{"resultKey":"PolicyDescriptions"},"describeLoadBalancerPolicyTypes":{"resultKey":"PolicyTypeDescriptions"},"describeLoadBalancers":{"inputToken":"Marker","outputToken":"NextMarker","resultKey":"LoadBalancerDescriptions"}}});
AWS.Service.defineServiceApi(require("./services/emr"), "2009-03-31", {"format":"json","apiVersion":"2009-03-31","endpointPrefix":"elasticmapreduce","jsonVersion":"1.1","serviceAbbreviation":"Amazon EMR","serviceFullName":"Amazon Elastic MapReduce","signatureVersion":"v4","targetPrefix":"ElasticMapReduce","timestampFormat":"unixTimestamp","operations":{"addInstanceGroups":{"name":"AddInstanceGroups","input":{"type":"structure","members":{"InstanceGroups":{"type":"list","members":{"type":"structure","members":{"Name":{},"Market":{},"InstanceRole":{"required":true},"BidPrice":{},"InstanceType":{"required":true},"InstanceCount":{"type":"integer","required":true}}},"required":true},"JobFlowId":{"required":true}}},"output":{"type":"structure","members":{"JobFlowId":{},"InstanceGroupIds":{"type":"list","members":{}}}}},"addJobFlowSteps":{"name":"AddJobFlowSteps","input":{"type":"structure","members":{"JobFlowId":{"required":true},"Steps":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"ActionOnFailure":{},"HadoopJarStep":{"type":"structure","members":{"Properties":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}},"Jar":{"required":true},"MainClass":{},"Args":{"type":"list","members":{}}},"required":true}}},"required":true}}},"output":{"type":"structure","members":{"StepIds":{"type":"list","members":{}}}}},"addTags":{"name":"AddTags","input":{"type":"structure","members":{"ResourceId":{},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}}}},"output":{"type":"structure","members":{}}},"describeCluster":{"name":"DescribeCluster","input":{"type":"structure","members":{"ClusterId":{}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"Id":{},"Name":{},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}},"Ec2InstanceAttributes":{"type":"structure","members":{"Ec2KeyName":{},"Ec2SubnetId":{},"Ec2AvailabilityZone":{},"IamInstanceProfile":{}}},"LogUri":{},"RequestedAmiVersion":{},"RunningAmiVersion":{},"AutoTerminate":{"type":"boolean"},"TerminationProtected":{"type":"boolean"},"VisibleToAllUsers":{"type":"boolean"},"Applications":{"type":"list","members":{"type":"structure","members":{"Name":{},"Version":{},"Args":{"type":"list","members":{}},"AdditionalInfo":{"type":"map","keys":{},"members":{}}}}},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}}}}}}},"describeJobFlows":{"name":"DescribeJobFlows","input":{"type":"structure","members":{"CreatedAfter":{"type":"timestamp"},"CreatedBefore":{"type":"timestamp"},"JobFlowIds":{"type":"list","members":{}},"JobFlowStates":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"JobFlows":{"type":"list","members":{"type":"structure","members":{"JobFlowId":{},"Name":{},"LogUri":{},"AmiVersion":{},"ExecutionStatusDetail":{"type":"structure","members":{"State":{},"CreationDateTime":{"type":"timestamp"},"StartDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"},"LastStateChangeReason":{}}},"Instances":{"type":"structure","members":{"MasterInstanceType":{},"MasterPublicDnsName":{},"MasterInstanceId":{},"SlaveInstanceType":{},"InstanceCount":{"type":"integer"},"InstanceGroups":{"type":"list","members":{"type":"structure","members":{"InstanceGroupId":{},"Name":{},"Market":{},"InstanceRole":{},"BidPrice":{},"InstanceType":{},"InstanceRequestCount":{"type":"integer"},"InstanceRunningCount":{"type":"integer"},"State":{},"LastStateChangeReason":{},"CreationDateTime":{"type":"timestamp"},"StartDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}},"NormalizedInstanceHours":{"type":"integer"},"Ec2KeyName":{},"Ec2SubnetId":{},"Placement":{"type":"structure","members":{"AvailabilityZone":{}}},"KeepJobFlowAliveWhenNoSteps":{"type":"boolean"},"TerminationProtected":{"type":"boolean"},"HadoopVersion":{}}},"Steps":{"type":"list","members":{"type":"structure","members":{"StepConfig":{"type":"structure","members":{"Name":{},"ActionOnFailure":{},"HadoopJarStep":{"type":"structure","members":{"Properties":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}},"Jar":{},"MainClass":{},"Args":{"type":"list","members":{}}}}}},"ExecutionStatusDetail":{"type":"structure","members":{"State":{},"CreationDateTime":{"type":"timestamp"},"StartDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"},"LastStateChangeReason":{}}}}}},"BootstrapActions":{"type":"list","members":{"type":"structure","members":{"BootstrapActionConfig":{"type":"structure","members":{"Name":{},"ScriptBootstrapAction":{"type":"structure","members":{"Path":{},"Args":{"type":"list","members":{}}}}}}}}},"SupportedProducts":{"type":"list","members":{}},"VisibleToAllUsers":{"type":"boolean"},"JobFlowRole":{}}}}}}},"describeStep":{"name":"DescribeStep","input":{"type":"structure","members":{"ClusterId":{},"StepId":{}}},"output":{"type":"structure","members":{"Step":{"type":"structure","members":{"Id":{},"Name":{},"Config":{"type":"structure","members":{"Jar":{},"Properties":{"type":"map","keys":{},"members":{}},"MainClass":{},"Args":{"type":"list","members":{}}}},"ActionOnFailure":{},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"StartDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}}}}}}},"listBootstrapActions":{"name":"ListBootstrapActions","input":{"type":"structure","members":{"ClusterId":{},"Marker":{}}},"output":{"type":"structure","members":{"BootstrapActions":{"type":"list","members":{"type":"structure","members":{"Name":{},"ScriptPath":{},"Args":{"type":"list","members":{}}}}},"Marker":{}}}},"listClusters":{"name":"ListClusters","input":{"type":"structure","members":{"CreatedAfter":{"type":"timestamp"},"CreatedBefore":{"type":"timestamp"},"ClusterStates":{"type":"list","members":{}},"Marker":{}}},"output":{"type":"structure","members":{"Clusters":{"type":"list","members":{"type":"structure","members":{"Id":{},"Name":{},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}}}}},"Marker":{}}}},"listInstanceGroups":{"name":"ListInstanceGroups","input":{"type":"structure","members":{"ClusterId":{},"Marker":{}}},"output":{"type":"structure","members":{"InstanceGroups":{"type":"list","members":{"type":"structure","members":{"Id":{},"Name":{},"Market":{},"InstanceGroupType":{},"BidPrice":{},"InstanceType":{},"RequestedInstanceCount":{"type":"integer"},"RunningInstanceCount":{"type":"integer"},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}}}}},"Marker":{}}}},"listInstances":{"name":"ListInstances","input":{"type":"structure","members":{"ClusterId":{},"InstanceGroupId":{},"InstanceGroupTypes":{"type":"list","members":{}},"Marker":{}}},"output":{"type":"structure","members":{"Instances":{"type":"list","members":{"type":"structure","members":{"Id":{},"Ec2InstanceId":{},"PublicDnsName":{},"PublicIpAddress":{},"PrivateDnsName":{},"PrivateIpAddress":{},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"ReadyDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}}}}},"Marker":{}}}},"listSteps":{"name":"ListSteps","input":{"type":"structure","members":{"ClusterId":{},"StepStates":{"type":"list","members":{}},"Marker":{}}},"output":{"type":"structure","members":{"Steps":{"type":"list","members":{"type":"structure","members":{"Id":{},"Name":{},"Status":{"type":"structure","members":{"State":{},"StateChangeReason":{"type":"structure","members":{"Code":{},"Message":{}}},"Timeline":{"type":"structure","members":{"CreationDateTime":{"type":"timestamp"},"StartDateTime":{"type":"timestamp"},"EndDateTime":{"type":"timestamp"}}}}}}}},"Marker":{}}}},"modifyInstanceGroups":{"name":"ModifyInstanceGroups","input":{"type":"structure","members":{"InstanceGroups":{"type":"list","members":{"type":"structure","members":{"InstanceGroupId":{"required":true},"InstanceCount":{"type":"integer"},"EC2InstanceIdsToTerminate":{"type":"list","members":{}}}}}}},"output":{"type":"structure","members":{}}},"removeTags":{"name":"RemoveTags","input":{"type":"structure","members":{"ResourceId":{},"TagKeys":{"type":"list","members":{}}}},"output":{"type":"structure","members":{}}},"runJobFlow":{"name":"RunJobFlow","input":{"type":"structure","members":{"Name":{"required":true},"LogUri":{},"AdditionalInfo":{},"AmiVersion":{},"Instances":{"type":"structure","members":{"MasterInstanceType":{},"SlaveInstanceType":{},"InstanceCount":{"type":"integer"},"InstanceGroups":{"type":"list","members":{"type":"structure","members":{"Name":{},"Market":{},"InstanceRole":{"required":true},"BidPrice":{},"InstanceType":{"required":true},"InstanceCount":{"type":"integer","required":true}}}},"Ec2KeyName":{},"Placement":{"type":"structure","members":{"AvailabilityZone":{"required":true}}},"KeepJobFlowAliveWhenNoSteps":{"type":"boolean"},"TerminationProtected":{"type":"boolean"},"HadoopVersion":{},"Ec2SubnetId":{}},"required":true},"Steps":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"ActionOnFailure":{},"HadoopJarStep":{"type":"structure","members":{"Properties":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}},"Jar":{"required":true},"MainClass":{},"Args":{"type":"list","members":{}}},"required":true}}}},"BootstrapActions":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"ScriptBootstrapAction":{"type":"structure","members":{"Path":{"required":true},"Args":{"type":"list","members":{}}},"required":true}}}},"SupportedProducts":{"type":"list","members":{}},"NewSupportedProducts":{"type":"list","members":{"type":"structure","members":{"Name":{},"Args":{"type":"list","members":{}}}}},"VisibleToAllUsers":{"type":"boolean"},"JobFlowRole":{},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}}}}}},"output":{"type":"structure","members":{"JobFlowId":{}}}},"setTerminationProtection":{"name":"SetTerminationProtection","input":{"type":"structure","members":{"JobFlowIds":{"type":"list","members":{},"required":true},"TerminationProtected":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{}}},"setVisibleToAllUsers":{"name":"SetVisibleToAllUsers","input":{"type":"structure","members":{"JobFlowIds":{"type":"list","members":{},"required":true},"VisibleToAllUsers":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{}}},"terminateJobFlows":{"name":"TerminateJobFlows","input":{"type":"structure","members":{"JobFlowIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}}},"pagination":{"describeJobFlows":{"resultKey":"JobFlows"},"listBootstrapActions":{"inputToken":"Marker","outputToken":"Marker","resultKey":"BootstrapActions"},"listClusters":{"inputToken":"Marker","outputToken":"Marker","resultKey":"Clusters"},"listInstanceGroups":{"inputToken":"Marker","outputToken":"Marker","resultKey":"InstanceGroups"},"listInstances":{"inputToken":"Marker","outputToken":"Marker","resultKey":"Instances"},"listSteps":{"inputToken":"Marker","outputToken":"Marker","resultKey":"Steps"}}});
AWS.Service.defineServiceApi(require("./services/glacier"), "2012-06-01", {"format":"rest-json","apiVersion":"2012-06-01","checksumFormat":"sha256","endpointPrefix":"glacier","serviceFullName":"Amazon Glacier","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"abortMultipartUpload":{"name":"AbortMultipartUpload","http":{"method":"DELETE","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"uploadId":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"completeMultipartUpload":{"name":"CompleteMultipartUpload","http":{"method":"POST","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"uploadId":{"location":"uri"},"archiveSize":{"location":"header","name":"x-amz-archive-size"},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"}}},"output":{"type":"structure","members":{"location":{"location":"header","name":"Location"},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"},"archiveId":{"location":"header","name":"x-amz-archive-id"}}}},"createVault":{"name":"CreateVault","http":{"method":"PUT","uri":"/{accountId}/vaults/{vaultName}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"}}},"output":{"type":"structure","members":{"location":{"location":"header","name":"Location"}}}},"deleteArchive":{"name":"DeleteArchive","http":{"method":"DELETE","uri":"/{accountId}/vaults/{vaultName}/archives/{archiveId}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"archiveId":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteVault":{"name":"DeleteVault","http":{"method":"DELETE","uri":"/{accountId}/vaults/{vaultName}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteVaultNotifications":{"name":"DeleteVaultNotifications","http":{"method":"DELETE","uri":"/{accountId}/vaults/{vaultName}/notification-configuration"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"}}},"output":{"type":"structure","members":{}}},"describeJob":{"name":"DescribeJob","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/jobs/{jobId}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"jobId":{"location":"uri"}}},"output":{"type":"structure","members":{"JobId":{},"JobDescription":{},"Action":{},"ArchiveId":{},"VaultARN":{},"CreationDate":{},"Completed":{"type":"boolean"},"StatusCode":{},"StatusMessage":{},"ArchiveSizeInBytes":{"type":"integer"},"InventorySizeInBytes":{"type":"integer"},"SNSTopic":{},"CompletionDate":{},"SHA256TreeHash":{},"ArchiveSHA256TreeHash":{},"RetrievalByteRange":{},"InventoryRetrievalParameters":{"type":"structure","members":{"Format":{},"StartDate":{},"EndDate":{},"Limit":{},"Marker":{}}}}}},"describeVault":{"name":"DescribeVault","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"}}},"output":{"type":"structure","members":{"VaultARN":{},"VaultName":{},"CreationDate":{},"LastInventoryDate":{},"NumberOfArchives":{"type":"integer"},"SizeInBytes":{"type":"integer"}}}},"getJobOutput":{"name":"GetJobOutput","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/jobs/{jobId}/output"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"jobId":{"location":"uri"},"range":{"location":"header","name":"Range"}}},"output":{"type":"structure","members":{"body":{"type":"binary","streaming":true},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"},"status":{"type":"integer","location":"status"},"contentRange":{"location":"header","name":"Content-Range"},"acceptRanges":{"location":"header","name":"Accept-Ranges"},"contentType":{"location":"header","name":"Content-Type"},"archiveDescription":{"location":"header","name":"x-amz-archive-description"}},"payload":"body"}},"getVaultNotifications":{"name":"GetVaultNotifications","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/notification-configuration"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"}}},"output":{"type":"structure","members":{"SNSTopic":{},"Events":{"type":"list","members":{}}}}},"initiateJob":{"name":"InitiateJob","http":{"method":"POST","uri":"/{accountId}/vaults/{vaultName}/jobs"},"input":{"payload":"jobParameters","type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"jobParameters":{"type":"structure","members":{"Format":{},"Type":{},"ArchiveId":{},"Description":{},"SNSTopic":{},"RetrievalByteRange":{},"InventoryRetrievalParameters":{"type":"structure","members":{"StartDate":{},"EndDate":{},"Limit":{},"Marker":{}}}}}}},"output":{"type":"structure","members":{"location":{"location":"header","name":"Location"},"jobId":{"location":"header","name":"x-amz-job-id"}}}},"initiateMultipartUpload":{"name":"InitiateMultipartUpload","http":{"method":"POST","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"archiveDescription":{"location":"header","name":"x-amz-archive-description"},"partSize":{"location":"header","name":"x-amz-part-size"}}},"output":{"type":"structure","members":{"location":{"location":"header","name":"Location"},"uploadId":{"location":"header","name":"x-amz-multipart-upload-id"}}}},"listJobs":{"name":"ListJobs","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/jobs?marker={marker}&limit={limit}&completed={completed}&statuscode={statuscode}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"limit":{"location":"uri"},"marker":{"location":"uri"},"statuscode":{"location":"uri"},"completed":{"location":"uri"}}},"output":{"type":"structure","members":{"JobList":{"type":"list","members":{"type":"structure","members":{"JobId":{},"JobDescription":{},"Action":{},"ArchiveId":{},"VaultARN":{},"CreationDate":{},"Completed":{"type":"boolean"},"StatusCode":{},"StatusMessage":{},"ArchiveSizeInBytes":{"type":"integer"},"InventorySizeInBytes":{"type":"integer"},"SNSTopic":{},"CompletionDate":{},"SHA256TreeHash":{},"ArchiveSHA256TreeHash":{},"RetrievalByteRange":{},"InventoryRetrievalParameters":{"type":"structure","members":{"Format":{},"StartDate":{},"EndDate":{},"Limit":{},"Marker":{}}}}}},"Marker":{}}}},"listMultipartUploads":{"name":"ListMultipartUploads","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads?marker={marker}&limit={limit}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"limit":{"location":"uri"},"marker":{"location":"uri"}}},"output":{"type":"structure","members":{"UploadsList":{"type":"list","members":{"type":"structure","members":{"MultipartUploadId":{},"VaultARN":{},"ArchiveDescription":{},"PartSizeInBytes":{"type":"integer"},"CreationDate":{}}}},"Marker":{}}}},"listParts":{"name":"ListParts","http":{"method":"GET","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}?marker={marker}&limit={limit}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"uploadId":{"location":"uri"},"marker":{"location":"uri"},"limit":{"location":"uri"}}},"output":{"type":"structure","members":{"MultipartUploadId":{},"VaultARN":{},"ArchiveDescription":{},"PartSizeInBytes":{"type":"integer"},"CreationDate":{},"Parts":{"type":"list","members":{"type":"structure","members":{"RangeInBytes":{},"SHA256TreeHash":{}}}},"Marker":{}}}},"listVaults":{"name":"ListVaults","http":{"method":"GET","uri":"/{accountId}/vaults?marker={marker}&limit={limit}"},"input":{"type":"structure","members":{"accountId":{"location":"uri"},"marker":{"location":"uri"},"limit":{"location":"uri"}}},"output":{"type":"structure","members":{"VaultList":{"type":"list","members":{"type":"structure","members":{"VaultARN":{},"VaultName":{},"CreationDate":{},"LastInventoryDate":{},"NumberOfArchives":{"type":"integer"},"SizeInBytes":{"type":"integer"}}}},"Marker":{}}}},"setVaultNotifications":{"name":"SetVaultNotifications","http":{"method":"PUT","uri":"/{accountId}/vaults/{vaultName}/notification-configuration"},"input":{"payload":"vaultNotificationConfig","type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"vaultNotificationConfig":{"type":"structure","members":{"SNSTopic":{},"Events":{"type":"list","members":{}}}}}},"output":{"type":"structure","members":{}}},"uploadArchive":{"name":"UploadArchive","http":{"method":"POST","uri":"/{accountId}/vaults/{vaultName}/archives"},"input":{"payload":"body","type":"structure","members":{"vaultName":{"location":"uri"},"accountId":{"location":"uri"},"archiveDescription":{"location":"header","name":"x-amz-archive-description"},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"},"body":{"type":"binary","streaming":true}}},"output":{"type":"structure","members":{"location":{"location":"header","name":"Location"},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"},"archiveId":{"location":"header","name":"x-amz-archive-id"}}}},"uploadMultipartPart":{"name":"UploadMultipartPart","http":{"method":"PUT","uri":"/{accountId}/vaults/{vaultName}/multipart-uploads/{uploadId}"},"input":{"payload":"body","type":"structure","members":{"accountId":{"location":"uri"},"vaultName":{"location":"uri"},"uploadId":{"location":"uri"},"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"},"range":{"location":"header","name":"Content-Range"},"body":{"type":"binary","streaming":true}}},"output":{"type":"structure","members":{"checksum":{"location":"header","name":"x-amz-sha256-tree-hash"}}}}},"pagination":{"listJobs":{"inputToken":"marker","outputToken":"Marker","limitKey":"limit","resultKey":"JobList"},"listMultipartUploads":{"inputToken":"marker","outputToken":"Marker","limitKey":"limit","resultKey":"UploadsList"},"listParts":{"inputToken":"marker","outputToken":"Marker","limitKey":"limit","resultKey":"Parts"},"listVaults":{"inputToken":"marker","outputToken":"Marker","limitKey":"limit","resultKey":"VaultList"}}});
AWS.Service.defineServiceApi(require("./services/iam"), "2010-05-08", {"format":"query","apiVersion":"2010-05-08","endpointPrefix":"iam","globalEndpoint":"iam.amazonaws.com","resultWrapped":true,"serviceAbbreviation":"IAM","serviceFullName":"AWS Identity and Access Management","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"addRoleToInstanceProfile":{"name":"AddRoleToInstanceProfile","input":{"type":"structure","members":{"InstanceProfileName":{"required":true},"RoleName":{"required":true}}},"output":{"type":"structure","members":{}}},"addUserToGroup":{"name":"AddUserToGroup","input":{"type":"structure","members":{"GroupName":{"required":true},"UserName":{"required":true}}},"output":{"type":"structure","members":{}}},"changePassword":{"name":"ChangePassword","input":{"type":"structure","members":{"OldPassword":{"required":true},"NewPassword":{"required":true}}},"output":{"type":"structure","members":{}}},"createAccessKey":{"name":"CreateAccessKey","input":{"type":"structure","members":{"UserName":{}}},"output":{"type":"structure","members":{"AccessKey":{"type":"structure","members":{"UserName":{},"AccessKeyId":{},"Status":{},"SecretAccessKey":{},"CreateDate":{"type":"timestamp"}}}}}},"createAccountAlias":{"name":"CreateAccountAlias","input":{"type":"structure","members":{"AccountAlias":{"required":true}}},"output":{"type":"structure","members":{}}},"createGroup":{"name":"CreateGroup","input":{"type":"structure","members":{"Path":{},"GroupName":{"required":true}}},"output":{"type":"structure","members":{"Group":{"type":"structure","members":{"Path":{},"GroupName":{},"GroupId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}}}},"createInstanceProfile":{"name":"CreateInstanceProfile","input":{"type":"structure","members":{"InstanceProfileName":{"required":true},"Path":{}}},"output":{"type":"structure","members":{"InstanceProfile":{"type":"structure","members":{"Path":{},"InstanceProfileName":{},"InstanceProfileId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"Roles":{"type":"list","members":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}}}}},"createLoginProfile":{"name":"CreateLoginProfile","input":{"type":"structure","members":{"UserName":{"required":true},"Password":{"required":true}}},"output":{"type":"structure","members":{"LoginProfile":{"type":"structure","members":{"UserName":{},"CreateDate":{"type":"timestamp"}}}}}},"createRole":{"name":"CreateRole","input":{"type":"structure","members":{"Path":{},"RoleName":{"required":true},"AssumeRolePolicyDocument":{"required":true}}},"output":{"type":"structure","members":{"Role":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}},"createSAMLProvider":{"name":"CreateSAMLProvider","input":{"type":"structure","members":{"SAMLMetadataDocument":{"required":true},"Name":{"required":true}}},"output":{"type":"structure","members":{"SAMLProviderArn":{}}}},"createUser":{"name":"CreateUser","input":{"type":"structure","members":{"Path":{},"UserName":{"required":true}}},"output":{"type":"structure","members":{"User":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}}}},"createVirtualMFADevice":{"name":"CreateVirtualMFADevice","input":{"type":"structure","members":{"Path":{},"VirtualMFADeviceName":{"required":true}}},"output":{"type":"structure","members":{"VirtualMFADevice":{"type":"structure","members":{"SerialNumber":{},"Base32StringSeed":{"type":"base64"},"QRCodePNG":{"type":"base64"},"User":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}},"EnableDate":{"type":"timestamp"}}}}}},"deactivateMFADevice":{"name":"DeactivateMFADevice","input":{"type":"structure","members":{"UserName":{"required":true},"SerialNumber":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteAccessKey":{"name":"DeleteAccessKey","input":{"type":"structure","members":{"UserName":{},"AccessKeyId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteAccountAlias":{"name":"DeleteAccountAlias","input":{"type":"structure","members":{"AccountAlias":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteAccountPasswordPolicy":{"name":"DeleteAccountPasswordPolicy","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{}}},"deleteGroup":{"name":"DeleteGroup","input":{"type":"structure","members":{"GroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteGroupPolicy":{"name":"DeleteGroupPolicy","input":{"type":"structure","members":{"GroupName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteInstanceProfile":{"name":"DeleteInstanceProfile","input":{"type":"structure","members":{"InstanceProfileName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteLoginProfile":{"name":"DeleteLoginProfile","input":{"type":"structure","members":{"UserName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteRole":{"name":"DeleteRole","input":{"type":"structure","members":{"RoleName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteRolePolicy":{"name":"DeleteRolePolicy","input":{"type":"structure","members":{"RoleName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteSAMLProvider":{"name":"DeleteSAMLProvider","input":{"type":"structure","members":{"SAMLProviderArn":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteServerCertificate":{"name":"DeleteServerCertificate","input":{"type":"structure","members":{"ServerCertificateName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteSigningCertificate":{"name":"DeleteSigningCertificate","input":{"type":"structure","members":{"UserName":{},"CertificateId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteUser":{"name":"DeleteUser","input":{"type":"structure","members":{"UserName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteUserPolicy":{"name":"DeleteUserPolicy","input":{"type":"structure","members":{"UserName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVirtualMFADevice":{"name":"DeleteVirtualMFADevice","input":{"type":"structure","members":{"SerialNumber":{"required":true}}},"output":{"type":"structure","members":{}}},"enableMFADevice":{"name":"EnableMFADevice","input":{"type":"structure","members":{"UserName":{"required":true},"SerialNumber":{"required":true},"AuthenticationCode1":{"required":true},"AuthenticationCode2":{"required":true}}},"output":{"type":"structure","members":{}}},"getAccountPasswordPolicy":{"name":"GetAccountPasswordPolicy","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"PasswordPolicy":{"type":"structure","members":{"MinimumPasswordLength":{"type":"integer"},"RequireSymbols":{"type":"boolean"},"RequireNumbers":{"type":"boolean"},"RequireUppercaseCharacters":{"type":"boolean"},"RequireLowercaseCharacters":{"type":"boolean"},"AllowUsersToChangePassword":{"type":"boolean"},"ExpirePasswords":{"type":"boolean"},"MaxPasswordAge":{"type":"integer"}}}}}},"getAccountSummary":{"name":"GetAccountSummary","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"SummaryMap":{"type":"map","keys":{},"members":{"type":"integer"}}}}},"getGroup":{"name":"GetGroup","input":{"type":"structure","members":{"GroupName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Group":{"type":"structure","members":{"Path":{},"GroupName":{},"GroupId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}},"Users":{"type":"list","members":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"getGroupPolicy":{"name":"GetGroupPolicy","input":{"type":"structure","members":{"GroupName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{"GroupName":{},"PolicyName":{},"PolicyDocument":{}}}},"getInstanceProfile":{"name":"GetInstanceProfile","input":{"type":"structure","members":{"InstanceProfileName":{"required":true}}},"output":{"type":"structure","members":{"InstanceProfile":{"type":"structure","members":{"Path":{},"InstanceProfileName":{},"InstanceProfileId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"Roles":{"type":"list","members":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}}}}},"getLoginProfile":{"name":"GetLoginProfile","input":{"type":"structure","members":{"UserName":{"required":true}}},"output":{"type":"structure","members":{"LoginProfile":{"type":"structure","members":{"UserName":{},"CreateDate":{"type":"timestamp"}}}}}},"getRole":{"name":"GetRole","input":{"type":"structure","members":{"RoleName":{"required":true}}},"output":{"type":"structure","members":{"Role":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}},"getRolePolicy":{"name":"GetRolePolicy","input":{"type":"structure","members":{"RoleName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{"RoleName":{},"PolicyName":{},"PolicyDocument":{}}}},"getSAMLProvider":{"name":"GetSAMLProvider","input":{"type":"structure","members":{"SAMLProviderArn":{"required":true}}},"output":{"type":"structure","members":{"SAMLMetadataDocument":{},"CreateDate":{"type":"timestamp"},"ValidUntil":{"type":"timestamp"}}}},"getServerCertificate":{"name":"GetServerCertificate","input":{"type":"structure","members":{"ServerCertificateName":{"required":true}}},"output":{"type":"structure","members":{"ServerCertificate":{"type":"structure","members":{"ServerCertificateMetadata":{"type":"structure","members":{"Path":{},"ServerCertificateName":{},"ServerCertificateId":{},"Arn":{},"UploadDate":{"type":"timestamp"}}},"CertificateBody":{},"CertificateChain":{}}}}}},"getUser":{"name":"GetUser","input":{"type":"structure","members":{"UserName":{}}},"output":{"type":"structure","members":{"User":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}}}},"getUserPolicy":{"name":"GetUserPolicy","input":{"type":"structure","members":{"UserName":{"required":true},"PolicyName":{"required":true}}},"output":{"type":"structure","members":{"UserName":{},"PolicyName":{},"PolicyDocument":{}}}},"listAccessKeys":{"name":"ListAccessKeys","input":{"type":"structure","members":{"UserName":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"AccessKeyMetadata":{"type":"list","members":{"type":"structure","members":{"UserName":{},"AccessKeyId":{},"Status":{},"CreateDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listAccountAliases":{"name":"ListAccountAliases","input":{"type":"structure","members":{"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"AccountAliases":{"type":"list","members":{}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listGroupPolicies":{"name":"ListGroupPolicies","input":{"type":"structure","members":{"GroupName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"PolicyNames":{"type":"list","members":{}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listGroups":{"name":"ListGroups","input":{"type":"structure","members":{"PathPrefix":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Groups":{"type":"list","members":{"type":"structure","members":{"Path":{},"GroupName":{},"GroupId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listGroupsForUser":{"name":"ListGroupsForUser","input":{"type":"structure","members":{"UserName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Groups":{"type":"list","members":{"type":"structure","members":{"Path":{},"GroupName":{},"GroupId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listInstanceProfiles":{"name":"ListInstanceProfiles","input":{"type":"structure","members":{"PathPrefix":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"InstanceProfiles":{"type":"list","members":{"type":"structure","members":{"Path":{},"InstanceProfileName":{},"InstanceProfileId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"Roles":{"type":"list","members":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listInstanceProfilesForRole":{"name":"ListInstanceProfilesForRole","input":{"type":"structure","members":{"RoleName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"InstanceProfiles":{"type":"list","members":{"type":"structure","members":{"Path":{},"InstanceProfileName":{},"InstanceProfileId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"Roles":{"type":"list","members":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listMFADevices":{"name":"ListMFADevices","input":{"type":"structure","members":{"UserName":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"MFADevices":{"type":"list","members":{"type":"structure","members":{"UserName":{},"SerialNumber":{},"EnableDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listRolePolicies":{"name":"ListRolePolicies","input":{"type":"structure","members":{"RoleName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"PolicyNames":{"type":"list","members":{}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listRoles":{"name":"ListRoles","input":{"type":"structure","members":{"PathPrefix":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Roles":{"type":"list","members":{"type":"structure","members":{"Path":{},"RoleName":{},"RoleId":{},"Arn":{},"CreateDate":{"type":"timestamp"},"AssumeRolePolicyDocument":{}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listSAMLProviders":{"name":"ListSAMLProviders","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"SAMLProviderList":{"type":"list","members":{"type":"structure","members":{"Arn":{},"ValidUntil":{"type":"timestamp"},"CreateDate":{"type":"timestamp"}}}}}}},"listServerCertificates":{"name":"ListServerCertificates","input":{"type":"structure","members":{"PathPrefix":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"ServerCertificateMetadataList":{"type":"list","members":{"type":"structure","members":{"Path":{},"ServerCertificateName":{},"ServerCertificateId":{},"Arn":{},"UploadDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listSigningCertificates":{"name":"ListSigningCertificates","input":{"type":"structure","members":{"UserName":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Certificates":{"type":"list","members":{"type":"structure","members":{"UserName":{},"CertificateId":{},"CertificateBody":{},"Status":{},"UploadDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listUserPolicies":{"name":"ListUserPolicies","input":{"type":"structure","members":{"UserName":{"required":true},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"PolicyNames":{"type":"list","members":{}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listUsers":{"name":"ListUsers","input":{"type":"structure","members":{"PathPrefix":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Users":{"type":"list","members":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"listVirtualMFADevices":{"name":"ListVirtualMFADevices","input":{"type":"structure","members":{"AssignmentStatus":{},"Marker":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"VirtualMFADevices":{"type":"list","members":{"type":"structure","members":{"SerialNumber":{},"Base32StringSeed":{"type":"base64"},"QRCodePNG":{"type":"base64"},"User":{"type":"structure","members":{"Path":{},"UserName":{},"UserId":{},"Arn":{},"CreateDate":{"type":"timestamp"}}},"EnableDate":{"type":"timestamp"}}}},"IsTruncated":{"type":"boolean"},"Marker":{}}}},"putGroupPolicy":{"name":"PutGroupPolicy","input":{"type":"structure","members":{"GroupName":{"required":true},"PolicyName":{"required":true},"PolicyDocument":{"required":true}}},"output":{"type":"structure","members":{}}},"putRolePolicy":{"name":"PutRolePolicy","input":{"type":"structure","members":{"RoleName":{"required":true},"PolicyName":{"required":true},"PolicyDocument":{"required":true}}},"output":{"type":"structure","members":{}}},"putUserPolicy":{"name":"PutUserPolicy","input":{"type":"structure","members":{"UserName":{"required":true},"PolicyName":{"required":true},"PolicyDocument":{"required":true}}},"output":{"type":"structure","members":{}}},"removeRoleFromInstanceProfile":{"name":"RemoveRoleFromInstanceProfile","input":{"type":"structure","members":{"InstanceProfileName":{"required":true},"RoleName":{"required":true}}},"output":{"type":"structure","members":{}}},"removeUserFromGroup":{"name":"RemoveUserFromGroup","input":{"type":"structure","members":{"GroupName":{"required":true},"UserName":{"required":true}}},"output":{"type":"structure","members":{}}},"resyncMFADevice":{"name":"ResyncMFADevice","input":{"type":"structure","members":{"UserName":{"required":true},"SerialNumber":{"required":true},"AuthenticationCode1":{"required":true},"AuthenticationCode2":{"required":true}}},"output":{"type":"structure","members":{}}},"updateAccessKey":{"name":"UpdateAccessKey","input":{"type":"structure","members":{"UserName":{},"AccessKeyId":{"required":true},"Status":{"required":true}}},"output":{"type":"structure","members":{}}},"updateAccountPasswordPolicy":{"name":"UpdateAccountPasswordPolicy","input":{"type":"structure","members":{"MinimumPasswordLength":{"type":"integer"},"RequireSymbols":{"type":"boolean"},"RequireNumbers":{"type":"boolean"},"RequireUppercaseCharacters":{"type":"boolean"},"RequireLowercaseCharacters":{"type":"boolean"},"AllowUsersToChangePassword":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"updateAssumeRolePolicy":{"name":"UpdateAssumeRolePolicy","input":{"type":"structure","members":{"RoleName":{"required":true},"PolicyDocument":{"required":true}}},"output":{"type":"structure","members":{}}},"updateGroup":{"name":"UpdateGroup","input":{"type":"structure","members":{"GroupName":{"required":true},"NewPath":{},"NewGroupName":{}}},"output":{"type":"structure","members":{}}},"updateLoginProfile":{"name":"UpdateLoginProfile","input":{"type":"structure","members":{"UserName":{"required":true},"Password":{"required":true}}},"output":{"type":"structure","members":{}}},"updateSAMLProvider":{"name":"UpdateSAMLProvider","input":{"type":"structure","members":{"SAMLMetadataDocument":{"required":true},"SAMLProviderArn":{"required":true}}},"output":{"type":"structure","members":{"SAMLProviderArn":{}}}},"updateServerCertificate":{"name":"UpdateServerCertificate","input":{"type":"structure","members":{"ServerCertificateName":{"required":true},"NewPath":{},"NewServerCertificateName":{}}},"output":{"type":"structure","members":{}}},"updateSigningCertificate":{"name":"UpdateSigningCertificate","input":{"type":"structure","members":{"UserName":{},"CertificateId":{"required":true},"Status":{"required":true}}},"output":{"type":"structure","members":{}}},"updateUser":{"name":"UpdateUser","input":{"type":"structure","members":{"UserName":{"required":true},"NewPath":{},"NewUserName":{}}},"output":{"type":"structure","members":{}}},"uploadServerCertificate":{"name":"UploadServerCertificate","input":{"type":"structure","members":{"Path":{},"ServerCertificateName":{"required":true},"CertificateBody":{"required":true},"PrivateKey":{"required":true},"CertificateChain":{}}},"output":{"type":"structure","members":{"ServerCertificateMetadata":{"type":"structure","members":{"Path":{},"ServerCertificateName":{},"ServerCertificateId":{},"Arn":{},"UploadDate":{"type":"timestamp"}}}}}},"uploadSigningCertificate":{"name":"UploadSigningCertificate","input":{"type":"structure","members":{"UserName":{},"CertificateBody":{"required":true}}},"output":{"type":"structure","members":{"Certificate":{"type":"structure","members":{"UserName":{},"CertificateId":{},"CertificateBody":{},"Status":{},"UploadDate":{"type":"timestamp"}}}}}}},"pagination":{"getGroup":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Users"},"listAccessKeys":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"AccessKeyMetadata"},"listAccountAliases":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"AccountAliases"},"listGroupPolicies":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"PolicyNames"},"listGroups":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Groups"},"listGroupsForUser":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Groups"},"listInstanceProfiles":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"InstanceProfiles"},"listInstanceProfilesForRole":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"InstanceProfiles"},"listMFADevices":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"MFADevices"},"listRolePolicies":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"PolicyNames"},"listRoles":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Roles"},"listSAMLProviders":{"resultKey":"SAMLProviderList"},"listServerCertificates":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"ServerCertificateMetadataList"},"listSigningCertificates":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Certificates"},"listUserPolicies":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"PolicyNames"},"listUsers":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"Users"},"listVirtualMFADevices":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"VirtualMFADevices"}}});
AWS.Service.defineServiceApi(require("./services/importexport"), "2010-06-01", {"format":"query","apiVersion":"2010-06-01","endpointPrefix":"importexport","globalEndpoint":"importexport.amazonaws.com","resultWrapped":true,"serviceFullName":"AWS Import/Export","signatureVersion":"v2","timestampFormat":"iso8601","operations":{"cancelJob":{"name":"CancelJob","http":{"method":"POST","uri":"/?Operation=CancelJob"},"input":{"type":"structure","members":{"JobId":{"required":true}}},"output":{"type":"structure","members":{"Success":{"type":"boolean"}}}},"createJob":{"name":"CreateJob","http":{"method":"POST","uri":"/?Operation=CreateJob"},"input":{"type":"structure","members":{"JobType":{"required":true},"Manifest":{"required":true},"ManifestAddendum":{},"ValidateOnly":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{"JobId":{},"JobType":{},"AwsShippingAddress":{},"Signature":{},"SignatureFileContents":{},"WarningMessage":{}}}},"getStatus":{"name":"GetStatus","http":{"method":"POST","uri":"/?Operation=GetStatus"},"input":{"type":"structure","members":{"JobId":{"required":true}}},"output":{"type":"structure","members":{"JobId":{},"JobType":{},"AwsShippingAddress":{},"LocationCode":{},"LocationMessage":{},"ProgressCode":{},"ProgressMessage":{},"Carrier":{},"TrackingNumber":{},"LogBucket":{},"LogKey":{},"ErrorCount":{"type":"integer"},"Signature":{},"SignatureFileContents":{},"CurrentManifest":{},"CreationDate":{"type":"timestamp"}}}},"listJobs":{"name":"ListJobs","http":{"method":"POST","uri":"/?Operation=ListJobs"},"input":{"type":"structure","members":{"MaxJobs":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Jobs":{"type":"list","members":{"type":"structure","members":{"JobId":{},"CreationDate":{"type":"timestamp"},"IsCanceled":{"type":"boolean"},"JobType":{}}}},"IsTruncated":{"type":"boolean"}}}},"updateJob":{"name":"UpdateJob","http":{"method":"POST","uri":"/?Operation=UpdateJob"},"input":{"type":"structure","members":{"JobId":{"required":true},"Manifest":{"required":true},"JobType":{"required":true},"ValidateOnly":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{"Success":{"type":"boolean"},"WarningMessage":{}}}}},"pagination":{"listJobs":{"inputToken":"Marker","outputToken":"Jobs[-1].JobId","moreResults":"IsTruncated","limitKey":"MaxJobs","resultKey":"Jobs"}}});
AWS.Service.defineServiceApi(require("./services/kinesis"), "2013-12-02", {"format":"json","apiVersion":"2013-12-02","endpointPrefix":"kinesis","jsonVersion":"1.1","serviceAbbreviation":"Kinesis","serviceFullName":"Amazon Kinesis","signatureVersion":"v4","targetPrefix":"Kinesis_20131202","timestampFormat":"iso8601","operations":{"createStream":{"name":"CreateStream","input":{"type":"structure","members":{"StreamName":{"required":true},"ShardCount":{"type":"integer","required":true}}},"output":{"type":"structure","members":{}}},"deleteStream":{"name":"DeleteStream","input":{"type":"structure","members":{"StreamName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeStream":{"name":"DescribeStream","input":{"type":"structure","members":{"StreamName":{"required":true},"Limit":{"type":"integer"},"ExclusiveStartShardId":{}}},"output":{"type":"structure","members":{"StreamDescription":{"type":"structure","members":{"StreamName":{},"StreamARN":{},"StreamStatus":{},"Shards":{"type":"list","members":{"type":"structure","members":{"ShardId":{},"ParentShardId":{},"AdjacentParentShardId":{},"HashKeyRange":{"type":"structure","members":{"StartingHashKey":{},"EndingHashKey":{}}},"SequenceNumberRange":{"type":"structure","members":{"StartingSequenceNumber":{},"EndingSequenceNumber":{}}}}}},"HasMoreShards":{"type":"boolean"}}}}}},"getRecords":{"name":"GetRecords","input":{"type":"structure","members":{"ShardIterator":{"required":true},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"Records":{"type":"list","members":{"type":"structure","members":{"SequenceNumber":{},"Data":{"type":"base64"},"PartitionKey":{}}}},"NextShardIterator":{}}}},"getShardIterator":{"name":"GetShardIterator","input":{"type":"structure","members":{"StreamName":{"required":true},"ShardId":{"required":true},"ShardIteratorType":{"required":true},"StartingSequenceNumber":{}}},"output":{"type":"structure","members":{"ShardIterator":{}}}},"listStreams":{"name":"ListStreams","input":{"type":"structure","members":{"Limit":{"type":"integer"},"ExclusiveStartStreamName":{}}},"output":{"type":"structure","members":{"StreamNames":{"type":"list","members":{}},"HasMoreStreams":{"type":"boolean"}}}},"mergeShards":{"name":"MergeShards","input":{"type":"structure","members":{"StreamName":{"required":true},"ShardToMerge":{"required":true},"AdjacentShardToMerge":{"required":true}}},"output":{"type":"structure","members":{}}},"putRecord":{"name":"PutRecord","input":{"type":"structure","members":{"StreamName":{"required":true},"Data":{"type":"base64","required":true},"PartitionKey":{"required":true},"ExplicitHashKey":{},"SequenceNumberForOrdering":{}}},"output":{"type":"structure","members":{"ShardId":{},"SequenceNumber":{}}}},"splitShard":{"name":"SplitShard","input":{"type":"structure","members":{"StreamName":{"required":true},"ShardToSplit":{"required":true},"NewStartingHashKey":{"required":true}}},"output":{"type":"structure","members":{}}}}});
AWS.Service.defineServiceApi(require("./services/opsworks"), "2013-02-18", {"format":"json","apiVersion":"2013-02-18","endpointPrefix":"opsworks","jsonVersion":"1.1","serviceFullName":"AWS OpsWorks","signatureVersion":"v4","targetPrefix":"OpsWorks_20130218","timestampFormat":"iso8601","operations":{"assignVolume":{"name":"AssignVolume","input":{"type":"structure","members":{"VolumeId":{"required":true},"InstanceId":{}}},"output":{"type":"structure","members":{}}},"associateElasticIp":{"name":"AssociateElasticIp","input":{"type":"structure","members":{"ElasticIp":{"required":true},"InstanceId":{}}},"output":{"type":"structure","members":{}}},"attachElasticLoadBalancer":{"name":"AttachElasticLoadBalancer","input":{"type":"structure","members":{"ElasticLoadBalancerName":{"required":true},"LayerId":{"required":true}}},"output":{"type":"structure","members":{}}},"cloneStack":{"name":"CloneStack","input":{"type":"structure","members":{"SourceStackId":{"required":true},"Name":{},"Region":{},"VpcId":{},"Attributes":{"type":"map","keys":{},"members":{}},"ServiceRoleArn":{"required":true},"DefaultInstanceProfileArn":{},"DefaultOs":{},"HostnameTheme":{},"DefaultAvailabilityZone":{},"DefaultSubnetId":{},"CustomJson":{},"ConfigurationManager":{"type":"structure","members":{"Name":{},"Version":{}}},"UseCustomCookbooks":{"type":"boolean"},"CustomCookbooksSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"DefaultSshKeyName":{},"ClonePermissions":{"type":"boolean"},"CloneAppIds":{"type":"list","members":{}},"DefaultRootDeviceType":{}}},"output":{"type":"structure","members":{"StackId":{}}}},"createApp":{"name":"CreateApp","input":{"type":"structure","members":{"StackId":{"required":true},"Shortname":{},"Name":{"required":true},"Description":{},"Type":{"required":true},"AppSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"Domains":{"type":"list","members":{}},"EnableSsl":{"type":"boolean"},"SslConfiguration":{"type":"structure","members":{"Certificate":{"required":true},"PrivateKey":{"required":true},"Chain":{}}},"Attributes":{"type":"map","keys":{},"members":{}}}},"output":{"type":"structure","members":{"AppId":{}}}},"createDeployment":{"name":"CreateDeployment","input":{"type":"structure","members":{"StackId":{"required":true},"AppId":{},"InstanceIds":{"type":"list","members":{}},"Command":{"type":"structure","members":{"Name":{"required":true},"Args":{"type":"map","keys":{},"members":{"type":"list","members":{}}}},"required":true},"Comment":{},"CustomJson":{}}},"output":{"type":"structure","members":{"DeploymentId":{}}}},"createInstance":{"name":"CreateInstance","input":{"type":"structure","members":{"StackId":{"required":true},"LayerIds":{"type":"list","members":{},"required":true},"InstanceType":{"required":true},"AutoScalingType":{},"Hostname":{},"Os":{},"AmiId":{},"SshKeyName":{},"AvailabilityZone":{},"SubnetId":{},"Architecture":{},"RootDeviceType":{},"InstallUpdatesOnBoot":{"type":"boolean"}}},"output":{"type":"structure","members":{"InstanceId":{}}}},"createLayer":{"name":"CreateLayer","input":{"type":"structure","members":{"StackId":{"required":true},"Type":{"required":true},"Name":{"required":true},"Shortname":{"required":true},"Attributes":{"type":"map","keys":{},"members":{}},"CustomInstanceProfileArn":{},"CustomSecurityGroupIds":{"type":"list","members":{}},"Packages":{"type":"list","members":{}},"VolumeConfigurations":{"type":"list","members":{"type":"structure","members":{"MountPoint":{"required":true},"RaidLevel":{"type":"integer"},"NumberOfDisks":{"type":"integer","required":true},"Size":{"type":"integer","required":true}}}},"EnableAutoHealing":{"type":"boolean"},"AutoAssignElasticIps":{"type":"boolean"},"AutoAssignPublicIps":{"type":"boolean"},"CustomRecipes":{"type":"structure","members":{"Setup":{"type":"list","members":{}},"Configure":{"type":"list","members":{}},"Deploy":{"type":"list","members":{}},"Undeploy":{"type":"list","members":{}},"Shutdown":{"type":"list","members":{}}}},"InstallUpdatesOnBoot":{"type":"boolean"}}},"output":{"type":"structure","members":{"LayerId":{}}}},"createStack":{"name":"CreateStack","input":{"type":"structure","members":{"Name":{"required":true},"Region":{"required":true},"VpcId":{},"Attributes":{"type":"map","keys":{},"members":{}},"ServiceRoleArn":{"required":true},"DefaultInstanceProfileArn":{"required":true},"DefaultOs":{},"HostnameTheme":{},"DefaultAvailabilityZone":{},"DefaultSubnetId":{},"CustomJson":{},"ConfigurationManager":{"type":"structure","members":{"Name":{},"Version":{}}},"UseCustomCookbooks":{"type":"boolean"},"CustomCookbooksSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"DefaultSshKeyName":{},"DefaultRootDeviceType":{}}},"output":{"type":"structure","members":{"StackId":{}}}},"createUserProfile":{"name":"CreateUserProfile","input":{"type":"structure","members":{"IamUserArn":{"required":true},"SshUsername":{},"SshPublicKey":{},"AllowSelfManagement":{"type":"boolean"}}},"output":{"type":"structure","members":{"IamUserArn":{}}}},"deleteApp":{"name":"DeleteApp","input":{"type":"structure","members":{"AppId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteInstance":{"name":"DeleteInstance","input":{"type":"structure","members":{"InstanceId":{"required":true},"DeleteElasticIp":{"type":"boolean"},"DeleteVolumes":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"deleteLayer":{"name":"DeleteLayer","input":{"type":"structure","members":{"LayerId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteStack":{"name":"DeleteStack","input":{"type":"structure","members":{"StackId":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteUserProfile":{"name":"DeleteUserProfile","input":{"type":"structure","members":{"IamUserArn":{"required":true}}},"output":{"type":"structure","members":{}}},"deregisterElasticIp":{"name":"DeregisterElasticIp","input":{"type":"structure","members":{"ElasticIp":{"required":true}}},"output":{"type":"structure","members":{}}},"deregisterVolume":{"name":"DeregisterVolume","input":{"type":"structure","members":{"VolumeId":{"required":true}}},"output":{"type":"structure","members":{}}},"describeApps":{"name":"DescribeApps","input":{"type":"structure","members":{"StackId":{},"AppIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Apps":{"type":"list","members":{"type":"structure","members":{"AppId":{},"StackId":{},"Shortname":{},"Name":{},"Description":{},"Type":{},"AppSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"Domains":{"type":"list","members":{}},"EnableSsl":{"type":"boolean"},"SslConfiguration":{"type":"structure","members":{"Certificate":{},"PrivateKey":{},"Chain":{}}},"Attributes":{"type":"map","keys":{},"members":{}},"CreatedAt":{}}}}}}},"describeCommands":{"name":"DescribeCommands","input":{"type":"structure","members":{"DeploymentId":{},"InstanceId":{},"CommandIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Commands":{"type":"list","members":{"type":"structure","members":{"CommandId":{},"InstanceId":{},"DeploymentId":{},"CreatedAt":{},"AcknowledgedAt":{},"CompletedAt":{},"Status":{},"ExitCode":{"type":"integer"},"LogUrl":{},"Type":{}}}}}}},"describeDeployments":{"name":"DescribeDeployments","input":{"type":"structure","members":{"StackId":{},"AppId":{},"DeploymentIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Deployments":{"type":"list","members":{"type":"structure","members":{"DeploymentId":{},"StackId":{},"AppId":{},"CreatedAt":{},"CompletedAt":{},"Duration":{"type":"integer"},"IamUserArn":{},"Comment":{},"Command":{"type":"structure","members":{"Name":{},"Args":{"type":"map","keys":{},"members":{"type":"list","members":{}}}}},"Status":{},"CustomJson":{},"InstanceIds":{"type":"list","members":{}}}}}}}},"describeElasticIps":{"name":"DescribeElasticIps","input":{"type":"structure","members":{"InstanceId":{},"StackId":{},"Ips":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"ElasticIps":{"type":"list","members":{"type":"structure","members":{"Ip":{},"Name":{},"Domain":{},"Region":{},"InstanceId":{}}}}}}},"describeElasticLoadBalancers":{"name":"DescribeElasticLoadBalancers","input":{"type":"structure","members":{"StackId":{},"LayerIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"ElasticLoadBalancers":{"type":"list","members":{"type":"structure","members":{"ElasticLoadBalancerName":{},"Region":{},"DnsName":{},"StackId":{},"LayerId":{},"VpcId":{},"AvailabilityZones":{"type":"list","members":{}},"SubnetIds":{"type":"list","members":{}},"Ec2InstanceIds":{"type":"list","members":{}}}}}}}},"describeInstances":{"name":"DescribeInstances","input":{"type":"structure","members":{"StackId":{},"LayerId":{},"InstanceIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Instances":{"type":"list","members":{"type":"structure","members":{"InstanceId":{},"Ec2InstanceId":{},"Hostname":{},"StackId":{},"LayerIds":{"type":"list","members":{}},"SecurityGroupIds":{"type":"list","members":{}},"InstanceType":{},"InstanceProfileArn":{},"Status":{},"Os":{},"AmiId":{},"AvailabilityZone":{},"SubnetId":{},"PublicDns":{},"PrivateDns":{},"PublicIp":{},"PrivateIp":{},"ElasticIp":{},"AutoScalingType":{},"SshKeyName":{},"SshHostRsaKeyFingerprint":{},"SshHostDsaKeyFingerprint":{},"CreatedAt":{},"LastServiceErrorId":{},"Architecture":{},"RootDeviceType":{},"RootDeviceVolumeId":{},"InstallUpdatesOnBoot":{"type":"boolean"}}}}}}},"describeLayers":{"name":"DescribeLayers","input":{"type":"structure","members":{"StackId":{},"LayerIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Layers":{"type":"list","members":{"type":"structure","members":{"StackId":{},"LayerId":{},"Type":{},"Name":{},"Shortname":{},"Attributes":{"type":"map","keys":{},"members":{}},"CustomInstanceProfileArn":{},"CustomSecurityGroupIds":{"type":"list","members":{}},"DefaultSecurityGroupNames":{"type":"list","members":{}},"Packages":{"type":"list","members":{}},"VolumeConfigurations":{"type":"list","members":{"type":"structure","members":{"MountPoint":{},"RaidLevel":{"type":"integer"},"NumberOfDisks":{"type":"integer"},"Size":{"type":"integer"}}}},"EnableAutoHealing":{"type":"boolean"},"AutoAssignElasticIps":{"type":"boolean"},"AutoAssignPublicIps":{"type":"boolean"},"DefaultRecipes":{"type":"structure","members":{"Setup":{"type":"list","members":{}},"Configure":{"type":"list","members":{}},"Deploy":{"type":"list","members":{}},"Undeploy":{"type":"list","members":{}},"Shutdown":{"type":"list","members":{}}}},"CustomRecipes":{"type":"structure","members":{"Setup":{"type":"list","members":{}},"Configure":{"type":"list","members":{}},"Deploy":{"type":"list","members":{}},"Undeploy":{"type":"list","members":{}},"Shutdown":{"type":"list","members":{}}}},"CreatedAt":{},"InstallUpdatesOnBoot":{"type":"boolean"}}}}}}},"describeLoadBasedAutoScaling":{"name":"DescribeLoadBasedAutoScaling","input":{"type":"structure","members":{"LayerIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"LoadBasedAutoScalingConfigurations":{"type":"list","members":{"type":"structure","members":{"LayerId":{},"Enable":{"type":"boolean"},"UpScaling":{"type":"structure","members":{"InstanceCount":{"type":"integer"},"ThresholdsWaitTime":{"type":"integer"},"IgnoreMetricsTime":{"type":"integer"},"CpuThreshold":{"type":"float"},"MemoryThreshold":{"type":"float"},"LoadThreshold":{"type":"float"}}},"DownScaling":{"type":"structure","members":{"InstanceCount":{"type":"integer"},"ThresholdsWaitTime":{"type":"integer"},"IgnoreMetricsTime":{"type":"integer"},"CpuThreshold":{"type":"float"},"MemoryThreshold":{"type":"float"},"LoadThreshold":{"type":"float"}}}}}}}}},"describeMyUserProfile":{"name":"DescribeMyUserProfile","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"UserProfile":{"type":"structure","members":{"IamUserArn":{},"Name":{},"SshUsername":{},"SshPublicKey":{}}}}}},"describePermissions":{"name":"DescribePermissions","input":{"type":"structure","members":{"IamUserArn":{},"StackId":{}}},"output":{"type":"structure","members":{"Permissions":{"type":"list","members":{"type":"structure","members":{"StackId":{},"IamUserArn":{},"AllowSsh":{"type":"boolean"},"AllowSudo":{"type":"boolean"},"Level":{}}}}}}},"describeRaidArrays":{"name":"DescribeRaidArrays","input":{"type":"structure","members":{"InstanceId":{},"RaidArrayIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"RaidArrays":{"type":"list","members":{"type":"structure","members":{"RaidArrayId":{},"InstanceId":{},"Name":{},"RaidLevel":{"type":"integer"},"NumberOfDisks":{"type":"integer"},"Size":{"type":"integer"},"Device":{},"MountPoint":{},"AvailabilityZone":{},"CreatedAt":{}}}}}}},"describeServiceErrors":{"name":"DescribeServiceErrors","input":{"type":"structure","members":{"StackId":{},"InstanceId":{},"ServiceErrorIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"ServiceErrors":{"type":"list","members":{"type":"structure","members":{"ServiceErrorId":{},"StackId":{},"InstanceId":{},"Type":{},"Message":{},"CreatedAt":{}}}}}}},"describeStackSummary":{"name":"DescribeStackSummary","input":{"type":"structure","members":{"StackId":{"required":true}}},"output":{"type":"structure","members":{"StackSummary":{"type":"structure","members":{"StackId":{},"Name":{},"LayersCount":{"type":"integer"},"AppsCount":{"type":"integer"},"InstancesCount":{"type":"structure","members":{"Booting":{"type":"integer"},"ConnectionLost":{"type":"integer"},"Pending":{"type":"integer"},"Rebooting":{"type":"integer"},"Requested":{"type":"integer"},"RunningSetup":{"type":"integer"},"SetupFailed":{"type":"integer"},"ShuttingDown":{"type":"integer"},"StartFailed":{"type":"integer"},"Stopped":{"type":"integer"},"Terminated":{"type":"integer"},"Terminating":{"type":"integer"}}}}}}}},"describeStacks":{"name":"DescribeStacks","input":{"type":"structure","members":{"StackIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Stacks":{"type":"list","members":{"type":"structure","members":{"StackId":{},"Name":{},"Region":{},"VpcId":{},"Attributes":{"type":"map","keys":{},"members":{}},"ServiceRoleArn":{},"DefaultInstanceProfileArn":{},"DefaultOs":{},"HostnameTheme":{},"DefaultAvailabilityZone":{},"DefaultSubnetId":{},"CustomJson":{},"ConfigurationManager":{"type":"structure","members":{"Name":{},"Version":{}}},"UseCustomCookbooks":{"type":"boolean"},"CustomCookbooksSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"DefaultSshKeyName":{},"CreatedAt":{},"DefaultRootDeviceType":{}}}}}}},"describeTimeBasedAutoScaling":{"name":"DescribeTimeBasedAutoScaling","input":{"type":"structure","members":{"InstanceIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"TimeBasedAutoScalingConfigurations":{"type":"list","members":{"type":"structure","members":{"InstanceId":{},"AutoScalingSchedule":{"type":"structure","members":{"Monday":{"type":"map","keys":{},"members":{}},"Tuesday":{"type":"map","keys":{},"members":{}},"Wednesday":{"type":"map","keys":{},"members":{}},"Thursday":{"type":"map","keys":{},"members":{}},"Friday":{"type":"map","keys":{},"members":{}},"Saturday":{"type":"map","keys":{},"members":{}},"Sunday":{"type":"map","keys":{},"members":{}}}}}}}}}},"describeUserProfiles":{"name":"DescribeUserProfiles","input":{"type":"structure","members":{"IamUserArns":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"UserProfiles":{"type":"list","members":{"type":"structure","members":{"IamUserArn":{},"Name":{},"SshUsername":{},"SshPublicKey":{},"AllowSelfManagement":{"type":"boolean"}}}}}}},"describeVolumes":{"name":"DescribeVolumes","input":{"type":"structure","members":{"InstanceId":{},"StackId":{},"RaidArrayId":{},"VolumeIds":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"Volumes":{"type":"list","members":{"type":"structure","members":{"VolumeId":{},"Ec2VolumeId":{},"Name":{},"RaidArrayId":{},"InstanceId":{},"Status":{},"Size":{"type":"integer"},"Device":{},"MountPoint":{},"Region":{},"AvailabilityZone":{}}}}}}},"detachElasticLoadBalancer":{"name":"DetachElasticLoadBalancer","input":{"type":"structure","members":{"ElasticLoadBalancerName":{"required":true},"LayerId":{"required":true}}},"output":{"type":"structure","members":{}}},"disassociateElasticIp":{"name":"DisassociateElasticIp","input":{"type":"structure","members":{"ElasticIp":{"required":true}}},"output":{"type":"structure","members":{}}},"getHostnameSuggestion":{"name":"GetHostnameSuggestion","input":{"type":"structure","members":{"LayerId":{"required":true}}},"output":{"type":"structure","members":{"LayerId":{},"Hostname":{}}}},"rebootInstance":{"name":"RebootInstance","input":{"type":"structure","members":{"InstanceId":{"required":true}}},"output":{"type":"structure","members":{}}},"registerElasticIp":{"name":"RegisterElasticIp","input":{"type":"structure","members":{"ElasticIp":{"required":true},"StackId":{"required":true}}},"output":{"type":"structure","members":{"ElasticIp":{}}}},"registerVolume":{"name":"RegisterVolume","input":{"type":"structure","members":{"Ec2VolumeId":{},"StackId":{"required":true}}},"output":{"type":"structure","members":{"VolumeId":{}}}},"setLoadBasedAutoScaling":{"name":"SetLoadBasedAutoScaling","input":{"type":"structure","members":{"LayerId":{"required":true},"Enable":{"type":"boolean"},"UpScaling":{"type":"structure","members":{"InstanceCount":{"type":"integer"},"ThresholdsWaitTime":{"type":"integer"},"IgnoreMetricsTime":{"type":"integer"},"CpuThreshold":{"type":"float"},"MemoryThreshold":{"type":"float"},"LoadThreshold":{"type":"float"}}},"DownScaling":{"type":"structure","members":{"InstanceCount":{"type":"integer"},"ThresholdsWaitTime":{"type":"integer"},"IgnoreMetricsTime":{"type":"integer"},"CpuThreshold":{"type":"float"},"MemoryThreshold":{"type":"float"},"LoadThreshold":{"type":"float"}}}}},"output":{"type":"structure","members":{}}},"setPermission":{"name":"SetPermission","input":{"type":"structure","members":{"StackId":{"required":true},"IamUserArn":{"required":true},"AllowSsh":{"type":"boolean"},"AllowSudo":{"type":"boolean"},"Level":{}}},"output":{"type":"structure","members":{}}},"setTimeBasedAutoScaling":{"name":"SetTimeBasedAutoScaling","input":{"type":"structure","members":{"InstanceId":{"required":true},"AutoScalingSchedule":{"type":"structure","members":{"Monday":{"type":"map","keys":{},"members":{}},"Tuesday":{"type":"map","keys":{},"members":{}},"Wednesday":{"type":"map","keys":{},"members":{}},"Thursday":{"type":"map","keys":{},"members":{}},"Friday":{"type":"map","keys":{},"members":{}},"Saturday":{"type":"map","keys":{},"members":{}},"Sunday":{"type":"map","keys":{},"members":{}}}}}},"output":{"type":"structure","members":{}}},"startInstance":{"name":"StartInstance","input":{"type":"structure","members":{"InstanceId":{"required":true}}},"output":{"type":"structure","members":{}}},"startStack":{"name":"StartStack","input":{"type":"structure","members":{"StackId":{"required":true}}},"output":{"type":"structure","members":{}}},"stopInstance":{"name":"StopInstance","input":{"type":"structure","members":{"InstanceId":{"required":true}}},"output":{"type":"structure","members":{}}},"stopStack":{"name":"StopStack","input":{"type":"structure","members":{"StackId":{"required":true}}},"output":{"type":"structure","members":{}}},"unassignVolume":{"name":"UnassignVolume","input":{"type":"structure","members":{"VolumeId":{"required":true}}},"output":{"type":"structure","members":{}}},"updateApp":{"name":"UpdateApp","input":{"type":"structure","members":{"AppId":{"required":true},"Name":{},"Description":{},"Type":{},"AppSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"Domains":{"type":"list","members":{}},"EnableSsl":{"type":"boolean"},"SslConfiguration":{"type":"structure","members":{"Certificate":{"required":true},"PrivateKey":{"required":true},"Chain":{}}},"Attributes":{"type":"map","keys":{},"members":{}}}},"output":{"type":"structure","members":{}}},"updateElasticIp":{"name":"UpdateElasticIp","input":{"type":"structure","members":{"ElasticIp":{"required":true},"Name":{}}},"output":{"type":"structure","members":{}}},"updateInstance":{"name":"UpdateInstance","input":{"type":"structure","members":{"InstanceId":{"required":true},"LayerIds":{"type":"list","members":{}},"InstanceType":{},"AutoScalingType":{},"Hostname":{},"Os":{},"AmiId":{},"SshKeyName":{},"Architecture":{},"InstallUpdatesOnBoot":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"updateLayer":{"name":"UpdateLayer","input":{"type":"structure","members":{"LayerId":{"required":true},"Name":{},"Shortname":{},"Attributes":{"type":"map","keys":{},"members":{}},"CustomInstanceProfileArn":{},"CustomSecurityGroupIds":{"type":"list","members":{}},"Packages":{"type":"list","members":{}},"VolumeConfigurations":{"type":"list","members":{"type":"structure","members":{"MountPoint":{"required":true},"RaidLevel":{"type":"integer"},"NumberOfDisks":{"type":"integer","required":true},"Size":{"type":"integer","required":true}}}},"EnableAutoHealing":{"type":"boolean"},"AutoAssignElasticIps":{"type":"boolean"},"AutoAssignPublicIps":{"type":"boolean"},"CustomRecipes":{"type":"structure","members":{"Setup":{"type":"list","members":{}},"Configure":{"type":"list","members":{}},"Deploy":{"type":"list","members":{}},"Undeploy":{"type":"list","members":{}},"Shutdown":{"type":"list","members":{}}}},"InstallUpdatesOnBoot":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"updateMyUserProfile":{"name":"UpdateMyUserProfile","input":{"type":"structure","members":{"SshPublicKey":{}}},"output":{"type":"structure","members":{}}},"updateStack":{"name":"UpdateStack","input":{"type":"structure","members":{"StackId":{"required":true},"Name":{},"Attributes":{"type":"map","keys":{},"members":{}},"ServiceRoleArn":{},"DefaultInstanceProfileArn":{},"DefaultOs":{},"HostnameTheme":{},"DefaultAvailabilityZone":{},"DefaultSubnetId":{},"CustomJson":{},"ConfigurationManager":{"type":"structure","members":{"Name":{},"Version":{}}},"UseCustomCookbooks":{"type":"boolean"},"CustomCookbooksSource":{"type":"structure","members":{"Type":{},"Url":{},"Username":{},"Password":{},"SshKey":{},"Revision":{}}},"DefaultSshKeyName":{},"DefaultRootDeviceType":{}}},"output":{"type":"structure","members":{}}},"updateUserProfile":{"name":"UpdateUserProfile","input":{"type":"structure","members":{"IamUserArn":{"required":true},"SshUsername":{},"SshPublicKey":{},"AllowSelfManagement":{"type":"boolean"}}},"output":{"type":"structure","members":{}}},"updateVolume":{"name":"UpdateVolume","input":{"type":"structure","members":{"VolumeId":{"required":true},"Name":{},"MountPoint":{}}},"output":{"type":"structure","members":{}}}},"pagination":{"describeApps":{"resultKey":"Apps"},"describeCommands":{"resultKey":"Commands"},"describeDeployments":{"resultKey":"Deployments"},"describeElasticIps":{"resultKey":"ElasticIps"},"describeElasticLoadBalancers":{"resultKey":"ElasticLoadBalancers"},"describeInstances":{"resultKey":"Instances"},"describeLayers":{"resultKey":"Layers"},"describeLoadBasedAutoScaling":{"resultKey":"LoadBasedAutoScalingConfigurations"},"describeRaidArrays":{"resultKey":"RaidArrays"},"describeServiceErrors":{"resultKey":"ServiceErrors"},"describeStacks":{"resultKey":"Stacks"},"describeTimeBasedAutoScaling":{"resultKey":"TimeBasedAutoScalingConfigurations"},"describeUserProfiles":{"resultKey":"UserProfiles"},"describeVolumes":{"resultKey":"Volumes"}}});
AWS.Service.defineServiceApi(require("./services/rds"), "2013-01-10", {"format":"query","apiVersion":"2013-01-10","endpointPrefix":"rds","resultWrapped":true,"serviceAbbreviation":"Amazon RDS","serviceFullName":"Amazon Relational Database Service","signatureVersion":"v2","timestampFormat":"iso8601","operations":{"addSourceIdentifierToSubscription":{"name":"AddSourceIdentifierToSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"addTagsToResource":{"name":"AddTagsToResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"},"required":true}}},"output":{"type":"structure","members":{}}},"authorizeDBSecurityGroupIngress":{"name":"AuthorizeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"copyDBSnapshot":{"name":"CopyDBSnapshot","input":{"type":"structure","members":{"SourceDBSnapshotIdentifier":{"required":true},"TargetDBSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"}},"wrapper":true}}}},"createDBInstance":{"name":"CreateDBInstance","input":{"type":"structure","members":{"DBName":{},"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer","required":true},"DBInstanceClass":{"required":true},"Engine":{"required":true},"MasterUsername":{"required":true},"MasterUserPassword":{"required":true},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"AvailabilityZone":{},"DBSubnetGroupName":{},"PreferredMaintenanceWindow":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"Port":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupName":{},"CharacterSetName":{},"PubliclyAccessible":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"createDBInstanceReadReplica":{"name":"CreateDBInstanceReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SourceDBInstanceIdentifier":{"required":true},"DBInstanceClass":{},"AvailabilityZone":{},"Port":{"type":"integer"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"PubliclyAccessible":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"createDBParameterGroup":{"name":"CreateDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"DBParameterGroupFamily":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"DBParameterGroup":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true}}}},"createDBSecurityGroup":{"name":"CreateDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"DBSecurityGroupDescription":{"required":true}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"createDBSnapshot":{"name":"CreateDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true},"DBInstanceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"}},"wrapper":true}}}},"createDBSubnetGroup":{"name":"CreateDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{"required":true},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"createEventSubscription":{"name":"CreateEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{"required":true},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"SourceIds":{"type":"list","members":{"name":"SourceId"}},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"createOptionGroup":{"name":"CreateOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"EngineName":{"required":true},"MajorEngineVersion":{"required":true},"OptionGroupDescription":{"required":true}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"deleteDBInstance":{"name":"DeleteDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SkipFinalSnapshot":{"type":"boolean"},"FinalDBSnapshotIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"deleteDBParameterGroup":{"name":"DeleteDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSecurityGroup":{"name":"DeleteDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSnapshot":{"name":"DeleteDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"}},"wrapper":true}}}},"deleteDBSubnetGroup":{"name":"DeleteDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteEventSubscription":{"name":"DeleteEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"deleteOptionGroup":{"name":"DeleteOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeDBEngineVersions":{"name":"DescribeDBEngineVersions","input":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"MaxRecords":{"type":"integer"},"Marker":{},"DefaultOnly":{"type":"boolean"},"ListSupportedCharacterSets":{"type":"boolean"}}},"output":{"type":"structure","members":{"Marker":{},"DBEngineVersions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"DBEngineDescription":{},"DBEngineVersionDescription":{},"DefaultCharacterSet":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}}},"SupportedCharacterSets":{"type":"list","members":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}},"name":"CharacterSet"}}},"name":"DBEngineVersion"}}}}},"describeDBInstances":{"name":"DescribeDBInstances","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBInstances":{"type":"list","members":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true,"name":"DBInstance"}}}}},"describeDBParameterGroups":{"name":"DescribeDBParameterGroups","input":{"type":"structure","members":{"DBParameterGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true,"name":"DBParameterGroup"}}}}},"describeDBParameters":{"name":"DescribeDBParameters","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Source":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}},"Marker":{}}}},"describeDBSecurityGroups":{"name":"DescribeDBSecurityGroups","input":{"type":"structure","members":{"DBSecurityGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true,"name":"DBSecurityGroup"}}}}},"describeDBSnapshots":{"name":"DescribeDBSnapshots","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBSnapshotIdentifier":{},"SnapshotType":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSnapshots":{"type":"list","members":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"}},"wrapper":true,"name":"DBSnapshot"}}}}},"describeDBSubnetGroups":{"name":"DescribeDBSubnetGroups","input":{"type":"structure","members":{"DBSubnetGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSubnetGroups":{"type":"list","members":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true,"name":"DBSubnetGroup"}}}}},"describeEngineDefaultParameters":{"name":"DescribeEngineDefaultParameters","input":{"type":"structure","members":{"DBParameterGroupFamily":{"required":true},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"EngineDefaults":{"type":"structure","members":{"DBParameterGroupFamily":{},"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}},"wrapper":true}}}},"describeEventCategories":{"name":"DescribeEventCategories","input":{"type":"structure","members":{"SourceType":{}}},"output":{"type":"structure","members":{"EventCategoriesMapList":{"type":"list","members":{"type":"structure","members":{"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}}},"wrapper":true,"name":"EventCategoriesMap"}}}}},"describeEventSubscriptions":{"name":"DescribeEventSubscriptions","input":{"type":"structure","members":{"SubscriptionName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"EventSubscriptionsList":{"type":"list","members":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true,"name":"EventSubscription"}}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Duration":{"type":"integer"},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Events":{"type":"list","members":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"Message":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Date":{"type":"timestamp"}},"name":"Event"}}}}},"describeOptionGroupOptions":{"name":"DescribeOptionGroupOptions","input":{"type":"structure","members":{"EngineName":{"required":true},"MajorEngineVersion":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OptionGroupOptions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Description":{},"EngineName":{},"MajorEngineVersion":{},"MinimumRequiredMinorEngineVersion":{},"PortRequired":{"type":"boolean"},"DefaultPort":{"type":"integer"},"OptionsDependedOn":{"type":"list","members":{"name":"OptionName"}}},"name":"OptionGroupOption"}},"Marker":{}}}},"describeOptionGroups":{"name":"DescribeOptionGroups","input":{"type":"structure","members":{"OptionGroupName":{},"Marker":{},"MaxRecords":{"type":"integer"},"EngineName":{},"MajorEngineVersion":{}}},"output":{"type":"structure","members":{"OptionGroupsList":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true,"name":"OptionGroup"}},"Marker":{}}}},"describeOrderableDBInstanceOptions":{"name":"DescribeOrderableDBInstanceOptions","input":{"type":"structure","members":{"Engine":{"required":true},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"Vpc":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OrderableDBInstanceOptions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"AvailabilityZones":{"type":"list","members":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true,"name":"AvailabilityZone"}},"MultiAZCapable":{"type":"boolean"},"ReadReplicaCapable":{"type":"boolean"},"Vpc":{"type":"boolean"}},"wrapper":true,"name":"OrderableDBInstanceOption"}},"Marker":{}}}},"describeReservedDBInstances":{"name":"DescribeReservedDBInstances","input":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstances":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstance"}}}}},"describeReservedDBInstancesOfferings":{"name":"DescribeReservedDBInstancesOfferings","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstancesOfferings":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstancesOffering"}}}}},"listTagsForResource":{"name":"ListTagsForResource","input":{"type":"structure","members":{"ResourceName":{"required":true}}},"output":{"type":"structure","members":{"TagList":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}}},"modifyDBInstance":{"name":"ModifyDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer"},"DBInstanceClass":{},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"ApplyImmediately":{"type":"boolean"},"MasterUserPassword":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"PreferredMaintenanceWindow":{},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AllowMajorVersionUpgrade":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"NewDBInstanceIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"modifyDBParameterGroup":{"name":"ModifyDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"},"required":true}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"modifyDBSubnetGroup":{"name":"ModifyDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"modifyEventSubscription":{"name":"ModifyEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"modifyOptionGroup":{"name":"ModifyOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"OptionsToInclude":{"type":"list","members":{"type":"structure","members":{"OptionName":{"required":true},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"name":"VpcSecurityGroupId"}}},"name":"OptionConfiguration"}},"OptionsToRemove":{"type":"list","members":{}},"ApplyImmediately":{"type":"boolean"}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"promoteReadReplica":{"name":"PromoteReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"purchaseReservedDBInstancesOffering":{"name":"PurchaseReservedDBInstancesOffering","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{"required":true},"ReservedDBInstanceId":{},"DBInstanceCount":{"type":"integer"}}},"output":{"type":"structure","members":{"ReservedDBInstance":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true}}}},"rebootDBInstance":{"name":"RebootDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"ForceFailover":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"removeSourceIdentifierFromSubscription":{"name":"RemoveSourceIdentifierFromSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"Id":{},"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"removeTagsFromResource":{"name":"RemoveTagsFromResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"TagKeys":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"resetDBParameterGroup":{"name":"ResetDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"ResetAllParameters":{"type":"boolean"},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"restoreDBInstanceFromDBSnapshot":{"name":"RestoreDBInstanceFromDBSnapshot","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"DBSnapshotIdentifier":{"required":true},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"restoreDBInstanceToPointInTime":{"name":"RestoreDBInstanceToPointInTime","input":{"type":"structure","members":{"SourceDBInstanceIdentifier":{"required":true},"TargetDBInstanceIdentifier":{"required":true},"RestoreTime":{"type":"timestamp"},"UseLatestRestorableTime":{"type":"boolean"},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMembership":{"type":"structure","members":{"OptionGroupName":{},"Status":{}}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"revokeDBSecurityGroupIngress":{"name":"RevokeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}}},"pagination":{"describeDBEngineVersions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBEngineVersions"},"describeDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBInstances"},"describeDBLogFiles":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DescribeDBLogFiles"},"describeDBParameterGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBParameterGroups"},"describeDBParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeDBSecurityGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSecurityGroups"},"describeDBSnapshots":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSnapshots"},"describeDBSubnetGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSubnetGroups"},"describeEngineDefaultParameters":{"inputToken":"Marker","outputToken":"EngineDefaults.Marker","limitKey":"MaxRecords"},"describeEventSubscriptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"EventSubscriptionsList"},"describeEvents":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Events"},"describeOptionGroupOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupOptions"},"describeOptionGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupsList"},"describeOrderableDBInstanceOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OrderableDBInstanceOptions"},"describeReservedDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstances"},"describeReservedDBInstancesOfferings":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstancesOfferings"},"downloadDBLogFilePortion":{"inputToken":"Marker","outputToken":"Marker"},"listTagsForResource":{"resultKey":"TagList"}}});
AWS.Service.defineServiceApi(require("./services/rds"), "2013-02-12", {"format":"query","apiVersion":"2013-02-12","endpointPrefix":"rds","resultWrapped":true,"serviceAbbreviation":"Amazon RDS","serviceFullName":"Amazon Relational Database Service","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"addSourceIdentifierToSubscription":{"name":"AddSourceIdentifierToSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"addTagsToResource":{"name":"AddTagsToResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"},"required":true}}},"output":{"type":"structure","members":{}}},"authorizeDBSecurityGroupIngress":{"name":"AuthorizeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"copyDBSnapshot":{"name":"CopyDBSnapshot","input":{"type":"structure","members":{"SourceDBSnapshotIdentifier":{"required":true},"TargetDBSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{}},"wrapper":true}}}},"createDBInstance":{"name":"CreateDBInstance","input":{"type":"structure","members":{"DBName":{},"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer","required":true},"DBInstanceClass":{"required":true},"Engine":{"required":true},"MasterUsername":{"required":true},"MasterUserPassword":{"required":true},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"AvailabilityZone":{},"DBSubnetGroupName":{},"PreferredMaintenanceWindow":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"Port":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupName":{},"CharacterSetName":{},"PubliclyAccessible":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"createDBInstanceReadReplica":{"name":"CreateDBInstanceReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SourceDBInstanceIdentifier":{"required":true},"DBInstanceClass":{},"AvailabilityZone":{},"Port":{"type":"integer"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"PubliclyAccessible":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"createDBParameterGroup":{"name":"CreateDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"DBParameterGroupFamily":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"DBParameterGroup":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true}}}},"createDBSecurityGroup":{"name":"CreateDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"DBSecurityGroupDescription":{"required":true}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"createDBSnapshot":{"name":"CreateDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true},"DBInstanceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{}},"wrapper":true}}}},"createDBSubnetGroup":{"name":"CreateDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{"required":true},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"createEventSubscription":{"name":"CreateEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{"required":true},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"SourceIds":{"type":"list","members":{"name":"SourceId"}},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"createOptionGroup":{"name":"CreateOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"EngineName":{"required":true},"MajorEngineVersion":{"required":true},"OptionGroupDescription":{"required":true}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"deleteDBInstance":{"name":"DeleteDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SkipFinalSnapshot":{"type":"boolean"},"FinalDBSnapshotIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"deleteDBParameterGroup":{"name":"DeleteDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSecurityGroup":{"name":"DeleteDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSnapshot":{"name":"DeleteDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{}},"wrapper":true}}}},"deleteDBSubnetGroup":{"name":"DeleteDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteEventSubscription":{"name":"DeleteEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"deleteOptionGroup":{"name":"DeleteOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeDBEngineVersions":{"name":"DescribeDBEngineVersions","input":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"MaxRecords":{"type":"integer"},"Marker":{},"DefaultOnly":{"type":"boolean"},"ListSupportedCharacterSets":{"type":"boolean"}}},"output":{"type":"structure","members":{"Marker":{},"DBEngineVersions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"DBEngineDescription":{},"DBEngineVersionDescription":{},"DefaultCharacterSet":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}}},"SupportedCharacterSets":{"type":"list","members":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}},"name":"CharacterSet"}}},"name":"DBEngineVersion"}}}}},"describeDBInstances":{"name":"DescribeDBInstances","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBInstances":{"type":"list","members":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true,"name":"DBInstance"}}}}},"describeDBLogFiles":{"name":"DescribeDBLogFiles","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"FilenameContains":{},"FileLastWritten":{"type":"integer"},"FileSize":{"type":"integer"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"DescribeDBLogFiles":{"type":"list","members":{"type":"structure","members":{"LogFileName":{},"LastWritten":{"type":"integer"},"Size":{"type":"integer"}},"name":"DescribeDBLogFilesDetails"}},"Marker":{}}}},"describeDBParameterGroups":{"name":"DescribeDBParameterGroups","input":{"type":"structure","members":{"DBParameterGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true,"name":"DBParameterGroup"}}}}},"describeDBParameters":{"name":"DescribeDBParameters","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Source":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}},"Marker":{}}}},"describeDBSecurityGroups":{"name":"DescribeDBSecurityGroups","input":{"type":"structure","members":{"DBSecurityGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true,"name":"DBSecurityGroup"}}}}},"describeDBSnapshots":{"name":"DescribeDBSnapshots","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBSnapshotIdentifier":{},"SnapshotType":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSnapshots":{"type":"list","members":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{}},"wrapper":true,"name":"DBSnapshot"}}}}},"describeDBSubnetGroups":{"name":"DescribeDBSubnetGroups","input":{"type":"structure","members":{"DBSubnetGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSubnetGroups":{"type":"list","members":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true,"name":"DBSubnetGroup"}}}}},"describeEngineDefaultParameters":{"name":"DescribeEngineDefaultParameters","input":{"type":"structure","members":{"DBParameterGroupFamily":{"required":true},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"EngineDefaults":{"type":"structure","members":{"DBParameterGroupFamily":{},"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}},"wrapper":true}}}},"describeEventCategories":{"name":"DescribeEventCategories","input":{"type":"structure","members":{"SourceType":{}}},"output":{"type":"structure","members":{"EventCategoriesMapList":{"type":"list","members":{"type":"structure","members":{"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}}},"wrapper":true,"name":"EventCategoriesMap"}}}}},"describeEventSubscriptions":{"name":"DescribeEventSubscriptions","input":{"type":"structure","members":{"SubscriptionName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"EventSubscriptionsList":{"type":"list","members":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true,"name":"EventSubscription"}}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Duration":{"type":"integer"},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Events":{"type":"list","members":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"Message":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Date":{"type":"timestamp"}},"name":"Event"}}}}},"describeOptionGroupOptions":{"name":"DescribeOptionGroupOptions","input":{"type":"structure","members":{"EngineName":{"required":true},"MajorEngineVersion":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OptionGroupOptions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Description":{},"EngineName":{},"MajorEngineVersion":{},"MinimumRequiredMinorEngineVersion":{},"PortRequired":{"type":"boolean"},"DefaultPort":{"type":"integer"},"OptionsDependedOn":{"type":"list","members":{"name":"OptionName"}},"Persistent":{"type":"boolean"},"OptionGroupOptionSettings":{"type":"list","members":{"type":"structure","members":{"SettingName":{},"SettingDescription":{},"DefaultValue":{},"ApplyType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"}},"name":"OptionGroupOptionSetting"}}},"name":"OptionGroupOption"}},"Marker":{}}}},"describeOptionGroups":{"name":"DescribeOptionGroups","input":{"type":"structure","members":{"OptionGroupName":{},"Marker":{},"MaxRecords":{"type":"integer"},"EngineName":{},"MajorEngineVersion":{}}},"output":{"type":"structure","members":{"OptionGroupsList":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true,"name":"OptionGroup"}},"Marker":{}}}},"describeOrderableDBInstanceOptions":{"name":"DescribeOrderableDBInstanceOptions","input":{"type":"structure","members":{"Engine":{"required":true},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"Vpc":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OrderableDBInstanceOptions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"AvailabilityZones":{"type":"list","members":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true,"name":"AvailabilityZone"}},"MultiAZCapable":{"type":"boolean"},"ReadReplicaCapable":{"type":"boolean"},"Vpc":{"type":"boolean"}},"wrapper":true,"name":"OrderableDBInstanceOption"}},"Marker":{}}}},"describeReservedDBInstances":{"name":"DescribeReservedDBInstances","input":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstances":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstance"}}}}},"describeReservedDBInstancesOfferings":{"name":"DescribeReservedDBInstancesOfferings","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstancesOfferings":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstancesOffering"}}}}},"downloadDBLogFilePortion":{"name":"DownloadDBLogFilePortion","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"LogFileName":{"required":true},"Marker":{},"NumberOfLines":{"type":"integer"}}},"output":{"type":"structure","members":{"LogFileData":{},"Marker":{},"AdditionalDataPending":{"type":"boolean"}}}},"listTagsForResource":{"name":"ListTagsForResource","input":{"type":"structure","members":{"ResourceName":{"required":true}}},"output":{"type":"structure","members":{"TagList":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}}},"modifyDBInstance":{"name":"ModifyDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer"},"DBInstanceClass":{},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"ApplyImmediately":{"type":"boolean"},"MasterUserPassword":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"PreferredMaintenanceWindow":{},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AllowMajorVersionUpgrade":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"NewDBInstanceIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"modifyDBParameterGroup":{"name":"ModifyDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"},"required":true}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"modifyDBSubnetGroup":{"name":"ModifyDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"modifyEventSubscription":{"name":"ModifyEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"modifyOptionGroup":{"name":"ModifyOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"OptionsToInclude":{"type":"list","members":{"type":"structure","members":{"OptionName":{"required":true},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}}},"name":"OptionConfiguration"}},"OptionsToRemove":{"type":"list","members":{}},"ApplyImmediately":{"type":"boolean"}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"promoteReadReplica":{"name":"PromoteReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"purchaseReservedDBInstancesOffering":{"name":"PurchaseReservedDBInstancesOffering","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{"required":true},"ReservedDBInstanceId":{},"DBInstanceCount":{"type":"integer"}}},"output":{"type":"structure","members":{"ReservedDBInstance":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true}}}},"rebootDBInstance":{"name":"RebootDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"ForceFailover":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"removeSourceIdentifierFromSubscription":{"name":"RemoveSourceIdentifierFromSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"removeTagsFromResource":{"name":"RemoveTagsFromResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"TagKeys":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"resetDBParameterGroup":{"name":"ResetDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"ResetAllParameters":{"type":"boolean"},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"restoreDBInstanceFromDBSnapshot":{"name":"RestoreDBInstanceFromDBSnapshot","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"DBSnapshotIdentifier":{"required":true},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"restoreDBInstanceToPointInTime":{"name":"RestoreDBInstanceToPointInTime","input":{"type":"structure","members":{"SourceDBInstanceIdentifier":{"required":true},"TargetDBInstanceIdentifier":{"required":true},"RestoreTime":{"type":"timestamp"},"UseLatestRestorableTime":{"type":"boolean"},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"}},"wrapper":true}}}},"revokeDBSecurityGroupIngress":{"name":"RevokeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}}},"pagination":{"describeDBEngineVersions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBEngineVersions"},"describeDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBInstances"},"describeDBLogFiles":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DescribeDBLogFiles"},"describeDBParameterGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBParameterGroups"},"describeDBParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeDBSecurityGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSecurityGroups"},"describeDBSnapshots":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSnapshots"},"describeDBSubnetGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSubnetGroups"},"describeEngineDefaultParameters":{"inputToken":"Marker","outputToken":"EngineDefaults.Marker","limitKey":"MaxRecords"},"describeEventSubscriptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"EventSubscriptionsList"},"describeEvents":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Events"},"describeOptionGroupOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupOptions"},"describeOptionGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupsList"},"describeOrderableDBInstanceOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OrderableDBInstanceOptions"},"describeReservedDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstances"},"describeReservedDBInstancesOfferings":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstancesOfferings"},"downloadDBLogFilePortion":{"inputToken":"Marker","outputToken":"Marker"},"listTagsForResource":{"resultKey":"TagList"}}});
AWS.Service.defineServiceApi(require("./services/rds"), "2013-09-09", {"format":"query","apiVersion":"2013-09-09","endpointPrefix":"rds","resultWrapped":true,"serviceAbbreviation":"Amazon RDS","serviceFullName":"Amazon Relational Database Service","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"addSourceIdentifierToSubscription":{"name":"AddSourceIdentifierToSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"addTagsToResource":{"name":"AddTagsToResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"},"required":true}}},"output":{"type":"structure","members":{}}},"authorizeDBSecurityGroupIngress":{"name":"AuthorizeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"copyDBSnapshot":{"name":"CopyDBSnapshot","input":{"type":"structure","members":{"SourceDBSnapshotIdentifier":{"required":true},"TargetDBSnapshotIdentifier":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{},"PercentProgress":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"createDBInstance":{"name":"CreateDBInstance","input":{"type":"structure","members":{"DBName":{},"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer","required":true},"DBInstanceClass":{"required":true},"Engine":{"required":true},"MasterUsername":{"required":true},"MasterUserPassword":{"required":true},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"AvailabilityZone":{},"DBSubnetGroupName":{},"PreferredMaintenanceWindow":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"Port":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupName":{},"CharacterSetName":{},"PubliclyAccessible":{"type":"boolean"},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"createDBInstanceReadReplica":{"name":"CreateDBInstanceReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SourceDBInstanceIdentifier":{"required":true},"DBInstanceClass":{},"AvailabilityZone":{},"Port":{"type":"integer"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"PubliclyAccessible":{"type":"boolean"},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}},"DBSubnetGroupName":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"createDBParameterGroup":{"name":"CreateDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"DBParameterGroupFamily":{"required":true},"Description":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBParameterGroup":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true}}}},"createDBSecurityGroup":{"name":"CreateDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"DBSecurityGroupDescription":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"createDBSnapshot":{"name":"CreateDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true},"DBInstanceIdentifier":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{},"PercentProgress":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"createDBSubnetGroup":{"name":"CreateDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{"required":true},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"createEventSubscription":{"name":"CreateEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{"required":true},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"SourceIds":{"type":"list","members":{"name":"SourceId"}},"Enabled":{"type":"boolean"},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"createOptionGroup":{"name":"CreateOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"EngineName":{"required":true},"MajorEngineVersion":{"required":true},"OptionGroupDescription":{"required":true},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Permanent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"deleteDBInstance":{"name":"DeleteDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"SkipFinalSnapshot":{"type":"boolean"},"FinalDBSnapshotIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"deleteDBParameterGroup":{"name":"DeleteDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSecurityGroup":{"name":"DeleteDBSecurityGroup","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteDBSnapshot":{"name":"DeleteDBSnapshot","input":{"type":"structure","members":{"DBSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"DBSnapshot":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{},"PercentProgress":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"deleteDBSubnetGroup":{"name":"DeleteDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteEventSubscription":{"name":"DeleteEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"deleteOptionGroup":{"name":"DeleteOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"describeDBEngineVersions":{"name":"DescribeDBEngineVersions","input":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"MaxRecords":{"type":"integer"},"Marker":{},"DefaultOnly":{"type":"boolean"},"ListSupportedCharacterSets":{"type":"boolean"}}},"output":{"type":"structure","members":{"Marker":{},"DBEngineVersions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBParameterGroupFamily":{},"DBEngineDescription":{},"DBEngineVersionDescription":{},"DefaultCharacterSet":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}}},"SupportedCharacterSets":{"type":"list","members":{"type":"structure","members":{"CharacterSetName":{},"CharacterSetDescription":{}},"name":"CharacterSet"}}},"name":"DBEngineVersion"}}}}},"describeDBInstances":{"name":"DescribeDBInstances","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBInstances":{"type":"list","members":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true,"name":"DBInstance"}}}}},"describeDBLogFiles":{"name":"DescribeDBLogFiles","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"FilenameContains":{},"FileLastWritten":{"type":"integer"},"FileSize":{"type":"integer"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"DescribeDBLogFiles":{"type":"list","members":{"type":"structure","members":{"LogFileName":{},"LastWritten":{"type":"integer"},"Size":{"type":"integer"}},"name":"DescribeDBLogFilesDetails"}},"Marker":{}}}},"describeDBParameterGroups":{"name":"DescribeDBParameterGroups","input":{"type":"structure","members":{"DBParameterGroupName":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"DBParameterGroupFamily":{},"Description":{}},"wrapper":true,"name":"DBParameterGroup"}}}}},"describeDBParameters":{"name":"DescribeDBParameters","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Source":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}},"Marker":{}}}},"describeDBSecurityGroups":{"name":"DescribeDBSecurityGroups","input":{"type":"structure","members":{"DBSecurityGroupName":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true,"name":"DBSecurityGroup"}}}}},"describeDBSnapshots":{"name":"DescribeDBSnapshots","input":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBSnapshotIdentifier":{},"SnapshotType":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSnapshots":{"type":"list","members":{"type":"structure","members":{"DBSnapshotIdentifier":{},"DBInstanceIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Engine":{},"AllocatedStorage":{"type":"integer"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"VpcId":{},"InstanceCreateTime":{"type":"timestamp"},"MasterUsername":{},"EngineVersion":{},"LicenseModel":{},"SnapshotType":{},"Iops":{"type":"integer"},"OptionGroupName":{},"PercentProgress":{"type":"integer"},"SourceRegion":{}},"wrapper":true,"name":"DBSnapshot"}}}}},"describeDBSubnetGroups":{"name":"DescribeDBSubnetGroups","input":{"type":"structure","members":{"DBSubnetGroupName":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"DBSubnetGroups":{"type":"list","members":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true,"name":"DBSubnetGroup"}}}}},"describeEngineDefaultParameters":{"name":"DescribeEngineDefaultParameters","input":{"type":"structure","members":{"DBParameterGroupFamily":{"required":true},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"EngineDefaults":{"type":"structure","members":{"DBParameterGroupFamily":{},"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}},"wrapper":true}}}},"describeEventCategories":{"name":"DescribeEventCategories","input":{"type":"structure","members":{"SourceType":{}}},"output":{"type":"structure","members":{"EventCategoriesMapList":{"type":"list","members":{"type":"structure","members":{"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}}},"wrapper":true,"name":"EventCategoriesMap"}}}}},"describeEventSubscriptions":{"name":"DescribeEventSubscriptions","input":{"type":"structure","members":{"SubscriptionName":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"EventSubscriptionsList":{"type":"list","members":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true,"name":"EventSubscription"}}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Duration":{"type":"integer"},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Events":{"type":"list","members":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"Message":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Date":{"type":"timestamp"}},"name":"Event"}}}}},"describeOptionGroupOptions":{"name":"DescribeOptionGroupOptions","input":{"type":"structure","members":{"EngineName":{"required":true},"MajorEngineVersion":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OptionGroupOptions":{"type":"list","members":{"type":"structure","members":{"Name":{},"Description":{},"EngineName":{},"MajorEngineVersion":{},"MinimumRequiredMinorEngineVersion":{},"PortRequired":{"type":"boolean"},"DefaultPort":{"type":"integer"},"OptionsDependedOn":{"type":"list","members":{"name":"OptionName"}},"Persistent":{"type":"boolean"},"Permanent":{"type":"boolean"},"OptionGroupOptionSettings":{"type":"list","members":{"type":"structure","members":{"SettingName":{},"SettingDescription":{},"DefaultValue":{},"ApplyType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"}},"name":"OptionGroupOptionSetting"}}},"name":"OptionGroupOption"}},"Marker":{}}}},"describeOptionGroups":{"name":"DescribeOptionGroups","input":{"type":"structure","members":{"OptionGroupName":{},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"Marker":{},"MaxRecords":{"type":"integer"},"EngineName":{},"MajorEngineVersion":{}}},"output":{"type":"structure","members":{"OptionGroupsList":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Permanent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true,"name":"OptionGroup"}},"Marker":{}}}},"describeOrderableDBInstanceOptions":{"name":"DescribeOrderableDBInstanceOptions","input":{"type":"structure","members":{"Engine":{"required":true},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"Vpc":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OrderableDBInstanceOptions":{"type":"list","members":{"type":"structure","members":{"Engine":{},"EngineVersion":{},"DBInstanceClass":{},"LicenseModel":{},"AvailabilityZones":{"type":"list","members":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true,"name":"AvailabilityZone"}},"MultiAZCapable":{"type":"boolean"},"ReadReplicaCapable":{"type":"boolean"},"Vpc":{"type":"boolean"}},"wrapper":true,"name":"OrderableDBInstanceOption"}},"Marker":{}}}},"describeReservedDBInstances":{"name":"DescribeReservedDBInstances","input":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"Filters":{"type":"list","members":{"type":"structure","members":{"FilterName":{"required":true},"FilterValue":{"type":"list","members":{"name":"Value"},"required":true}},"name":"Filter"}},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstances":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstance"}}}}},"describeReservedDBInstancesOfferings":{"name":"DescribeReservedDBInstancesOfferings","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedDBInstancesOfferings":{"type":"list","members":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedDBInstancesOffering"}}}}},"downloadDBLogFilePortion":{"name":"DownloadDBLogFilePortion","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"LogFileName":{"required":true},"Marker":{},"NumberOfLines":{"type":"integer"}}},"output":{"type":"structure","members":{"LogFileData":{},"Marker":{},"AdditionalDataPending":{"type":"boolean"}}}},"listTagsForResource":{"name":"ListTagsForResource","input":{"type":"structure","members":{"ResourceName":{"required":true}}},"output":{"type":"structure","members":{"TagList":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}}},"modifyDBInstance":{"name":"ModifyDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"AllocatedStorage":{"type":"integer"},"DBInstanceClass":{},"DBSecurityGroups":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"ApplyImmediately":{"type":"boolean"},"MasterUserPassword":{},"DBParameterGroupName":{},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{},"PreferredMaintenanceWindow":{},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AllowMajorVersionUpgrade":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"Iops":{"type":"integer"},"OptionGroupName":{},"NewDBInstanceIdentifier":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"modifyDBParameterGroup":{"name":"ModifyDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"},"required":true}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"modifyDBSubnetGroup":{"name":"ModifyDBSubnetGroup","input":{"type":"structure","members":{"DBSubnetGroupName":{"required":true},"DBSubnetGroupDescription":{},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"modifyEventSubscription":{"name":"ModifyEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{},"SourceType":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"modifyOptionGroup":{"name":"ModifyOptionGroup","input":{"type":"structure","members":{"OptionGroupName":{"required":true},"OptionsToInclude":{"type":"list","members":{"type":"structure","members":{"OptionName":{"required":true},"Port":{"type":"integer"},"DBSecurityGroupMemberships":{"type":"list","members":{"name":"DBSecurityGroupName"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}}},"name":"OptionConfiguration"}},"OptionsToRemove":{"type":"list","members":{}},"ApplyImmediately":{"type":"boolean"}}},"output":{"type":"structure","members":{"OptionGroup":{"type":"structure","members":{"OptionGroupName":{},"OptionGroupDescription":{},"EngineName":{},"MajorEngineVersion":{},"Options":{"type":"list","members":{"type":"structure","members":{"OptionName":{},"OptionDescription":{},"Persistent":{"type":"boolean"},"Permanent":{"type":"boolean"},"Port":{"type":"integer"},"OptionSettings":{"type":"list","members":{"type":"structure","members":{"Name":{},"Value":{},"DefaultValue":{},"Description":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"IsCollection":{"type":"boolean"}},"name":"OptionSetting"}},"DBSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroupMemberships":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}}},"name":"Option"}},"AllowsVpcAndNonVpcInstanceMemberships":{"type":"boolean"},"VpcId":{}},"wrapper":true}}}},"promoteReadReplica":{"name":"PromoteReadReplica","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"BackupRetentionPeriod":{"type":"integer"},"PreferredBackupWindow":{}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"purchaseReservedDBInstancesOffering":{"name":"PurchaseReservedDBInstancesOffering","input":{"type":"structure","members":{"ReservedDBInstancesOfferingId":{"required":true},"ReservedDBInstanceId":{},"DBInstanceCount":{"type":"integer"},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"ReservedDBInstance":{"type":"structure","members":{"ReservedDBInstanceId":{},"ReservedDBInstancesOfferingId":{},"DBInstanceClass":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"DBInstanceCount":{"type":"integer"},"ProductDescription":{},"OfferingType":{},"MultiAZ":{"type":"boolean"},"State":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true}}}},"rebootDBInstance":{"name":"RebootDBInstance","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"ForceFailover":{"type":"boolean"}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"removeSourceIdentifierFromSubscription":{"name":"RemoveSourceIdentifierFromSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SourceIdentifier":{"required":true}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"removeTagsFromResource":{"name":"RemoveTagsFromResource","input":{"type":"structure","members":{"ResourceName":{"required":true},"TagKeys":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"resetDBParameterGroup":{"name":"ResetDBParameterGroup","input":{"type":"structure","members":{"DBParameterGroupName":{"required":true},"ResetAllParameters":{"type":"boolean"},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"ApplyType":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{},"ApplyMethod":{}},"name":"Parameter"}}}},"output":{"type":"structure","members":{"DBParameterGroupName":{}}}},"restoreDBInstanceFromDBSnapshot":{"name":"RestoreDBInstanceFromDBSnapshot","input":{"type":"structure","members":{"DBInstanceIdentifier":{"required":true},"DBSnapshotIdentifier":{"required":true},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"restoreDBInstanceToPointInTime":{"name":"RestoreDBInstanceToPointInTime","input":{"type":"structure","members":{"SourceDBInstanceIdentifier":{"required":true},"TargetDBInstanceIdentifier":{"required":true},"RestoreTime":{"type":"timestamp"},"UseLatestRestorableTime":{"type":"boolean"},"DBInstanceClass":{},"Port":{"type":"integer"},"AvailabilityZone":{},"DBSubnetGroupName":{},"MultiAZ":{"type":"boolean"},"PubliclyAccessible":{"type":"boolean"},"AutoMinorVersionUpgrade":{"type":"boolean"},"LicenseModel":{},"DBName":{},"Engine":{},"Iops":{"type":"integer"},"OptionGroupName":{},"Tags":{"type":"list","members":{"type":"structure","members":{"Key":{},"Value":{}},"name":"Tag"}}}},"output":{"type":"structure","members":{"DBInstance":{"type":"structure","members":{"DBInstanceIdentifier":{},"DBInstanceClass":{},"Engine":{},"DBInstanceStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"AllocatedStorage":{"type":"integer"},"InstanceCreateTime":{"type":"timestamp"},"PreferredBackupWindow":{},"BackupRetentionPeriod":{"type":"integer"},"DBSecurityGroups":{"type":"list","members":{"type":"structure","members":{"DBSecurityGroupName":{},"Status":{}},"name":"DBSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroupMembership"}},"DBParameterGroups":{"type":"list","members":{"type":"structure","members":{"DBParameterGroupName":{},"ParameterApplyStatus":{}},"name":"DBParameterGroup"}},"AvailabilityZone":{},"DBSubnetGroup":{"type":"structure","members":{"DBSubnetGroupName":{},"DBSubnetGroupDescription":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{},"ProvisionedIopsCapable":{"type":"boolean"}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"DBInstanceClass":{},"AllocatedStorage":{"type":"integer"},"MasterUserPassword":{},"Port":{"type":"integer"},"BackupRetentionPeriod":{"type":"integer"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"Iops":{"type":"integer"},"DBInstanceIdentifier":{}}},"LatestRestorableTime":{"type":"timestamp"},"MultiAZ":{"type":"boolean"},"EngineVersion":{},"AutoMinorVersionUpgrade":{"type":"boolean"},"ReadReplicaSourceDBInstanceIdentifier":{},"ReadReplicaDBInstanceIdentifiers":{"type":"list","members":{"name":"ReadReplicaDBInstanceIdentifier"}},"LicenseModel":{},"Iops":{"type":"integer"},"OptionGroupMemberships":{"type":"list","members":{"type":"structure","members":{"OptionGroupName":{},"Status":{}},"name":"OptionGroupMembership"}},"CharacterSetName":{},"SecondaryAvailabilityZone":{},"PubliclyAccessible":{"type":"boolean"},"StatusInfos":{"type":"list","members":{"type":"structure","members":{"StatusType":{},"Normal":{"type":"boolean"},"Status":{},"Message":{}},"name":"DBInstanceStatusInfo"}}},"wrapper":true}}}},"revokeDBSecurityGroupIngress":{"name":"RevokeDBSecurityGroupIngress","input":{"type":"structure","members":{"DBSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"DBSecurityGroup":{"type":"structure","members":{"OwnerId":{},"DBSecurityGroupName":{},"DBSecurityGroupDescription":{},"VpcId":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupId":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}}},"pagination":{"describeDBEngineVersions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBEngineVersions"},"describeDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBInstances"},"describeDBLogFiles":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DescribeDBLogFiles"},"describeDBParameterGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBParameterGroups"},"describeDBParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeDBSecurityGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSecurityGroups"},"describeDBSnapshots":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSnapshots"},"describeDBSubnetGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"DBSubnetGroups"},"describeEngineDefaultParameters":{"inputToken":"Marker","outputToken":"EngineDefaults.Marker","limitKey":"MaxRecords"},"describeEventSubscriptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"EventSubscriptionsList"},"describeEvents":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Events"},"describeOptionGroupOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupOptions"},"describeOptionGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OptionGroupsList"},"describeOrderableDBInstanceOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OrderableDBInstanceOptions"},"describeReservedDBInstances":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstances"},"describeReservedDBInstancesOfferings":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedDBInstancesOfferings"},"downloadDBLogFilePortion":{"inputToken":"Marker","outputToken":"Marker"},"listTagsForResource":{"resultKey":"TagList"}}});
AWS.Service.defineServiceApi(require("./services/redshift"), "2012-12-01", {"format":"query","apiVersion":"2012-12-01","endpointPrefix":"redshift","resultWrapped":true,"serviceFullName":"Amazon Redshift","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"authorizeClusterSecurityGroupIngress":{"name":"AuthorizeClusterSecurityGroupIngress","input":{"type":"structure","members":{"ClusterSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"ClusterSecurityGroup":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"authorizeSnapshotAccess":{"name":"AuthorizeSnapshotAccess","input":{"type":"structure","members":{"SnapshotIdentifier":{"required":true},"SnapshotClusterIdentifier":{},"AccountWithRestoreAccess":{"required":true}}},"output":{"type":"structure","members":{"Snapshot":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"copyClusterSnapshot":{"name":"CopyClusterSnapshot","input":{"type":"structure","members":{"SourceSnapshotIdentifier":{"required":true},"SourceSnapshotClusterIdentifier":{},"TargetSnapshotIdentifier":{"required":true}}},"output":{"type":"structure","members":{"Snapshot":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"createCluster":{"name":"CreateCluster","input":{"type":"structure","members":{"DBName":{},"ClusterIdentifier":{"required":true},"ClusterType":{},"NodeType":{"required":true},"MasterUsername":{"required":true},"MasterUserPassword":{"required":true},"ClusterSecurityGroups":{"type":"list","members":{"name":"ClusterSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"ClusterSubnetGroupName":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"ClusterParameterGroupName":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"Port":{"type":"integer"},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"ElasticIp":{}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"createClusterParameterGroup":{"name":"CreateClusterParameterGroup","input":{"type":"structure","members":{"ParameterGroupName":{"required":true},"ParameterGroupFamily":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"ClusterParameterGroup":{"type":"structure","members":{"ParameterGroupName":{},"ParameterGroupFamily":{},"Description":{}},"wrapper":true}}}},"createClusterSecurityGroup":{"name":"CreateClusterSecurityGroup","input":{"type":"structure","members":{"ClusterSecurityGroupName":{"required":true},"Description":{"required":true}}},"output":{"type":"structure","members":{"ClusterSecurityGroup":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"createClusterSnapshot":{"name":"CreateClusterSnapshot","input":{"type":"structure","members":{"SnapshotIdentifier":{"required":true},"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"Snapshot":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"createClusterSubnetGroup":{"name":"CreateClusterSubnetGroup","input":{"type":"structure","members":{"ClusterSubnetGroupName":{"required":true},"Description":{"required":true},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"ClusterSubnetGroup":{"type":"structure","members":{"ClusterSubnetGroupName":{},"Description":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"createEventSubscription":{"name":"CreateEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{"required":true},"SourceType":{},"SourceIds":{"type":"list","members":{"name":"SourceId"}},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{"type":"timestamp"},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"createHsmClientCertificate":{"name":"CreateHsmClientCertificate","input":{"type":"structure","members":{"HsmClientCertificateIdentifier":{"required":true}}},"output":{"type":"structure","members":{"HsmClientCertificate":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmClientCertificatePublicKey":{}},"wrapper":true}}}},"createHsmConfiguration":{"name":"CreateHsmConfiguration","input":{"type":"structure","members":{"HsmConfigurationIdentifier":{"required":true},"Description":{"required":true},"HsmIpAddress":{"required":true},"HsmPartitionName":{"required":true},"HsmPartitionPassword":{"required":true},"HsmServerPublicCertificate":{"required":true}}},"output":{"type":"structure","members":{"HsmConfiguration":{"type":"structure","members":{"HsmConfigurationIdentifier":{},"Description":{},"HsmIpAddress":{},"HsmPartitionName":{}},"wrapper":true}}}},"deleteCluster":{"name":"DeleteCluster","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"SkipFinalClusterSnapshot":{"type":"boolean"},"FinalClusterSnapshotIdentifier":{}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"deleteClusterParameterGroup":{"name":"DeleteClusterParameterGroup","input":{"type":"structure","members":{"ParameterGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteClusterSecurityGroup":{"name":"DeleteClusterSecurityGroup","input":{"type":"structure","members":{"ClusterSecurityGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteClusterSnapshot":{"name":"DeleteClusterSnapshot","input":{"type":"structure","members":{"SnapshotIdentifier":{"required":true},"SnapshotClusterIdentifier":{}}},"output":{"type":"structure","members":{"Snapshot":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"deleteClusterSubnetGroup":{"name":"DeleteClusterSubnetGroup","input":{"type":"structure","members":{"ClusterSubnetGroupName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteEventSubscription":{"name":"DeleteEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteHsmClientCertificate":{"name":"DeleteHsmClientCertificate","input":{"type":"structure","members":{"HsmClientCertificateIdentifier":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteHsmConfiguration":{"name":"DeleteHsmConfiguration","input":{"type":"structure","members":{"HsmConfigurationIdentifier":{"required":true}}},"output":{"type":"structure","members":{}}},"describeClusterParameterGroups":{"name":"DescribeClusterParameterGroups","input":{"type":"structure","members":{"ParameterGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterGroupFamily":{},"Description":{}},"wrapper":true,"name":"ClusterParameterGroup"}}}}},"describeClusterParameters":{"name":"DescribeClusterParameters","input":{"type":"structure","members":{"ParameterGroupName":{"required":true},"Source":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"}},"Marker":{}}}},"describeClusterSecurityGroups":{"name":"DescribeClusterSecurityGroups","input":{"type":"structure","members":{"ClusterSecurityGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true,"name":"ClusterSecurityGroup"}}}}},"describeClusterSnapshots":{"name":"DescribeClusterSnapshots","input":{"type":"structure","members":{"ClusterIdentifier":{},"SnapshotIdentifier":{},"SnapshotType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"MaxRecords":{"type":"integer"},"Marker":{},"OwnerAccount":{}}},"output":{"type":"structure","members":{"Marker":{},"Snapshots":{"type":"list","members":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true,"name":"Snapshot"}}}}},"describeClusterSubnetGroups":{"name":"DescribeClusterSubnetGroups","input":{"type":"structure","members":{"ClusterSubnetGroupName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ClusterSubnetGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSubnetGroupName":{},"Description":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true,"name":"ClusterSubnetGroup"}}}}},"describeClusterVersions":{"name":"DescribeClusterVersions","input":{"type":"structure","members":{"ClusterVersion":{},"ClusterParameterGroupFamily":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ClusterVersions":{"type":"list","members":{"type":"structure","members":{"ClusterVersion":{},"ClusterParameterGroupFamily":{},"Description":{}},"name":"ClusterVersion"}}}}},"describeClusters":{"name":"DescribeClusters","input":{"type":"structure","members":{"ClusterIdentifier":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Clusters":{"type":"list","members":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true,"name":"Cluster"}}}}},"describeDefaultClusterParameters":{"name":"DescribeDefaultClusterParameters","input":{"type":"structure","members":{"ParameterGroupFamily":{"required":true},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"DefaultClusterParameters":{"type":"structure","members":{"ParameterGroupFamily":{},"Marker":{},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"}}},"wrapper":true}}}},"describeEventCategories":{"name":"DescribeEventCategories","input":{"type":"structure","members":{"SourceType":{}}},"output":{"type":"structure","members":{"EventCategoriesMapList":{"type":"list","members":{"type":"structure","members":{"SourceType":{},"Events":{"type":"list","members":{"type":"structure","members":{"EventId":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"EventDescription":{},"Severity":{}},"wrapper":true,"name":"EventInfoMap"}}},"wrapper":true,"name":"EventCategoriesMap"}}}}},"describeEventSubscriptions":{"name":"DescribeEventSubscriptions","input":{"type":"structure","members":{"SubscriptionName":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"EventSubscriptionsList":{"type":"list","members":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{"type":"timestamp"},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Enabled":{"type":"boolean"}},"wrapper":true,"name":"EventSubscription"}}}}},"describeEvents":{"name":"DescribeEvents","input":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"StartTime":{"type":"timestamp"},"EndTime":{"type":"timestamp"},"Duration":{"type":"integer"},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"Events":{"type":"list","members":{"type":"structure","members":{"SourceIdentifier":{},"SourceType":{},"Message":{},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Date":{"type":"timestamp"},"EventId":{}},"name":"Event"}}}}},"describeHsmClientCertificates":{"name":"DescribeHsmClientCertificates","input":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"HsmClientCertificates":{"type":"list","members":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmClientCertificatePublicKey":{}},"wrapper":true,"name":"HsmClientCertificate"}}}}},"describeHsmConfigurations":{"name":"DescribeHsmConfigurations","input":{"type":"structure","members":{"HsmConfigurationIdentifier":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"HsmConfigurations":{"type":"list","members":{"type":"structure","members":{"HsmConfigurationIdentifier":{},"Description":{},"HsmIpAddress":{},"HsmPartitionName":{}},"wrapper":true,"name":"HsmConfiguration"}}}}},"describeLoggingStatus":{"name":"DescribeLoggingStatus","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"LoggingEnabled":{"type":"boolean"},"BucketName":{},"S3KeyPrefix":{},"LastSuccessfulDeliveryTime":{"type":"timestamp"},"LastFailureTime":{"type":"timestamp"},"LastFailureMessage":{}}}},"describeOrderableClusterOptions":{"name":"DescribeOrderableClusterOptions","input":{"type":"structure","members":{"ClusterVersion":{},"NodeType":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"OrderableClusterOptions":{"type":"list","members":{"type":"structure","members":{"ClusterVersion":{},"ClusterType":{},"NodeType":{},"AvailabilityZones":{"type":"list","members":{"type":"structure","members":{"Name":{}},"wrapper":true,"name":"AvailabilityZone"}}},"wrapper":true,"name":"OrderableClusterOption"}},"Marker":{}}}},"describeReservedNodeOfferings":{"name":"DescribeReservedNodeOfferings","input":{"type":"structure","members":{"ReservedNodeOfferingId":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedNodeOfferings":{"type":"list","members":{"type":"structure","members":{"ReservedNodeOfferingId":{},"NodeType":{},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"OfferingType":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedNodeOffering"}}}}},"describeReservedNodes":{"name":"DescribeReservedNodes","input":{"type":"structure","members":{"ReservedNodeId":{},"MaxRecords":{"type":"integer"},"Marker":{}}},"output":{"type":"structure","members":{"Marker":{},"ReservedNodes":{"type":"list","members":{"type":"structure","members":{"ReservedNodeId":{},"ReservedNodeOfferingId":{},"NodeType":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"NodeCount":{"type":"integer"},"State":{},"OfferingType":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true,"name":"ReservedNode"}}}}},"describeResize":{"name":"DescribeResize","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"TargetNodeType":{},"TargetNumberOfNodes":{"type":"integer"},"TargetClusterType":{},"Status":{},"ImportTablesCompleted":{"type":"list","members":{}},"ImportTablesInProgress":{"type":"list","members":{}},"ImportTablesNotStarted":{"type":"list","members":{}}}}},"disableLogging":{"name":"DisableLogging","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"LoggingEnabled":{"type":"boolean"},"BucketName":{},"S3KeyPrefix":{},"LastSuccessfulDeliveryTime":{"type":"timestamp"},"LastFailureTime":{"type":"timestamp"},"LastFailureMessage":{}}}},"disableSnapshotCopy":{"name":"DisableSnapshotCopy","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"enableLogging":{"name":"EnableLogging","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"BucketName":{"required":true},"S3KeyPrefix":{}}},"output":{"type":"structure","members":{"LoggingEnabled":{"type":"boolean"},"BucketName":{},"S3KeyPrefix":{},"LastSuccessfulDeliveryTime":{"type":"timestamp"},"LastFailureTime":{"type":"timestamp"},"LastFailureMessage":{}}}},"enableSnapshotCopy":{"name":"EnableSnapshotCopy","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"DestinationRegion":{"required":true},"RetentionPeriod":{"type":"integer"}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"modifyCluster":{"name":"ModifyCluster","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"ClusterType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"name":"ClusterSecurityGroupName"}},"VpcSecurityGroupIds":{"type":"list","members":{"name":"VpcSecurityGroupId"}},"MasterUserPassword":{},"ClusterParameterGroupName":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"PreferredMaintenanceWindow":{},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"modifyClusterParameterGroup":{"name":"ModifyClusterParameterGroup","input":{"type":"structure","members":{"ParameterGroupName":{"required":true},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"},"required":true}}},"output":{"type":"structure","members":{"ParameterGroupName":{},"ParameterGroupStatus":{}}}},"modifyClusterSubnetGroup":{"name":"ModifyClusterSubnetGroup","input":{"type":"structure","members":{"ClusterSubnetGroupName":{"required":true},"Description":{},"SubnetIds":{"type":"list","members":{"name":"SubnetIdentifier"},"required":true}}},"output":{"type":"structure","members":{"ClusterSubnetGroup":{"type":"structure","members":{"ClusterSubnetGroupName":{},"Description":{},"VpcId":{},"SubnetGroupStatus":{},"Subnets":{"type":"list","members":{"type":"structure","members":{"SubnetIdentifier":{},"SubnetAvailabilityZone":{"type":"structure","members":{"Name":{}},"wrapper":true},"SubnetStatus":{}},"name":"Subnet"}}},"wrapper":true}}}},"modifyEventSubscription":{"name":"ModifyEventSubscription","input":{"type":"structure","members":{"SubscriptionName":{"required":true},"SnsTopicArn":{},"SourceType":{},"SourceIds":{"type":"list","members":{"name":"SourceId"}},"EventCategories":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Enabled":{"type":"boolean"}}},"output":{"type":"structure","members":{"EventSubscription":{"type":"structure","members":{"CustomerAwsId":{},"CustSubscriptionId":{},"SnsTopicArn":{},"Status":{},"SubscriptionCreationTime":{"type":"timestamp"},"SourceType":{},"SourceIdsList":{"type":"list","members":{"name":"SourceId"}},"EventCategoriesList":{"type":"list","members":{"name":"EventCategory"}},"Severity":{},"Enabled":{"type":"boolean"}},"wrapper":true}}}},"modifySnapshotCopyRetentionPeriod":{"name":"ModifySnapshotCopyRetentionPeriod","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"RetentionPeriod":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"purchaseReservedNodeOffering":{"name":"PurchaseReservedNodeOffering","input":{"type":"structure","members":{"ReservedNodeOfferingId":{"required":true},"NodeCount":{"type":"integer"}}},"output":{"type":"structure","members":{"ReservedNode":{"type":"structure","members":{"ReservedNodeId":{},"ReservedNodeOfferingId":{},"NodeType":{},"StartTime":{"type":"timestamp"},"Duration":{"type":"integer"},"FixedPrice":{"type":"float"},"UsagePrice":{"type":"float"},"CurrencyCode":{},"NodeCount":{"type":"integer"},"State":{},"OfferingType":{},"RecurringCharges":{"type":"list","members":{"type":"structure","members":{"RecurringChargeAmount":{"type":"float"},"RecurringChargeFrequency":{}},"wrapper":true,"name":"RecurringCharge"}}},"wrapper":true}}}},"rebootCluster":{"name":"RebootCluster","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"resetClusterParameterGroup":{"name":"ResetClusterParameterGroup","input":{"type":"structure","members":{"ParameterGroupName":{"required":true},"ResetAllParameters":{"type":"boolean"},"Parameters":{"type":"list","members":{"type":"structure","members":{"ParameterName":{},"ParameterValue":{},"Description":{},"Source":{},"DataType":{},"AllowedValues":{},"IsModifiable":{"type":"boolean"},"MinimumEngineVersion":{}},"name":"Parameter"}}}},"output":{"type":"structure","members":{"ParameterGroupName":{},"ParameterGroupStatus":{}}}},"restoreFromClusterSnapshot":{"name":"RestoreFromClusterSnapshot","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true},"SnapshotIdentifier":{"required":true},"SnapshotClusterIdentifier":{},"Port":{"type":"integer"},"AvailabilityZone":{},"AllowVersionUpgrade":{"type":"boolean"},"ClusterSubnetGroupName":{},"PubliclyAccessible":{"type":"boolean"},"OwnerAccount":{},"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"ElasticIp":{}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}},"revokeClusterSecurityGroupIngress":{"name":"RevokeClusterSecurityGroupIngress","input":{"type":"structure","members":{"ClusterSecurityGroupName":{"required":true},"CIDRIP":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}}},"output":{"type":"structure","members":{"ClusterSecurityGroup":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Description":{},"EC2SecurityGroups":{"type":"list","members":{"type":"structure","members":{"Status":{},"EC2SecurityGroupName":{},"EC2SecurityGroupOwnerId":{}},"name":"EC2SecurityGroup"}},"IPRanges":{"type":"list","members":{"type":"structure","members":{"Status":{},"CIDRIP":{}},"name":"IPRange"}}},"wrapper":true}}}},"revokeSnapshotAccess":{"name":"RevokeSnapshotAccess","input":{"type":"structure","members":{"SnapshotIdentifier":{"required":true},"SnapshotClusterIdentifier":{},"AccountWithRestoreAccess":{"required":true}}},"output":{"type":"structure","members":{"Snapshot":{"type":"structure","members":{"SnapshotIdentifier":{},"ClusterIdentifier":{},"SnapshotCreateTime":{"type":"timestamp"},"Status":{},"Port":{"type":"integer"},"AvailabilityZone":{},"ClusterCreateTime":{"type":"timestamp"},"MasterUsername":{},"ClusterVersion":{},"SnapshotType":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"DBName":{},"VpcId":{},"Encrypted":{"type":"boolean"},"EncryptedWithHSM":{"type":"boolean"},"AccountsWithRestoreAccess":{"type":"list","members":{"type":"structure","members":{"AccountId":{}},"name":"AccountWithRestoreAccess"}},"OwnerAccount":{},"TotalBackupSizeInMegaBytes":{"type":"float"},"ActualIncrementalBackupSizeInMegaBytes":{"type":"float"},"BackupProgressInMegaBytes":{"type":"float"},"CurrentBackupRateInMegaBytesPerSecond":{"type":"float"},"EstimatedSecondsToCompletion":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"SourceRegion":{}},"wrapper":true}}}},"rotateEncryptionKey":{"name":"RotateEncryptionKey","input":{"type":"structure","members":{"ClusterIdentifier":{"required":true}}},"output":{"type":"structure","members":{"Cluster":{"type":"structure","members":{"ClusterIdentifier":{},"NodeType":{},"ClusterStatus":{},"ModifyStatus":{},"MasterUsername":{},"DBName":{},"Endpoint":{"type":"structure","members":{"Address":{},"Port":{"type":"integer"}}},"ClusterCreateTime":{"type":"timestamp"},"AutomatedSnapshotRetentionPeriod":{"type":"integer"},"ClusterSecurityGroups":{"type":"list","members":{"type":"structure","members":{"ClusterSecurityGroupName":{},"Status":{}},"name":"ClusterSecurityGroup"}},"VpcSecurityGroups":{"type":"list","members":{"type":"structure","members":{"VpcSecurityGroupId":{},"Status":{}},"name":"VpcSecurityGroup"}},"ClusterParameterGroups":{"type":"list","members":{"type":"structure","members":{"ParameterGroupName":{},"ParameterApplyStatus":{}},"name":"ClusterParameterGroup"}},"ClusterSubnetGroupName":{},"VpcId":{},"AvailabilityZone":{},"PreferredMaintenanceWindow":{},"PendingModifiedValues":{"type":"structure","members":{"MasterUserPassword":{},"NodeType":{},"NumberOfNodes":{"type":"integer"},"ClusterType":{},"ClusterVersion":{},"AutomatedSnapshotRetentionPeriod":{"type":"integer"}}},"ClusterVersion":{},"AllowVersionUpgrade":{"type":"boolean"},"NumberOfNodes":{"type":"integer"},"PubliclyAccessible":{"type":"boolean"},"Encrypted":{"type":"boolean"},"RestoreStatus":{"type":"structure","members":{"Status":{},"CurrentRestoreRateInMegaBytesPerSecond":{"type":"float"},"SnapshotSizeInMegaBytes":{"type":"integer"},"ProgressInMegaBytes":{"type":"integer"},"ElapsedTimeInSeconds":{"type":"integer"},"EstimatedTimeToCompletionInSeconds":{"type":"integer"}}},"HsmStatus":{"type":"structure","members":{"HsmClientCertificateIdentifier":{},"HsmConfigurationIdentifier":{},"Status":{}}},"ClusterSnapshotCopyStatus":{"type":"structure","members":{"DestinationRegion":{},"RetentionPeriod":{"type":"integer"}}},"ClusterPublicKey":{},"ClusterNodes":{"type":"list","members":{"type":"structure","members":{"NodeRole":{},"PrivateIPAddress":{},"PublicIPAddress":{}}}},"ElasticIpStatus":{"type":"structure","members":{"ElasticIp":{},"Status":{}}}},"wrapper":true}}}}},"pagination":{"describeClusterParameterGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ParameterGroups"},"describeClusterParameters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Parameters"},"describeClusterSecurityGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ClusterSecurityGroups"},"describeClusterSnapshots":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Snapshots"},"describeClusterSubnetGroups":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ClusterSubnetGroups"},"describeClusterVersions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ClusterVersions"},"describeClusters":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Clusters"},"describeDefaultClusterParameters":{"inputToken":"Marker","outputToken":"DefaultClusterParameters.Marker","limitKey":"MaxRecords","resultKey":"DefaultClusterParameters.Parameters"},"describeEventSubscriptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"EventSubscriptionsList"},"describeEvents":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"Events"},"describeHsmClientCertificates":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"HsmClientCertificates"},"describeHsmConfigurations":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"HsmConfigurations"},"describeOrderableClusterOptions":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"OrderableClusterOptions"},"describeReservedNodeOfferings":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedNodeOfferings"},"describeReservedNodes":{"inputToken":"Marker","outputToken":"Marker","limitKey":"MaxRecords","resultKey":"ReservedNodes"}}});
AWS.Service.defineServiceApi(require("./services/route53"), "2012-12-12", {"format":"rest-xml","apiVersion":"2012-12-12","endpointPrefix":"route53","globalEndpoint":"route53.amazonaws.com","serviceAbbreviation":"Route 53","serviceFullName":"Amazon Route 53","signatureVersion":"v3https","timestampFormat":"iso8601","xmlnamespace":"https://route53.amazonaws.com/doc/2012-12-12/","operations":{"changeResourceRecordSets":{"name":"ChangeResourceRecordSets","http":{"method":"POST","uri":"/2012-12-12/hostedzone/{HostedZoneId}/rrset/"},"input":{"payload":["ChangeBatch"],"wrapper":"ChangeResourceRecordSetsRequest","type":"structure","members":{"HostedZoneId":{"required":true,"location":"uri"},"ChangeBatch":{"type":"structure","members":{"Comment":{},"Changes":{"type":"list","members":{"type":"structure","members":{"Action":{"required":true},"ResourceRecordSet":{"type":"structure","members":{"Name":{"required":true},"Type":{"required":true},"SetIdentifier":{},"Weight":{"type":"integer"},"Region":{},"Failover":{},"TTL":{"type":"integer"},"ResourceRecords":{"type":"list","members":{"type":"structure","members":{"Value":{"required":true}},"order":["Value"],"name":"ResourceRecord"}},"AliasTarget":{"type":"structure","members":{"HostedZoneId":{"required":true},"DNSName":{"required":true},"EvaluateTargetHealth":{"type":"boolean","required":true}},"order":["HostedZoneId","DNSName","EvaluateTargetHealth"]},"HealthCheckId":{}},"order":["Name","Type","SetIdentifier","Weight","Region","Failover","TTL","ResourceRecords","AliasTarget","HealthCheckId"],"required":true}},"order":["Action","ResourceRecordSet"],"name":"Change"},"required":true}},"order":["Comment","Changes"],"required":true}},"order":["HostedZoneId","ChangeBatch"]},"output":{"type":"structure","members":{"ChangeInfo":{"type":"structure","members":{"Id":{},"Status":{},"SubmittedAt":{"type":"timestamp"},"Comment":{}}}}}},"createHealthCheck":{"name":"CreateHealthCheck","http":{"method":"POST","uri":"/2012-12-12/healthcheck"},"input":{"payload":["CallerReference","HealthCheckConfig"],"wrapper":"CreateHealthCheckRequest","type":"structure","members":{"CallerReference":{"required":true},"HealthCheckConfig":{"type":"structure","members":{"IPAddress":{"required":true},"Port":{"type":"integer"},"Type":{"required":true},"ResourcePath":{},"FullyQualifiedDomainName":{}},"order":["IPAddress","Port","Type","ResourcePath","FullyQualifiedDomainName"],"required":true}},"order":["CallerReference","HealthCheckConfig"]},"output":{"type":"structure","members":{"HealthCheck":{"type":"structure","members":{"Id":{},"CallerReference":{},"HealthCheckConfig":{"type":"structure","members":{"IPAddress":{},"Port":{"type":"integer"},"Type":{},"ResourcePath":{},"FullyQualifiedDomainName":{}}}}},"Location":{"location":"header","name":"Location"}}}},"createHostedZone":{"name":"CreateHostedZone","http":{"method":"POST","uri":"/2012-12-12/hostedzone"},"input":{"payload":["Name","CallerReference","HostedZoneConfig"],"wrapper":"CreateHostedZoneRequest","type":"structure","members":{"Name":{"required":true},"CallerReference":{"required":true},"HostedZoneConfig":{"type":"structure","members":{"Comment":{}},"order":["Comment"]}},"order":["Name","CallerReference","HostedZoneConfig"]},"output":{"type":"structure","members":{"HostedZone":{"type":"structure","members":{"Id":{},"Name":{},"CallerReference":{},"Config":{"type":"structure","members":{"Comment":{}}},"ResourceRecordSetCount":{"type":"integer"}}},"ChangeInfo":{"type":"structure","members":{"Id":{},"Status":{},"SubmittedAt":{"type":"timestamp"},"Comment":{}}},"DelegationSet":{"type":"structure","members":{"NameServers":{"type":"list","members":{"name":"NameServer"}}}},"Location":{"location":"header","name":"Location"}}}},"deleteHealthCheck":{"name":"DeleteHealthCheck","http":{"method":"DELETE","uri":"/2012-12-12/healthcheck/{HealthCheckId}"},"input":{"type":"structure","members":{"HealthCheckId":{"required":true,"location":"uri"}},"order":["HealthCheckId"]},"output":{"type":"structure","members":{}}},"deleteHostedZone":{"name":"DeleteHostedZone","http":{"method":"DELETE","uri":"/2012-12-12/hostedzone/{Id}"},"input":{"type":"structure","members":{"Id":{"required":true,"location":"uri"}},"order":["Id"]},"output":{"type":"structure","members":{"ChangeInfo":{"type":"structure","members":{"Id":{},"Status":{},"SubmittedAt":{"type":"timestamp"},"Comment":{}}}}}},"getChange":{"name":"GetChange","http":{"method":"GET","uri":"/2012-12-12/change/{Id}"},"input":{"type":"structure","members":{"Id":{"required":true,"location":"uri"}},"order":["Id"]},"output":{"type":"structure","members":{"ChangeInfo":{"type":"structure","members":{"Id":{},"Status":{},"SubmittedAt":{"type":"timestamp"},"Comment":{}}}}}},"getHealthCheck":{"name":"GetHealthCheck","http":{"method":"GET","uri":"/2012-12-12/healthcheck/{HealthCheckId}"},"input":{"type":"structure","members":{"HealthCheckId":{"required":true,"location":"uri"}},"order":["HealthCheckId"]},"output":{"type":"structure","members":{"HealthCheck":{"type":"structure","members":{"Id":{},"CallerReference":{},"HealthCheckConfig":{"type":"structure","members":{"IPAddress":{},"Port":{"type":"integer"},"Type":{},"ResourcePath":{},"FullyQualifiedDomainName":{}}}}}}}},"getHostedZone":{"name":"GetHostedZone","http":{"method":"GET","uri":"/2012-12-12/hostedzone/{Id}"},"input":{"type":"structure","members":{"Id":{"required":true,"location":"uri"}},"order":["Id"]},"output":{"type":"structure","members":{"HostedZone":{"type":"structure","members":{"Id":{},"Name":{},"CallerReference":{},"Config":{"type":"structure","members":{"Comment":{}}},"ResourceRecordSetCount":{"type":"integer"}}},"DelegationSet":{"type":"structure","members":{"NameServers":{"type":"list","members":{"name":"NameServer"}}}}}}},"listHealthChecks":{"name":"ListHealthChecks","http":{"method":"GET","uri":"/2012-12-12/healthcheck?marker={Marker}&maxitems={MaxItems}"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}},"order":["Marker","MaxItems"]},"output":{"type":"structure","members":{"HealthChecks":{"type":"list","members":{"type":"structure","members":{"Id":{},"CallerReference":{},"HealthCheckConfig":{"type":"structure","members":{"IPAddress":{},"Port":{"type":"integer"},"Type":{},"ResourcePath":{},"FullyQualifiedDomainName":{}}}},"name":"HealthCheck"}},"Marker":{},"IsTruncated":{"type":"boolean"},"NextMarker":{},"MaxItems":{}}}},"listHostedZones":{"name":"ListHostedZones","http":{"method":"GET","uri":"/2012-12-12/hostedzone?marker={Marker}&maxitems={MaxItems}"},"input":{"type":"structure","members":{"Marker":{"location":"uri"},"MaxItems":{"location":"uri"}},"order":["Marker","MaxItems"]},"output":{"type":"structure","members":{"HostedZones":{"type":"list","members":{"type":"structure","members":{"Id":{},"Name":{},"CallerReference":{},"Config":{"type":"structure","members":{"Comment":{}}},"ResourceRecordSetCount":{"type":"integer"}},"name":"HostedZone"}},"Marker":{},"IsTruncated":{"type":"boolean"},"NextMarker":{},"MaxItems":{}}}},"listResourceRecordSets":{"name":"ListResourceRecordSets","http":{"method":"GET","uri":"/2012-12-12/hostedzone/{HostedZoneId}/rrset?type={StartRecordType}&name={StartRecordName}&identifier={StartRecordIdentifier}&maxitems={MaxItems}"},"input":{"type":"structure","members":{"HostedZoneId":{"required":true,"location":"uri"},"StartRecordName":{"location":"uri"},"StartRecordType":{"location":"uri"},"StartRecordIdentifier":{"location":"uri"},"MaxItems":{"location":"uri"}},"order":["HostedZoneId","StartRecordName","StartRecordType","StartRecordIdentifier","MaxItems"]},"output":{"type":"structure","members":{"ResourceRecordSets":{"type":"list","members":{"type":"structure","members":{"Name":{},"Type":{},"SetIdentifier":{},"Weight":{"type":"integer"},"Region":{},"Failover":{},"TTL":{"type":"integer"},"ResourceRecords":{"type":"list","members":{"type":"structure","members":{"Value":{}},"name":"ResourceRecord"}},"AliasTarget":{"type":"structure","members":{"HostedZoneId":{},"DNSName":{},"EvaluateTargetHealth":{"type":"boolean"}}},"HealthCheckId":{}},"name":"ResourceRecordSet"}},"IsTruncated":{"type":"boolean"},"NextRecordName":{},"NextRecordType":{},"NextRecordIdentifier":{},"MaxItems":{}}}}},"pagination":{"listHealthChecks":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"HealthChecks"},"listHostedZones":{"inputToken":"Marker","outputToken":"Marker","moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"HostedZones"},"listResourceRecordSets":{"moreResults":"IsTruncated","limitKey":"MaxItems","resultKey":"ResourceRecordSets","inputToken":["StartRecordName","StartRecordType","StartRecordIdentifier"],"outputToken":["NextRecordName","NextRecordType","NextRecordIdentifier"]}}});
AWS.Service.defineServiceApi(require("./services/s3"), "2006-03-01", {"format":"rest-xml","apiVersion":"2006-03-01","checksumFormat":"md5","endpointPrefix":"s3","globalEndpoint":"s3.amazonaws.com","serviceAbbreviation":"Amazon S3","serviceFullName":"Amazon Simple Storage Service","signatureVersion":"s3","timestampFormat":"rfc822","xmlnamespace":"http://s3.amazonaws.com/doc/2006-03-01/","operations":{"abortMultipartUpload":{"name":"AbortMultipartUpload","http":{"method":"DELETE","uri":"/{Bucket}/{Key}?uploadId={UploadId}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"UploadId":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"completeMultipartUpload":{"name":"CompleteMultipartUpload","http":{"method":"POST","uri":"/{Bucket}/{Key}?uploadId={UploadId}"},"input":{"payload":"MultipartUpload","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"MultipartUpload":{"type":"structure","name":"CompleteMultipartUpload","members":{"Parts":{"type":"list","name":"Part","members":{"type":"structure","members":{"ETag":{},"PartNumber":{"type":"integer"}}},"flattened":true}}},"UploadId":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Bucket":{},"ETag":{},"Expiration":{"type":"timestamp","location":"header","name":"x-amz-expiration"},"Key":{},"Location":{},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"VersionId":{"location":"header","name":"x-amz-version-id"}}}},"copyObject":{"name":"CopyObject","alias":"PutObjectCopy","http":{"method":"PUT","uri":"/{Bucket}/{Key}"},"input":{"type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"Bucket":{"required":true,"location":"uri"},"CacheControl":{"location":"header","name":"Cache-Control"},"ContentDisposition":{"location":"header","name":"Content-Disposition"},"ContentEncoding":{"location":"header","name":"Content-Encoding"},"ContentLanguage":{"location":"header","name":"Content-Language"},"ContentType":{"location":"header","name":"Content-Type"},"CopySource":{"required":true,"location":"header","name":"x-amz-copy-source"},"CopySourceIfMatch":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-match"},"CopySourceIfModifiedSince":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-modified-since"},"CopySourceIfNoneMatch":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-none-match"},"CopySourceIfUnmodifiedSince":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-unmodified-since"},"Expires":{"type":"timestamp","location":"header","name":"Expires"},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"},"Key":{"required":true,"location":"uri"},"Metadata":{"type":"map","location":"header","name":"x-amz-meta-","members":{},"keys":{}},"MetadataDirective":{"location":"header","name":"x-amz-metadata-directive"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","name":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","name":"x-amz-website-redirect-location"}}},"output":{"type":"structure","members":{"CopySourceVersionId":{"location":"header","name":"x-amz-copy-source-version-id"},"Expiration":{"location":"header","name":"x-amz-expiration"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"ETag":{},"LastModified":{}}}},"createBucket":{"name":"CreateBucket","alias":"PutBucket","http":{"method":"PUT","uri":"/{Bucket}"},"input":{"payload":"CreateBucketConfiguration","type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"Bucket":{"required":true,"location":"uri"},"CreateBucketConfiguration":{"type":"structure","members":{"LocationConstraint":{}}},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","name":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"}}},"output":{"type":"structure","members":{"Location":{"location":"header","name":"Location"}}}},"createMultipartUpload":{"name":"CreateMultipartUpload","alias":"InitiateMultipartUpload","http":{"method":"POST","uri":"/{Bucket}/{Key}?uploads"},"input":{"type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"Bucket":{"required":true,"location":"uri"},"CacheControl":{"location":"header","name":"Cache-Control"},"ContentDisposition":{"location":"header","name":"Content-Disposition"},"ContentEncoding":{"location":"header","name":"Content-Encoding"},"ContentLanguage":{"location":"header","name":"Content-Language"},"ContentType":{"location":"header","name":"Content-Type"},"Expires":{"type":"timestamp","location":"header","name":"Expires"},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"},"Key":{"required":true,"location":"uri"},"Metadata":{"type":"map","location":"header","name":"x-amz-meta-","members":{},"keys":{}},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","name":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","name":"x-amz-website-redirect-location"}}},"output":{"type":"structure","members":{"Bucket":{"name":"Bucket"},"Key":{},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"UploadId":{}}}},"deleteBucket":{"name":"DeleteBucket","http":{"method":"DELETE","uri":"/{Bucket}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteBucketCors":{"name":"DeleteBucketCors","http":{"method":"DELETE","uri":"/{Bucket}?cors"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteBucketLifecycle":{"name":"DeleteBucketLifecycle","http":{"method":"DELETE","uri":"/{Bucket}?lifecycle"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteBucketPolicy":{"name":"DeleteBucketPolicy","http":{"method":"DELETE","uri":"/{Bucket}?policy"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteBucketTagging":{"name":"DeleteBucketTagging","http":{"method":"DELETE","uri":"/{Bucket}?tagging"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteBucketWebsite":{"name":"DeleteBucketWebsite","http":{"method":"DELETE","uri":"/{Bucket}?website"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"deleteObject":{"name":"DeleteObject","http":{"method":"DELETE","uri":"/{Bucket}/{Key}?versionId={VersionId}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"MFA":{"location":"header","name":"x-amz-mfa"},"VersionId":{"location":"uri"}}},"output":{"type":"structure","members":{"DeleteMarker":{"type":"boolean","location":"header","name":"x-amz-delete-marker"},"VersionId":{"location":"header","name":"x-amz-version-id"}}}},"deleteObjects":{"name":"DeleteObjects","alias":"DeleteMultipleObjects","http":{"method":"POST","uri":"/{Bucket}?delete"},"input":{"payload":"Delete","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Delete":{"type":"structure","required":true,"members":{"Objects":{"type":"list","required":true,"name":"Object","members":{"type":"structure","members":{"Key":{"required":true},"VersionId":{}}},"flattened":true},"Quiet":{"type":"boolean"}}},"MFA":{"location":"header","name":"x-amz-mfa"}}},"output":{"type":"structure","members":{"Deleted":{"type":"list","members":{"type":"structure","members":{"DeleteMarker":{"type":"boolean"},"DeleteMarkerVersionId":{},"Key":{},"VersionId":{}}},"flattened":true},"Error":{"type":"list","name":"Errors","members":{"type":"structure","members":{"Code":{},"Key":{},"Message":{},"VersionId":{}}},"flattened":true}}}},"getBucketAcl":{"name":"GetBucketAcl","http":{"method":"GET","uri":"/{Bucket}?acl"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"AccessControlList":{"type":"list","name":"Grants","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"xsi:type":{"name":"Type","attribute":true},"URI":{}}},"Permission":{}}}},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}}}}},"getBucketCors":{"name":"GetBucketCors","http":{"method":"GET","uri":"/{Bucket}?cors"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"CORSRule":{"type":"list","name":"CORSRules","members":{"type":"structure","members":{"AllowedHeader":{"type":"list","name":"AllowedHeaders","members":{},"flattened":true},"AllowedMethod":{"type":"list","name":"AllowedMethods","members":{},"flattened":true},"AllowedOrigin":{"type":"list","name":"AllowedOrigins","members":{},"flattened":true},"ExposeHeader":{"type":"list","name":"ExposeHeaders","members":{},"flattened":true},"MaxAgeSeconds":{"type":"integer"}}},"flattened":true}}}},"getBucketLifecycle":{"name":"GetBucketLifecycle","http":{"method":"GET","uri":"/{Bucket}?lifecycle"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Rule":{"type":"list","name":"Rules","members":{"type":"structure","members":{"Expiration":{"type":"structure","members":{"Date":{"type":"timestamp","format":"iso8601"},"Days":{"type":"integer"}}},"ID":{},"Prefix":{},"Status":{},"Transition":{"type":"structure","members":{"Date":{"type":"timestamp","format":"iso8601"},"Days":{"type":"integer"},"StorageClass":{}}}}},"flattened":true}}}},"getBucketLocation":{"name":"GetBucketLocation","http":{"method":"GET","uri":"/{Bucket}?location"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"LocationConstraint":{}}}},"getBucketLogging":{"name":"GetBucketLogging","http":{"method":"GET","uri":"/{Bucket}?logging"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"LoggingEnabled":{"type":"structure","members":{"TargetBucket":{},"TargetGrants":{"type":"list","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"xsi:type":{"name":"Type","attribute":true},"URI":{}}},"Permission":{}}}},"TargetPrefix":{}}}}}},"getBucketNotification":{"name":"GetBucketNotification","http":{"method":"GET","uri":"/{Bucket}?notification"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"TopicConfiguration":{"type":"structure","members":{"Event":{},"Topic":{}}}}}},"getBucketPolicy":{"name":"GetBucketPolicy","http":{"method":"GET","uri":"/{Bucket}?policy"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Policy":{}},"payload":"Policy"}},"getBucketRequestPayment":{"name":"GetBucketRequestPayment","http":{"method":"GET","uri":"/{Bucket}?requestPayment"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Payer":{}}}},"getBucketTagging":{"name":"GetBucketTagging","http":{"method":"GET","uri":"/{Bucket}?tagging"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"TagSet":{"type":"list","members":{"type":"structure","name":"Tag","members":{"Key":{},"Value":{}}}}}}},"getBucketVersioning":{"name":"GetBucketVersioning","http":{"method":"GET","uri":"/{Bucket}?versioning"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"MFADelete":{},"Status":{}}}},"getBucketWebsite":{"name":"GetBucketWebsite","http":{"method":"GET","uri":"/{Bucket}?website"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"ErrorDocument":{"type":"structure","members":{"Key":{}}},"IndexDocument":{"type":"structure","members":{"Suffix":{}}},"RedirectAllRequestsTo":{"type":"structure","members":{"HostName":{},"Protocol":{}}},"RoutingRules":{"type":"list","members":{"type":"structure","name":"RoutingRule","members":{"Condition":{"type":"structure","members":{"HttpErrorCodeReturnedEquals":{},"KeyPrefixEquals":{}}},"Redirect":{"type":"structure","members":{"HostName":{},"HttpRedirectCode":{},"Protocol":{},"ReplaceKeyPrefixWith":{},"ReplaceKeyWith":{}}}}}}}}},"getObject":{"name":"GetObject","http":{"method":"GET","uri":"/{Bucket}/{Key}?versionId={VersionId}&response-content-type={ResponseContentType}&response-content-language={ResponseContentLanguage}&response-expires={ResponseExpires}&response-cache-control={ResponseCacheControl}&response-content-disposition={ResponseContentDisposition}&response-content-encoding={ResponseContentEncoding}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"},"IfModifiedSince":{"type":"timestamp","location":"header","name":"If-Modified-Since"},"IfNoneMatch":{"location":"header","name":"If-None-Match"},"IfUnmodifiedSince":{"type":"timestamp","location":"header","name":"If-Unmodified-Since"},"Key":{"required":true,"location":"uri"},"Range":{"location":"header","name":"Range"},"ResponseCacheControl":{"location":"uri"},"ResponseContentDisposition":{"location":"uri"},"ResponseContentEncoding":{"location":"uri"},"ResponseContentLanguage":{"location":"uri"},"ResponseContentType":{"location":"uri"},"ResponseExpires":{"type":"timestamp","location":"uri"},"VersionId":{"location":"uri"}}},"output":{"type":"structure","members":{"AcceptRanges":{"location":"header","name":"accept-ranges"},"Body":{"type":"binary","streaming":true},"CacheControl":{"location":"header","name":"Cache-Control"},"ContentDisposition":{"location":"header","name":"Content-Disposition"},"ContentEncoding":{"location":"header","name":"Content-Encoding"},"ContentLanguage":{"location":"header","name":"Content-Language"},"ContentLength":{"type":"integer","location":"header","name":"Content-Length"},"ContentType":{"location":"header","name":"Content-Type"},"DeleteMarker":{"type":"boolean","location":"header","name":"x-amz-delete-marker"},"ETag":{"location":"header","name":"ETag"},"Expiration":{"location":"header","name":"x-amz-expiration"},"Expires":{"type":"timestamp","location":"header","name":"Expires"},"LastModified":{"type":"timestamp","location":"header","name":"Last-Modified"},"Metadata":{"type":"map","location":"header","name":"x-amz-meta-","members":{},"keys":{}},"MissingMeta":{"type":"integer","location":"header","name":"x-amz-missing-meta"},"Restore":{"location":"header","name":"x-amz-restore"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"VersionId":{"location":"header","name":"x-amz-version-id"},"WebsiteRedirectLocation":{"location":"header","name":"x-amz-website-redirect-location"}},"payload":"Body"}},"getObjectAcl":{"name":"GetObjectAcl","http":{"method":"GET","uri":"/{Bucket}/{Key}?acl&versionId={VersionId}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"VersionId":{"location":"uri"}}},"output":{"type":"structure","members":{"AccessControlList":{"type":"list","name":"Grants","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"xsi:type":{"name":"Type","attribute":true},"URI":{}}},"Permission":{}}}},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}}}}},"getObjectTorrent":{"name":"GetObjectTorrent","http":{"method":"GET","uri":"/{Bucket}/{Key}?torrent"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Body":{"type":"binary","streaming":true}},"payload":"Body"}},"headBucket":{"name":"HeadBucket","http":{"method":"HEAD","uri":"/{Bucket}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"headObject":{"name":"HeadObject","http":{"method":"HEAD","uri":"/{Bucket}/{Key}?versionId={VersionId}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"IfMatch":{"location":"header","name":"If-Match"},"IfModifiedSince":{"type":"timestamp","location":"header","name":"If-Modified-Since"},"IfNoneMatch":{"location":"header","name":"If-None-Match"},"IfUnmodifiedSince":{"type":"timestamp","location":"header","name":"If-Unmodified-Since"},"Key":{"required":true,"location":"uri"},"Range":{"location":"header","name":"Range"},"VersionId":{"location":"uri"}}},"output":{"type":"structure","members":{"AcceptRanges":{"location":"header","name":"accept-ranges"},"CacheControl":{"location":"header","name":"Cache-Control"},"ContentDisposition":{"location":"header","name":"Content-Disposition"},"ContentEncoding":{"location":"header","name":"Content-Encoding"},"ContentLanguage":{"location":"header","name":"Content-Language"},"ContentLength":{"type":"integer","location":"header","name":"Content-Length"},"ContentType":{"location":"header","name":"Content-Type"},"DeleteMarker":{"type":"boolean","location":"header","name":"x-amz-delete-marker"},"ETag":{"location":"header","name":"ETag"},"Expiration":{"location":"header","name":"x-amz-expiration"},"Expires":{"type":"timestamp","location":"header","name":"Expires"},"LastModified":{"type":"timestamp","location":"header","name":"Last-Modified"},"Metadata":{"type":"map","location":"header","name":"x-amz-meta-","members":{},"keys":{}},"MissingMeta":{"type":"integer","location":"header","name":"x-amz-missing-meta"},"Restore":{"location":"header","name":"x-amz-restore"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"VersionId":{"location":"header","name":"x-amz-version-id"},"WebsiteRedirectLocation":{"location":"header","name":"x-amz-website-redirect-location"}}}},"listBuckets":{"name":"ListBuckets","alias":"GetService","http":{"method":"GET","uri":"/"},"input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"Buckets":{"type":"list","members":{"type":"structure","name":"Bucket","members":{"CreationDate":{"type":"timestamp"},"Name":{}}}},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}}}}},"listMultipartUploads":{"name":"ListMultipartUploads","http":{"method":"GET","uri":"/{Bucket}?uploads&prefix={Prefix}&delimiter={Delimiter}&max-uploads={MaxUploads}&key-marker={KeyMarker}&upload-id-marker={UploadIdMarker}&encoding-type={EncodingType}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Delimiter":{"location":"uri"},"EncodingType":{"location":"uri"},"KeyMarker":{"location":"uri"},"MaxUploads":{"type":"integer","location":"uri"},"Prefix":{"location":"uri"},"UploadIdMarker":{"location":"uri"}}},"output":{"type":"structure","members":{"Bucket":{},"CommonPrefixes":{"type":"list","members":{"type":"structure","members":{"Prefix":{}}},"flattened":true},"EncodingType":{"location":"header","name":"Encoding-Type"},"IsTruncated":{"type":"boolean"},"KeyMarker":{},"MaxUploads":{"type":"integer"},"NextKeyMarker":{},"NextUploadIdMarker":{},"Prefix":{},"UploadIdMarker":{},"Upload":{"type":"list","name":"Uploads","members":{"type":"structure","members":{"Initiated":{"type":"timestamp"},"Initiator":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"Key":{},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"StorageClass":{},"UploadId":{}}},"flattened":true}}}},"listObjectVersions":{"name":"ListObjectVersions","alias":"GetBucketObjectVersions","http":{"method":"GET","uri":"/{Bucket}?versions&delimiter={Delimiter}&key-marker={KeyMarker}&max-keys={MaxKeys}&prefix={Prefix}&version-id-marker={VersionIdMarker}&encoding-type={EncodingType}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Delimiter":{"location":"uri"},"EncodingType":{"location":"uri"},"KeyMarker":{"location":"uri"},"MaxKeys":{"type":"integer","location":"uri"},"Prefix":{"location":"uri"},"VersionIdMarker":{"location":"uri"}}},"output":{"type":"structure","members":{"CommonPrefixes":{"type":"list","members":{"type":"structure","members":{"Prefix":{}}},"flattened":true},"DeleteMarker":{"type":"list","name":"DeleteMarkers","members":{"type":"structure","members":{"IsLatest":{"type":"boolean"},"Key":{},"LastModified":{"type":"timestamp"},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"VersionId":{}}},"flattened":true},"EncodingType":{"location":"header","name":"Encoding-Type"},"IsTruncated":{"type":"boolean"},"KeyMarker":{},"MaxKeys":{"type":"integer"},"Name":{},"NextKeyMarker":{},"NextVersionIdMarker":{},"Prefix":{},"VersionIdMarker":{},"Version":{"type":"list","name":"Versions","members":{"type":"structure","members":{"ETag":{},"IsLatest":{"type":"boolean"},"Key":{},"LastModified":{"type":"timestamp"},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"Size":{},"StorageClass":{},"VersionId":{}}},"flattened":true}}}},"listObjects":{"name":"ListObjects","alias":"GetBucket","http":{"method":"GET","uri":"/{Bucket}?delimiter={Delimiter}&marker={Marker}&max-keys={MaxKeys}&prefix={Prefix}&encoding-type={EncodingType}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Delimiter":{"location":"uri"},"EncodingType":{"location":"uri"},"Marker":{"location":"uri"},"MaxKeys":{"type":"integer","location":"uri"},"Prefix":{"location":"uri"}}},"output":{"type":"structure","members":{"CommonPrefixes":{"type":"list","members":{"type":"structure","members":{"Prefix":{}}},"flattened":true},"Contents":{"type":"list","members":{"type":"structure","members":{"ETag":{},"Key":{},"LastModified":{"type":"timestamp"},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"Size":{"type":"integer"},"StorageClass":{}}},"flattened":true},"EncodingType":{"location":"header","name":"Encoding-Type"},"IsTruncated":{"type":"boolean"},"Marker":{},"MaxKeys":{"type":"integer"},"Name":{},"NextMarker":{},"Prefix":{}}}},"listParts":{"name":"ListParts","http":{"method":"GET","uri":"/{Bucket}/{Key}?uploadId={UploadId}&max-parts={MaxParts}&part-number-marker={PartNumberMarker}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"MaxParts":{"type":"integer","location":"uri"},"PartNumberMarker":{"type":"integer","location":"uri"},"UploadId":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"Bucket":{},"Initiator":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"IsTruncated":{"type":"boolean"},"Key":{},"MaxParts":{"type":"integer"},"NextPartNumberMarker":{"type":"integer"},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}},"PartNumberMarker":{"type":"integer"},"Part":{"type":"list","name":"Parts","members":{"type":"structure","members":{"ETag":{},"LastModified":{"type":"timestamp"},"PartNumber":{"type":"integer"},"Size":{"type":"integer"}}},"flattened":true},"StorageClass":{},"UploadId":{}}}},"putBucketAcl":{"name":"PutBucketAcl","http":{"method":"PUT","uri":"/{Bucket}?acl"},"input":{"payload":"AccessControlPolicy","type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"AccessControlPolicy":{"type":"structure","members":{"Grants":{"type":"list","name":"AccessControlList","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"Type":{"required":true,"name":"xsi:type","attribute":true},"URI":{}}},"Permission":{}}}},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}}}},"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","name":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"}}},"output":{"type":"structure","members":{}}},"putBucketCors":{"name":"PutBucketCors","http":{"method":"PUT","uri":"/{Bucket}?cors"},"input":{"payload":"CORSConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"CORSConfiguration":{"type":"structure","members":{"CORSRules":{"type":"list","name":"CORSRule","members":{"type":"structure","members":{"AllowedHeaders":{"type":"list","name":"AllowedHeader","members":{},"flattened":true},"AllowedMethods":{"type":"list","name":"AllowedMethod","members":{},"flattened":true},"AllowedOrigins":{"type":"list","name":"AllowedOrigin","members":{},"flattened":true},"ExposeHeaders":{"type":"list","name":"ExposeHeader","members":{},"flattened":true},"MaxAgeSeconds":{"type":"integer"}}},"flattened":true}}},"ContentMD5":{"location":"header","name":"Content-MD5"}}},"output":{"type":"structure","members":{}}},"putBucketLifecycle":{"name":"PutBucketLifecycle","http":{"method":"PUT","uri":"/{Bucket}?lifecycle"},"input":{"payload":"LifecycleConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"LifecycleConfiguration":{"type":"structure","members":{"Rules":{"type":"list","required":true,"name":"Rule","members":{"type":"structure","members":{"Expiration":{"type":"structure","members":{"Date":{"type":"timestamp","format":"iso8601"},"Days":{"type":"integer"}}},"ID":{},"Prefix":{"required":true},"Status":{"required":true},"Transition":{"type":"structure","members":{"Date":{"type":"timestamp","format":"iso8601"},"Days":{"type":"integer"},"StorageClass":{}}}}},"flattened":true}}}}},"output":{"type":"structure","members":{}}},"putBucketLogging":{"name":"PutBucketLogging","http":{"method":"PUT","uri":"/{Bucket}?logging"},"input":{"payload":"BucketLoggingStatus","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"BucketLoggingStatus":{"type":"structure","required":true,"members":{"LoggingEnabled":{"type":"structure","members":{"TargetBucket":{},"TargetGrants":{"type":"list","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"Type":{"required":true,"name":"xsi:type","attribute":true},"URI":{}}},"Permission":{}}}},"TargetPrefix":{}}}}},"ContentMD5":{"location":"header","name":"Content-MD5"}}},"output":{"type":"structure","members":{}}},"putBucketNotification":{"name":"PutBucketNotification","http":{"method":"PUT","uri":"/{Bucket}?notification"},"input":{"payload":"NotificationConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"NotificationConfiguration":{"type":"structure","required":true,"members":{"TopicConfiguration":{"type":"structure","required":true,"members":{"Event":{},"Topic":{}}}}}}},"output":{"type":"structure","members":{}}},"putBucketPolicy":{"name":"PutBucketPolicy","http":{"method":"PUT","uri":"/{Bucket}?policy"},"input":{"payload":"Policy","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"Policy":{"required":true}}},"output":{"type":"structure","members":{}}},"putBucketRequestPayment":{"name":"PutBucketRequestPayment","http":{"method":"PUT","uri":"/{Bucket}?requestPayment"},"input":{"payload":"RequestPaymentConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"RequestPaymentConfiguration":{"type":"structure","required":true,"members":{"Payer":{"required":true}}}}},"output":{"type":"structure","members":{}}},"putBucketTagging":{"name":"PutBucketTagging","http":{"method":"PUT","uri":"/{Bucket}?tagging"},"input":{"payload":"Tagging","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"Tagging":{"type":"structure","required":true,"members":{"TagSet":{"type":"list","required":true,"members":{"type":"structure","required":true,"name":"Tag","members":{"Key":{"required":true},"Value":{"required":true}}}}}}}},"output":{"type":"structure","members":{}}},"putBucketVersioning":{"name":"PutBucketVersioning","http":{"method":"PUT","uri":"/{Bucket}?versioning"},"input":{"payload":"VersioningConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"MFA":{"location":"header","name":"x-amz-mfa"},"VersioningConfiguration":{"type":"structure","required":true,"members":{"MFADelete":{},"Status":{}}}}},"output":{"type":"structure","members":{}}},"putBucketWebsite":{"name":"PutBucketWebsite","http":{"method":"PUT","uri":"/{Bucket}?website"},"input":{"payload":"WebsiteConfiguration","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"WebsiteConfiguration":{"type":"structure","required":true,"members":{"ErrorDocument":{"type":"structure","members":{"Key":{"required":true}}},"IndexDocument":{"type":"structure","members":{"Suffix":{"required":true}}},"RedirectAllRequestsTo":{"type":"structure","members":{"HostName":{"required":true},"Protocol":{}}},"RoutingRules":{"type":"list","members":{"type":"structure","name":"RoutingRule","members":{"Condition":{"type":"structure","members":{"HttpErrorCodeReturnedEquals":{},"KeyPrefixEquals":{}}},"Redirect":{"type":"structure","required":true,"members":{"HostName":{},"HttpRedirectCode":{},"Protocol":{},"ReplaceKeyPrefixWith":{},"ReplaceKeyWith":{}}}}}}}}}},"output":{"type":"structure","members":{}}},"putObject":{"name":"PutObject","http":{"method":"PUT","uri":"/{Bucket}/{Key}"},"input":{"payload":"Body","type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"Body":{"type":"binary","streaming":true},"Bucket":{"required":true,"location":"uri"},"CacheControl":{"location":"header","name":"Cache-Control"},"ContentDisposition":{"location":"header","name":"Content-Disposition"},"ContentEncoding":{"location":"header","name":"Content-Encoding"},"ContentLanguage":{"location":"header","name":"Content-Language"},"ContentLength":{"type":"integer","location":"header","name":"Content-Length"},"ContentMD5":{"location":"header","name":"Content-MD5"},"ContentType":{"location":"header","name":"Content-Type"},"Expires":{"type":"timestamp","location":"header","name":"Expires"},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"},"Key":{"required":true,"location":"uri"},"Metadata":{"type":"map","location":"header","name":"x-amz-meta-","members":{},"keys":{}},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"StorageClass":{"location":"header","name":"x-amz-storage-class"},"WebsiteRedirectLocation":{"location":"header","name":"x-amz-website-redirect-location"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"Expiration":{"type":"timestamp","location":"header","name":"x-amz-expiration"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"VersionId":{"location":"header","name":"x-amz-version-id"}}}},"putObjectAcl":{"name":"PutObjectAcl","http":{"method":"PUT","uri":"/{Bucket}/{Key}?acl"},"input":{"payload":"AccessControlPolicy","type":"structure","members":{"ACL":{"location":"header","name":"x-amz-acl"},"AccessControlPolicy":{"type":"structure","members":{"Grants":{"type":"list","name":"AccessControlList","members":{"type":"structure","name":"Grant","members":{"Grantee":{"type":"structure","xmlns":{"uri":"http://www.w3.org/2001/XMLSchema-instance","prefix":"xsi"},"members":{"DisplayName":{},"EmailAddress":{},"ID":{},"Type":{"required":true,"name":"xsi:type","attribute":true},"URI":{}}},"Permission":{}}}},"Owner":{"type":"structure","members":{"DisplayName":{},"ID":{}}}}},"Bucket":{"required":true,"location":"uri"},"ContentMD5":{"location":"header","name":"Content-MD5"},"GrantFullControl":{"location":"header","name":"x-amz-grant-full-control"},"GrantRead":{"location":"header","name":"x-amz-grant-read"},"GrantReadACP":{"location":"header","name":"x-amz-grant-read-acp"},"GrantWrite":{"location":"header","name":"x-amz-grant-write"},"GrantWriteACP":{"location":"header","name":"x-amz-grant-write-acp"},"Key":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{}}},"restoreObject":{"name":"RestoreObject","alias":"PostObjectRestore","http":{"method":"POST","uri":"/{Bucket}/{Key}?restore"},"input":{"payload":"RestoreRequest","type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"Key":{"required":true,"location":"uri"},"RestoreRequest":{"type":"structure","members":{"Days":{"type":"integer","required":true}}}}},"output":{"type":"structure","members":{}}},"uploadPart":{"name":"UploadPart","http":{"method":"PUT","uri":"/{Bucket}/{Key}?partNumber={PartNumber}&uploadId={UploadId}"},"input":{"payload":"Body","type":"structure","members":{"Body":{"type":"binary","streaming":true},"Bucket":{"required":true,"location":"uri"},"ContentLength":{"type":"integer","location":"header","name":"Content-Length"},"ContentMD5":{"location":"header","name":"Content-MD5"},"Key":{"required":true,"location":"uri"},"PartNumber":{"type":"integer","required":true,"location":"uri"},"UploadId":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"ETag":{"location":"header","name":"ETag"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"}}}},"uploadPartCopy":{"name":"UploadPartCopy","http":{"method":"PUT","uri":"/{Bucket}/{Key}?partNumber={PartNumber}&uploadId={UploadId}"},"input":{"type":"structure","members":{"Bucket":{"required":true,"location":"uri"},"CopySource":{"required":true,"location":"header","name":"x-amz-copy-source"},"CopySourceIfMatch":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-match"},"CopySourceIfModifiedSince":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-modified-since"},"CopySourceIfNoneMatch":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-none-match"},"CopySourceIfUnmodifiedSince":{"type":"timestamp","location":"header","name":"x-amz-copy-source-if-unmodified-since"},"CopySourceRange":{"location":"header","name":"x-amz-copy-source-range"},"Key":{"required":true,"location":"uri"},"PartNumber":{"type":"integer","required":true,"location":"uri"},"UploadId":{"required":true,"location":"uri"}}},"output":{"type":"structure","members":{"CopySourceVersionId":{"location":"header","name":"x-amz-copy-source-version-id"},"ServerSideEncryption":{"location":"header","name":"x-amz-server-side-encryption"},"ETag":{},"LastModified":{"type":"timestamp"}}}}},"pagination":{"listMultipartUploads":{"limitKey":"MaxUploads","moreResults":"IsTruncated","outputToken":["NextKeyMarker","NextUploadIdMarker"],"inputToken":["KeyMarker","UploadIdMarker"],"resultKey":"Uploads"},"listObjectVersions":{"moreResults":"IsTruncated","limitKey":"MaxKeys","outputToken":["NextKeyMarker","NextVersionIdMarker"],"inputToken":["KeyMarker","VersionIdMarker"],"resultKey":"Versions"},"listObjects":{"moreResults":"IsTruncated","limitKey":"MaxKeys","outputToken":"NextMarker or Contents[-1].Key","inputToken":"Marker","resultKey":["Contents","CommonPrefixes"]},"listParts":{"moreResults":"IsTruncated","limitKey":"MaxParts","outputToken":"NextPartNumberMarker","inputToken":"PartNumberMarker","resultKey":"Parts"}}});
AWS.Service.defineServiceApi(require("./services/ses"), "2010-12-01", {"format":"query","apiVersion":"2010-12-01","endpointPrefix":"email","resultWrapped":true,"serviceAbbreviation":"Amazon SES","serviceFullName":"Amazon Simple Email Service","signatureVersion":"v4","signingName":"ses","timestampFormat":"iso8601","operations":{"deleteIdentity":{"name":"DeleteIdentity","input":{"type":"structure","members":{"Identity":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteVerifiedEmailAddress":{"name":"DeleteVerifiedEmailAddress","input":{"type":"structure","members":{"EmailAddress":{"required":true}}},"output":{"type":"structure","members":{}}},"getIdentityDkimAttributes":{"name":"GetIdentityDkimAttributes","input":{"type":"structure","members":{"Identities":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"DkimAttributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"DkimEnabled":{"type":"boolean"},"DkimVerificationStatus":{},"DkimTokens":{"type":"list","members":{}}}}}}}},"getIdentityNotificationAttributes":{"name":"GetIdentityNotificationAttributes","input":{"type":"structure","members":{"Identities":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"NotificationAttributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"BounceTopic":{},"ComplaintTopic":{},"ForwardingEnabled":{"type":"boolean"}}}}}}},"getIdentityVerificationAttributes":{"name":"GetIdentityVerificationAttributes","input":{"type":"structure","members":{"Identities":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"VerificationAttributes":{"type":"map","keys":{},"members":{"type":"structure","members":{"VerificationStatus":{},"VerificationToken":{}}}}}}},"getSendQuota":{"name":"GetSendQuota","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"Max24HourSend":{"type":"float"},"MaxSendRate":{"type":"float"},"SentLast24Hours":{"type":"float"}}}},"getSendStatistics":{"name":"GetSendStatistics","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"SendDataPoints":{"type":"list","members":{"type":"structure","members":{"Timestamp":{"type":"timestamp"},"DeliveryAttempts":{"type":"integer"},"Bounces":{"type":"integer"},"Complaints":{"type":"integer"},"Rejects":{"type":"integer"}}}}}}},"listIdentities":{"name":"ListIdentities","input":{"type":"structure","members":{"IdentityType":{},"NextToken":{},"MaxItems":{"type":"integer"}}},"output":{"type":"structure","members":{"Identities":{"type":"list","members":{}},"NextToken":{}}}},"listVerifiedEmailAddresses":{"name":"ListVerifiedEmailAddresses","input":{"type":"structure","members":{}},"output":{"type":"structure","members":{"VerifiedEmailAddresses":{"type":"list","members":{}}}}},"sendEmail":{"name":"SendEmail","input":{"type":"structure","members":{"Source":{"required":true},"Destination":{"type":"structure","members":{"ToAddresses":{"type":"list","members":{}},"CcAddresses":{"type":"list","members":{}},"BccAddresses":{"type":"list","members":{}}},"required":true},"Message":{"type":"structure","members":{"Subject":{"type":"structure","members":{"Data":{"required":true},"Charset":{}},"required":true},"Body":{"type":"structure","members":{"Text":{"type":"structure","members":{"Data":{"required":true},"Charset":{}}},"Html":{"type":"structure","members":{"Data":{"required":true},"Charset":{}}}},"required":true}},"required":true},"ReplyToAddresses":{"type":"list","members":{}},"ReturnPath":{}}},"output":{"type":"structure","members":{"MessageId":{}}}},"sendRawEmail":{"name":"SendRawEmail","input":{"type":"structure","members":{"Source":{},"Destinations":{"type":"list","members":{}},"RawMessage":{"type":"structure","members":{"Data":{"type":"base64","required":true}},"required":true}}},"output":{"type":"structure","members":{"MessageId":{}}}},"setIdentityDkimEnabled":{"name":"SetIdentityDkimEnabled","input":{"type":"structure","members":{"Identity":{"required":true},"DkimEnabled":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{}}},"setIdentityFeedbackForwardingEnabled":{"name":"SetIdentityFeedbackForwardingEnabled","input":{"type":"structure","members":{"Identity":{"required":true},"ForwardingEnabled":{"type":"boolean","required":true}}},"output":{"type":"structure","members":{}}},"setIdentityNotificationTopic":{"name":"SetIdentityNotificationTopic","input":{"type":"structure","members":{"Identity":{"required":true},"NotificationType":{"required":true},"SnsTopic":{}}},"output":{"type":"structure","members":{}}},"verifyDomainDkim":{"name":"VerifyDomainDkim","input":{"type":"structure","members":{"Domain":{"required":true}}},"output":{"type":"structure","members":{"DkimTokens":{"type":"list","members":{}}}}},"verifyDomainIdentity":{"name":"VerifyDomainIdentity","input":{"type":"structure","members":{"Domain":{"required":true}}},"output":{"type":"structure","members":{"VerificationToken":{}}}},"verifyEmailAddress":{"name":"VerifyEmailAddress","input":{"type":"structure","members":{"EmailAddress":{"required":true}}},"output":{"type":"structure","members":{}}},"verifyEmailIdentity":{"name":"VerifyEmailIdentity","input":{"type":"structure","members":{"EmailAddress":{"required":true}}},"output":{"type":"structure","members":{}}}},"pagination":{"listIdentities":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxItems","resultKey":"Identities"},"listVerifiedEmailAddresses":{"resultKey":"VerifiedEmailAddresses"}}});
AWS.Service.defineServiceApi(require("./services/simpledb"), "2009-04-15", {"format":"query","apiVersion":"2009-04-15","endpointPrefix":"sdb","resultWrapped":true,"serviceFullName":"Amazon SimpleDB","signatureVersion":"v2","timestampFormat":"iso8601","operations":{"batchDeleteAttributes":{"name":"BatchDeleteAttributes","input":{"type":"structure","members":{"DomainName":{"required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true,"name":"ItemName"},"Attributes":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"AlternateNameEncoding":{},"Value":{"required":true},"AlternateValueEncoding":{}},"name":"Attribute"},"flattened":true}},"name":"Item"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{}}},"batchPutAttributes":{"name":"BatchPutAttributes","input":{"type":"structure","members":{"DomainName":{"required":true},"Items":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true,"name":"ItemName"},"Attributes":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true},"Replace":{"type":"boolean"}},"name":"Attribute"},"flattened":true,"required":true}},"name":"Item"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{}}},"createDomain":{"name":"CreateDomain","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteAttributes":{"name":"DeleteAttributes","input":{"type":"structure","members":{"DomainName":{"required":true},"ItemName":{"required":true},"Attributes":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"AlternateNameEncoding":{},"Value":{"required":true},"AlternateValueEncoding":{}},"name":"Attribute"},"flattened":true},"Expected":{"type":"structure","members":{"Name":{},"Value":{},"Exists":{"type":"boolean"}}}}},"output":{"type":"structure","members":{}}},"deleteDomain":{"name":"DeleteDomain","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{}}},"domainMetadata":{"name":"DomainMetadata","input":{"type":"structure","members":{"DomainName":{"required":true}}},"output":{"type":"structure","members":{"ItemCount":{"type":"integer"},"ItemNamesSizeBytes":{"type":"integer"},"AttributeNameCount":{"type":"integer"},"AttributeNamesSizeBytes":{"type":"integer"},"AttributeValueCount":{"type":"integer"},"AttributeValuesSizeBytes":{"type":"integer"},"Timestamp":{"type":"integer"}}}},"getAttributes":{"name":"GetAttributes","input":{"type":"structure","members":{"DomainName":{"required":true},"ItemName":{"required":true},"AttributeNames":{"type":"list","members":{"name":"AttributeName"},"flattened":true},"ConsistentRead":{"type":"boolean"}}},"output":{"type":"structure","members":{"Attribute":{"type":"list","members":{"type":"structure","members":{"Name":{},"AlternateNameEncoding":{},"Value":{},"AlternateValueEncoding":{}},"name":"Attribute"},"flattened":true,"name":"Attributes"}}}},"listDomains":{"name":"ListDomains","input":{"type":"structure","members":{"MaxNumberOfDomains":{"type":"integer"},"NextToken":{}}},"output":{"type":"structure","members":{"DomainName":{"type":"list","members":{"name":"DomainName"},"flattened":true,"name":"DomainNames"},"NextToken":{}}}},"putAttributes":{"name":"PutAttributes","input":{"type":"structure","members":{"DomainName":{"required":true},"ItemName":{"required":true},"Attributes":{"type":"list","members":{"type":"structure","members":{"Name":{"required":true},"Value":{"required":true},"Replace":{"type":"boolean"}},"name":"Attribute"},"flattened":true,"required":true},"Expected":{"type":"structure","members":{"Name":{},"Value":{},"Exists":{"type":"boolean"}}}}},"output":{"type":"structure","members":{}}},"select":{"name":"Select","input":{"type":"structure","members":{"SelectExpression":{"required":true},"NextToken":{},"ConsistentRead":{"type":"boolean"}}},"output":{"type":"structure","members":{"Item":{"type":"list","members":{"type":"structure","members":{"Name":{},"AlternateNameEncoding":{},"Attribute":{"type":"list","members":{"type":"structure","members":{"Name":{},"AlternateNameEncoding":{},"Value":{},"AlternateValueEncoding":{}},"name":"Attribute"},"flattened":true,"name":"Attributes"}},"name":"Item"},"flattened":true,"name":"Items"},"NextToken":{}}}}},"pagination":{"listDomains":{"inputToken":"NextToken","outputToken":"NextToken","limitKey":"MaxNumberOfDomains","resultKey":"DomainNames"},"select":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Items"}}});
AWS.Service.defineServiceApi(require("./services/simpleworkflow"), "2012-01-25", {"format":"json","apiVersion":"2012-01-25","endpointPrefix":"swf","jsonVersion":"1.0","serviceAbbreviation":"Amazon SWF","serviceFullName":"Amazon Simple Workflow Service","signatureVersion":"v4","targetPrefix":"SimpleWorkflowService","timestampFormat":"unixTimestamp","operations":{"countClosedWorkflowExecutions":{"name":"CountClosedWorkflowExecutions","input":{"type":"structure","members":{"domain":{"required":true},"startTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}}},"closeTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}}},"executionFilter":{"type":"structure","members":{"workflowId":{"required":true}}},"typeFilter":{"type":"structure","members":{"name":{"required":true},"version":{}}},"tagFilter":{"type":"structure","members":{"tag":{"required":true}}},"closeStatusFilter":{"type":"structure","members":{"status":{"required":true}}}}},"output":{"type":"structure","members":{"count":{"type":"integer"},"truncated":{"type":"boolean"}}}},"countOpenWorkflowExecutions":{"name":"CountOpenWorkflowExecutions","input":{"type":"structure","members":{"domain":{"required":true},"startTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}},"required":true},"typeFilter":{"type":"structure","members":{"name":{"required":true},"version":{}}},"tagFilter":{"type":"structure","members":{"tag":{"required":true}}},"executionFilter":{"type":"structure","members":{"workflowId":{"required":true}}}}},"output":{"type":"structure","members":{"count":{"type":"integer"},"truncated":{"type":"boolean"}}}},"countPendingActivityTasks":{"name":"CountPendingActivityTasks","input":{"type":"structure","members":{"domain":{"required":true},"taskList":{"type":"structure","members":{"name":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"count":{"type":"integer"},"truncated":{"type":"boolean"}}}},"countPendingDecisionTasks":{"name":"CountPendingDecisionTasks","input":{"type":"structure","members":{"domain":{"required":true},"taskList":{"type":"structure","members":{"name":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"count":{"type":"integer"},"truncated":{"type":"boolean"}}}},"deprecateActivityType":{"name":"DeprecateActivityType","input":{"type":"structure","members":{"domain":{"required":true},"activityType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true}}},"output":{"type":"structure","members":{}}},"deprecateDomain":{"name":"DeprecateDomain","input":{"type":"structure","members":{"name":{"required":true}}},"output":{"type":"structure","members":{}}},"deprecateWorkflowType":{"name":"DeprecateWorkflowType","input":{"type":"structure","members":{"domain":{"required":true},"workflowType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true}}},"output":{"type":"structure","members":{}}},"describeActivityType":{"name":"DescribeActivityType","input":{"type":"structure","members":{"domain":{"required":true},"activityType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"typeInfo":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"status":{},"description":{},"creationDate":{"type":"timestamp"},"deprecationDate":{"type":"timestamp"}}},"configuration":{"type":"structure","members":{"defaultTaskStartToCloseTimeout":{},"defaultTaskHeartbeatTimeout":{},"defaultTaskList":{"type":"structure","members":{"name":{}}},"defaultTaskScheduleToStartTimeout":{},"defaultTaskScheduleToCloseTimeout":{}}}}}},"describeDomain":{"name":"DescribeDomain","input":{"type":"structure","members":{"name":{"required":true}}},"output":{"type":"structure","members":{"domainInfo":{"type":"structure","members":{"name":{},"status":{},"description":{}}},"configuration":{"type":"structure","members":{"workflowExecutionRetentionPeriodInDays":{}}}}}},"describeWorkflowExecution":{"name":"DescribeWorkflowExecution","input":{"type":"structure","members":{"domain":{"required":true},"execution":{"type":"structure","members":{"workflowId":{"required":true},"runId":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"executionInfo":{"type":"structure","members":{"execution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"startTimestamp":{"type":"timestamp"},"closeTimestamp":{"type":"timestamp"},"executionStatus":{},"closeStatus":{},"parent":{"type":"structure","members":{"workflowId":{},"runId":{}}},"tagList":{"type":"list","members":{}},"cancelRequested":{"type":"boolean"}}},"executionConfiguration":{"type":"structure","members":{"taskStartToCloseTimeout":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"childPolicy":{}}},"openCounts":{"type":"structure","members":{"openActivityTasks":{"type":"integer"},"openDecisionTasks":{"type":"integer"},"openTimers":{"type":"integer"},"openChildWorkflowExecutions":{"type":"integer"}}},"latestActivityTaskTimestamp":{"type":"timestamp"},"latestExecutionContext":{}}}},"describeWorkflowType":{"name":"DescribeWorkflowType","input":{"type":"structure","members":{"domain":{"required":true},"workflowType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true}}},"output":{"type":"structure","members":{"typeInfo":{"type":"structure","members":{"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"status":{},"description":{},"creationDate":{"type":"timestamp"},"deprecationDate":{"type":"timestamp"}}},"configuration":{"type":"structure","members":{"defaultTaskStartToCloseTimeout":{},"defaultExecutionStartToCloseTimeout":{},"defaultTaskList":{"type":"structure","members":{"name":{}}},"defaultChildPolicy":{}}}}}},"getWorkflowExecutionHistory":{"name":"GetWorkflowExecutionHistory","input":{"type":"structure","members":{"domain":{"required":true},"execution":{"type":"structure","members":{"workflowId":{"required":true},"runId":{"required":true}},"required":true},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"events":{"type":"list","members":{"type":"structure","members":{"eventTimestamp":{"type":"timestamp"},"eventType":{},"eventId":{"type":"integer"},"workflowExecutionStartedEventAttributes":{"type":"structure","members":{"input":{},"executionStartToCloseTimeout":{},"taskStartToCloseTimeout":{},"childPolicy":{},"taskList":{"type":"structure","members":{"name":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"tagList":{"type":"list","members":{}},"continuedExecutionRunId":{},"parentWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"parentInitiatedEventId":{"type":"integer"}}},"workflowExecutionCompletedEventAttributes":{"type":"structure","members":{"result":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"completeWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionFailedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"failWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"childPolicy":{}}},"workflowExecutionCanceledEventAttributes":{"type":"structure","members":{"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"cancelWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionContinuedAsNewEventAttributes":{"type":"structure","members":{"input":{},"decisionTaskCompletedEventId":{"type":"integer"},"newExecutionRunId":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"taskStartToCloseTimeout":{},"childPolicy":{},"tagList":{"type":"list","members":{}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}}}},"continueAsNewWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionTerminatedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"childPolicy":{},"cause":{}}},"workflowExecutionCancelRequestedEventAttributes":{"type":"structure","members":{"externalWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"externalInitiatedEventId":{"type":"integer"},"cause":{}}},"decisionTaskScheduledEventAttributes":{"type":"structure","members":{"taskList":{"type":"structure","members":{"name":{}}},"startToCloseTimeout":{}}},"decisionTaskStartedEventAttributes":{"type":"structure","members":{"identity":{},"scheduledEventId":{"type":"integer"}}},"decisionTaskCompletedEventAttributes":{"type":"structure","members":{"executionContext":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"decisionTaskTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskScheduledEventAttributes":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"activityId":{},"input":{},"control":{},"scheduleToStartTimeout":{},"scheduleToCloseTimeout":{},"startToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"decisionTaskCompletedEventId":{"type":"integer"},"heartbeatTimeout":{}}},"activityTaskStartedEventAttributes":{"type":"structure","members":{"identity":{},"scheduledEventId":{"type":"integer"}}},"activityTaskCompletedEventAttributes":{"type":"structure","members":{"result":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskFailedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"},"details":{}}},"activityTaskCanceledEventAttributes":{"type":"structure","members":{"details":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"},"latestCancelRequestedEventId":{"type":"integer"}}},"activityTaskCancelRequestedEventAttributes":{"type":"structure","members":{"decisionTaskCompletedEventId":{"type":"integer"},"activityId":{}}},"workflowExecutionSignaledEventAttributes":{"type":"structure","members":{"signalName":{},"input":{},"externalWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"externalInitiatedEventId":{"type":"integer"}}},"markerRecordedEventAttributes":{"type":"structure","members":{"markerName":{},"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"recordMarkerFailedEventAttributes":{"type":"structure","members":{"markerName":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"timerStartedEventAttributes":{"type":"structure","members":{"timerId":{},"control":{},"startToFireTimeout":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"timerFiredEventAttributes":{"type":"structure","members":{"timerId":{},"startedEventId":{"type":"integer"}}},"timerCanceledEventAttributes":{"type":"structure","members":{"timerId":{},"startedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"}}},"startChildWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"control":{},"input":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"decisionTaskCompletedEventId":{"type":"integer"},"childPolicy":{},"taskStartToCloseTimeout":{},"tagList":{"type":"list","members":{}}}},"childWorkflowExecutionStartedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"initiatedEventId":{"type":"integer"}}},"childWorkflowExecutionCompletedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"result":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"reason":{},"details":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionTimedOutEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"timeoutType":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionCanceledEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"details":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionTerminatedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"signalExternalWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"signalName":{},"input":{},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"externalWorkflowExecutionSignaledEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"initiatedEventId":{"type":"integer"}}},"signalExternalWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"cause":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"externalWorkflowExecutionCancelRequestedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"initiatedEventId":{"type":"integer"}}},"requestCancelExternalWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"requestCancelExternalWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"cause":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"scheduleActivityTaskFailedEventAttributes":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"activityId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"requestCancelActivityTaskFailedEventAttributes":{"type":"structure","members":{"activityId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"startTimerFailedEventAttributes":{"type":"structure","members":{"timerId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"cancelTimerFailedEventAttributes":{"type":"structure","members":{"timerId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"startChildWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"cause":{},"workflowId":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}}}}},"nextPageToken":{}}}},"listActivityTypes":{"name":"ListActivityTypes","input":{"type":"structure","members":{"domain":{"required":true},"name":{},"registrationStatus":{"required":true},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"typeInfos":{"type":"list","members":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"status":{},"description":{},"creationDate":{"type":"timestamp"},"deprecationDate":{"type":"timestamp"}}}},"nextPageToken":{}}}},"listClosedWorkflowExecutions":{"name":"ListClosedWorkflowExecutions","input":{"type":"structure","members":{"domain":{"required":true},"startTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}}},"closeTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}}},"executionFilter":{"type":"structure","members":{"workflowId":{"required":true}}},"closeStatusFilter":{"type":"structure","members":{"status":{"required":true}}},"typeFilter":{"type":"structure","members":{"name":{"required":true},"version":{}}},"tagFilter":{"type":"structure","members":{"tag":{"required":true}}},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"executionInfos":{"type":"list","members":{"type":"structure","members":{"execution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"startTimestamp":{"type":"timestamp"},"closeTimestamp":{"type":"timestamp"},"executionStatus":{},"closeStatus":{},"parent":{"type":"structure","members":{"workflowId":{},"runId":{}}},"tagList":{"type":"list","members":{}},"cancelRequested":{"type":"boolean"}}}},"nextPageToken":{}}}},"listDomains":{"name":"ListDomains","input":{"type":"structure","members":{"nextPageToken":{},"registrationStatus":{"required":true},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"domainInfos":{"type":"list","members":{"type":"structure","members":{"name":{},"status":{},"description":{}}}},"nextPageToken":{}}}},"listOpenWorkflowExecutions":{"name":"ListOpenWorkflowExecutions","input":{"type":"structure","members":{"domain":{"required":true},"startTimeFilter":{"type":"structure","members":{"oldestDate":{"type":"timestamp","required":true},"latestDate":{"type":"timestamp"}},"required":true},"typeFilter":{"type":"structure","members":{"name":{"required":true},"version":{}}},"tagFilter":{"type":"structure","members":{"tag":{"required":true}}},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"},"executionFilter":{"type":"structure","members":{"workflowId":{"required":true}}}}},"output":{"type":"structure","members":{"executionInfos":{"type":"list","members":{"type":"structure","members":{"execution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"startTimestamp":{"type":"timestamp"},"closeTimestamp":{"type":"timestamp"},"executionStatus":{},"closeStatus":{},"parent":{"type":"structure","members":{"workflowId":{},"runId":{}}},"tagList":{"type":"list","members":{}},"cancelRequested":{"type":"boolean"}}}},"nextPageToken":{}}}},"listWorkflowTypes":{"name":"ListWorkflowTypes","input":{"type":"structure","members":{"domain":{"required":true},"name":{},"registrationStatus":{"required":true},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"typeInfos":{"type":"list","members":{"type":"structure","members":{"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"status":{},"description":{},"creationDate":{"type":"timestamp"},"deprecationDate":{"type":"timestamp"}}}},"nextPageToken":{}}}},"pollForActivityTask":{"name":"PollForActivityTask","input":{"type":"structure","members":{"domain":{"required":true},"taskList":{"type":"structure","members":{"name":{"required":true}},"required":true},"identity":{}}},"output":{"type":"structure","members":{"taskToken":{},"activityId":{},"startedEventId":{"type":"integer"},"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"activityType":{"type":"structure","members":{"name":{},"version":{}}},"input":{}}}},"pollForDecisionTask":{"name":"PollForDecisionTask","input":{"type":"structure","members":{"domain":{"required":true},"taskList":{"type":"structure","members":{"name":{"required":true}},"required":true},"identity":{},"nextPageToken":{},"maximumPageSize":{"type":"integer"},"reverseOrder":{"type":"boolean"}}},"output":{"type":"structure","members":{"taskToken":{},"startedEventId":{"type":"integer"},"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"events":{"type":"list","members":{"type":"structure","members":{"eventTimestamp":{"type":"timestamp"},"eventType":{},"eventId":{"type":"integer"},"workflowExecutionStartedEventAttributes":{"type":"structure","members":{"input":{},"executionStartToCloseTimeout":{},"taskStartToCloseTimeout":{},"childPolicy":{},"taskList":{"type":"structure","members":{"name":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"tagList":{"type":"list","members":{}},"continuedExecutionRunId":{},"parentWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"parentInitiatedEventId":{"type":"integer"}}},"workflowExecutionCompletedEventAttributes":{"type":"structure","members":{"result":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"completeWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionFailedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"failWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"childPolicy":{}}},"workflowExecutionCanceledEventAttributes":{"type":"structure","members":{"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"cancelWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionContinuedAsNewEventAttributes":{"type":"structure","members":{"input":{},"decisionTaskCompletedEventId":{"type":"integer"},"newExecutionRunId":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"taskStartToCloseTimeout":{},"childPolicy":{},"tagList":{"type":"list","members":{}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}}}},"continueAsNewWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"workflowExecutionTerminatedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"childPolicy":{},"cause":{}}},"workflowExecutionCancelRequestedEventAttributes":{"type":"structure","members":{"externalWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"externalInitiatedEventId":{"type":"integer"},"cause":{}}},"decisionTaskScheduledEventAttributes":{"type":"structure","members":{"taskList":{"type":"structure","members":{"name":{}}},"startToCloseTimeout":{}}},"decisionTaskStartedEventAttributes":{"type":"structure","members":{"identity":{},"scheduledEventId":{"type":"integer"}}},"decisionTaskCompletedEventAttributes":{"type":"structure","members":{"executionContext":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"decisionTaskTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskScheduledEventAttributes":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"activityId":{},"input":{},"control":{},"scheduleToStartTimeout":{},"scheduleToCloseTimeout":{},"startToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"decisionTaskCompletedEventId":{"type":"integer"},"heartbeatTimeout":{}}},"activityTaskStartedEventAttributes":{"type":"structure","members":{"identity":{},"scheduledEventId":{"type":"integer"}}},"activityTaskCompletedEventAttributes":{"type":"structure","members":{"result":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskFailedEventAttributes":{"type":"structure","members":{"reason":{},"details":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"activityTaskTimedOutEventAttributes":{"type":"structure","members":{"timeoutType":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"},"details":{}}},"activityTaskCanceledEventAttributes":{"type":"structure","members":{"details":{},"scheduledEventId":{"type":"integer"},"startedEventId":{"type":"integer"},"latestCancelRequestedEventId":{"type":"integer"}}},"activityTaskCancelRequestedEventAttributes":{"type":"structure","members":{"decisionTaskCompletedEventId":{"type":"integer"},"activityId":{}}},"workflowExecutionSignaledEventAttributes":{"type":"structure","members":{"signalName":{},"input":{},"externalWorkflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"externalInitiatedEventId":{"type":"integer"}}},"markerRecordedEventAttributes":{"type":"structure","members":{"markerName":{},"details":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"recordMarkerFailedEventAttributes":{"type":"structure","members":{"markerName":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"timerStartedEventAttributes":{"type":"structure","members":{"timerId":{},"control":{},"startToFireTimeout":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"timerFiredEventAttributes":{"type":"structure","members":{"timerId":{},"startedEventId":{"type":"integer"}}},"timerCanceledEventAttributes":{"type":"structure","members":{"timerId":{},"startedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"}}},"startChildWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"control":{},"input":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{}}},"decisionTaskCompletedEventId":{"type":"integer"},"childPolicy":{},"taskStartToCloseTimeout":{},"tagList":{"type":"list","members":{}}}},"childWorkflowExecutionStartedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"initiatedEventId":{"type":"integer"}}},"childWorkflowExecutionCompletedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"result":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"reason":{},"details":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionTimedOutEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"timeoutType":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionCanceledEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"details":{},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"childWorkflowExecutionTerminatedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"initiatedEventId":{"type":"integer"},"startedEventId":{"type":"integer"}}},"signalExternalWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"signalName":{},"input":{},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"externalWorkflowExecutionSignaledEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"initiatedEventId":{"type":"integer"}}},"signalExternalWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"cause":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"externalWorkflowExecutionCancelRequestedEventAttributes":{"type":"structure","members":{"workflowExecution":{"type":"structure","members":{"workflowId":{},"runId":{}}},"initiatedEventId":{"type":"integer"}}},"requestCancelExternalWorkflowExecutionInitiatedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"requestCancelExternalWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowId":{},"runId":{},"cause":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}},"scheduleActivityTaskFailedEventAttributes":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{},"version":{}}},"activityId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"requestCancelActivityTaskFailedEventAttributes":{"type":"structure","members":{"activityId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"startTimerFailedEventAttributes":{"type":"structure","members":{"timerId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"cancelTimerFailedEventAttributes":{"type":"structure","members":{"timerId":{},"cause":{},"decisionTaskCompletedEventId":{"type":"integer"}}},"startChildWorkflowExecutionFailedEventAttributes":{"type":"structure","members":{"workflowType":{"type":"structure","members":{"name":{},"version":{}}},"cause":{},"workflowId":{},"initiatedEventId":{"type":"integer"},"decisionTaskCompletedEventId":{"type":"integer"},"control":{}}}}}},"nextPageToken":{},"previousStartedEventId":{"type":"integer"}}}},"recordActivityTaskHeartbeat":{"name":"RecordActivityTaskHeartbeat","input":{"type":"structure","members":{"taskToken":{"required":true},"details":{}}},"output":{"type":"structure","members":{"cancelRequested":{"type":"boolean"}}}},"registerActivityType":{"name":"RegisterActivityType","input":{"type":"structure","members":{"domain":{"required":true},"name":{"required":true},"version":{"required":true},"description":{},"defaultTaskStartToCloseTimeout":{},"defaultTaskHeartbeatTimeout":{},"defaultTaskList":{"type":"structure","members":{"name":{"required":true}}},"defaultTaskScheduleToStartTimeout":{},"defaultTaskScheduleToCloseTimeout":{}}},"output":{"type":"structure","members":{}}},"registerDomain":{"name":"RegisterDomain","input":{"type":"structure","members":{"name":{"required":true},"description":{},"workflowExecutionRetentionPeriodInDays":{"required":true}}},"output":{"type":"structure","members":{}}},"registerWorkflowType":{"name":"RegisterWorkflowType","input":{"type":"structure","members":{"domain":{"required":true},"name":{"required":true},"version":{"required":true},"description":{},"defaultTaskStartToCloseTimeout":{},"defaultExecutionStartToCloseTimeout":{},"defaultTaskList":{"type":"structure","members":{"name":{"required":true}}},"defaultChildPolicy":{}}},"output":{"type":"structure","members":{}}},"requestCancelWorkflowExecution":{"name":"RequestCancelWorkflowExecution","input":{"type":"structure","members":{"domain":{"required":true},"workflowId":{"required":true},"runId":{}}},"output":{"type":"structure","members":{}}},"respondActivityTaskCanceled":{"name":"RespondActivityTaskCanceled","input":{"type":"structure","members":{"taskToken":{"required":true},"details":{}}},"output":{"type":"structure","members":{}}},"respondActivityTaskCompleted":{"name":"RespondActivityTaskCompleted","input":{"type":"structure","members":{"taskToken":{"required":true},"result":{}}},"output":{"type":"structure","members":{}}},"respondActivityTaskFailed":{"name":"RespondActivityTaskFailed","input":{"type":"structure","members":{"taskToken":{"required":true},"reason":{},"details":{}}},"output":{"type":"structure","members":{}}},"respondDecisionTaskCompleted":{"name":"RespondDecisionTaskCompleted","input":{"type":"structure","members":{"taskToken":{"required":true},"decisions":{"type":"list","members":{"type":"structure","members":{"decisionType":{"required":true},"scheduleActivityTaskDecisionAttributes":{"type":"structure","members":{"activityType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true},"activityId":{"required":true},"control":{},"input":{},"scheduleToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{"required":true}}},"scheduleToStartTimeout":{},"startToCloseTimeout":{},"heartbeatTimeout":{}}},"requestCancelActivityTaskDecisionAttributes":{"type":"structure","members":{"activityId":{"required":true}}},"completeWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"result":{}}},"failWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"reason":{},"details":{}}},"cancelWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"details":{}}},"continueAsNewWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"input":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{"required":true}}},"taskStartToCloseTimeout":{},"childPolicy":{},"tagList":{"type":"list","members":{}},"workflowTypeVersion":{}}},"recordMarkerDecisionAttributes":{"type":"structure","members":{"markerName":{"required":true},"details":{}}},"startTimerDecisionAttributes":{"type":"structure","members":{"timerId":{"required":true},"control":{},"startToFireTimeout":{"required":true}}},"cancelTimerDecisionAttributes":{"type":"structure","members":{"timerId":{"required":true}}},"signalExternalWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"workflowId":{"required":true},"runId":{},"signalName":{"required":true},"input":{},"control":{}}},"requestCancelExternalWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"workflowId":{"required":true},"runId":{},"control":{}}},"startChildWorkflowExecutionDecisionAttributes":{"type":"structure","members":{"workflowType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true},"workflowId":{"required":true},"control":{},"input":{},"executionStartToCloseTimeout":{},"taskList":{"type":"structure","members":{"name":{"required":true}}},"taskStartToCloseTimeout":{},"childPolicy":{},"tagList":{"type":"list","members":{}}}}}}},"executionContext":{}}},"output":{"type":"structure","members":{}}},"signalWorkflowExecution":{"name":"SignalWorkflowExecution","input":{"type":"structure","members":{"domain":{"required":true},"workflowId":{"required":true},"runId":{},"signalName":{"required":true},"input":{}}},"output":{"type":"structure","members":{}}},"startWorkflowExecution":{"name":"StartWorkflowExecution","input":{"type":"structure","members":{"domain":{"required":true},"workflowId":{"required":true},"workflowType":{"type":"structure","members":{"name":{"required":true},"version":{"required":true}},"required":true},"taskList":{"type":"structure","members":{"name":{"required":true}}},"input":{},"executionStartToCloseTimeout":{},"tagList":{"type":"list","members":{}},"taskStartToCloseTimeout":{},"childPolicy":{}}},"output":{"type":"structure","members":{"runId":{}}}},"terminateWorkflowExecution":{"name":"TerminateWorkflowExecution","input":{"type":"structure","members":{"domain":{"required":true},"workflowId":{"required":true},"runId":{},"reason":{},"details":{},"childPolicy":{}}},"output":{"type":"structure","members":{}}}},"pagination":{"getWorkflowExecutionHistory":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"events"},"listActivityTypes":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"typeInfos"},"listClosedWorkflowExecutions":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"executionInfos"},"listDomains":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"domainInfos"},"listOpenWorkflowExecutions":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"executionInfos"},"listWorkflowTypes":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"typeInfos"},"pollForDecisionTask":{"limitKey":"maximumPageSize","inputToken":"nextPageToken","outputToken":"nextPageToken","resultKey":"events"}}});
AWS.Service.defineServiceApi(require("./services/sns"), "2010-03-31", {"format":"query","apiVersion":"2010-03-31","endpointPrefix":"sns","resultWrapped":true,"serviceAbbreviation":"Amazon SNS","serviceFullName":"Amazon Simple Notification Service","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"addPermission":{"name":"AddPermission","input":{"type":"structure","members":{"TopicArn":{"required":true},"Label":{"required":true},"AWSAccountId":{"type":"list","members":{},"required":true},"ActionName":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{}}},"confirmSubscription":{"name":"ConfirmSubscription","input":{"type":"structure","members":{"TopicArn":{"required":true},"Token":{"required":true},"AuthenticateOnUnsubscribe":{}}},"output":{"type":"structure","members":{"SubscriptionArn":{}}}},"createPlatformApplication":{"name":"CreatePlatformApplication","input":{"type":"structure","members":{"Name":{"required":true},"Platform":{"required":true},"Attributes":{"type":"map","keys":{},"members":{},"required":true}}},"output":{"type":"structure","members":{"PlatformApplicationArn":{}}}},"createPlatformEndpoint":{"name":"CreatePlatformEndpoint","input":{"type":"structure","members":{"PlatformApplicationArn":{"required":true},"Token":{"required":true},"CustomUserData":{},"Attributes":{"type":"map","keys":{},"members":{}}}},"output":{"type":"structure","members":{"EndpointArn":{}}}},"createTopic":{"name":"CreateTopic","input":{"type":"structure","members":{"Name":{"required":true}}},"output":{"type":"structure","members":{"TopicArn":{}}}},"deleteEndpoint":{"name":"DeleteEndpoint","input":{"type":"structure","members":{"EndpointArn":{"required":true}}},"output":{"type":"structure","members":{}}},"deletePlatformApplication":{"name":"DeletePlatformApplication","input":{"type":"structure","members":{"PlatformApplicationArn":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteTopic":{"name":"DeleteTopic","input":{"type":"structure","members":{"TopicArn":{"required":true}}},"output":{"type":"structure","members":{}}},"getEndpointAttributes":{"name":"GetEndpointAttributes","input":{"type":"structure","members":{"EndpointArn":{"required":true}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{}}}}},"getPlatformApplicationAttributes":{"name":"GetPlatformApplicationAttributes","input":{"type":"structure","members":{"PlatformApplicationArn":{"required":true}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{}}}}},"getSubscriptionAttributes":{"name":"GetSubscriptionAttributes","input":{"type":"structure","members":{"SubscriptionArn":{"required":true}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{}}}}},"getTopicAttributes":{"name":"GetTopicAttributes","input":{"type":"structure","members":{"TopicArn":{"required":true}}},"output":{"type":"structure","members":{"Attributes":{"type":"map","keys":{},"members":{}}}}},"listEndpointsByPlatformApplication":{"name":"ListEndpointsByPlatformApplication","input":{"type":"structure","members":{"PlatformApplicationArn":{"required":true},"NextToken":{}}},"output":{"type":"structure","members":{"Endpoints":{"type":"list","members":{"type":"structure","members":{"EndpointArn":{},"Attributes":{"type":"map","keys":{},"members":{}}}}},"NextToken":{}}}},"listPlatformApplications":{"name":"ListPlatformApplications","input":{"type":"structure","members":{"NextToken":{}}},"output":{"type":"structure","members":{"PlatformApplications":{"type":"list","members":{"type":"structure","members":{"PlatformApplicationArn":{},"Attributes":{"type":"map","keys":{},"members":{}}}}},"NextToken":{}}}},"listSubscriptions":{"name":"ListSubscriptions","input":{"type":"structure","members":{"NextToken":{}}},"output":{"type":"structure","members":{"Subscriptions":{"type":"list","members":{"type":"structure","members":{"SubscriptionArn":{},"Owner":{},"Protocol":{},"Endpoint":{},"TopicArn":{}}}},"NextToken":{}}}},"listSubscriptionsByTopic":{"name":"ListSubscriptionsByTopic","input":{"type":"structure","members":{"TopicArn":{"required":true},"NextToken":{}}},"output":{"type":"structure","members":{"Subscriptions":{"type":"list","members":{"type":"structure","members":{"SubscriptionArn":{},"Owner":{},"Protocol":{},"Endpoint":{},"TopicArn":{}}}},"NextToken":{}}}},"listTopics":{"name":"ListTopics","input":{"type":"structure","members":{"NextToken":{}}},"output":{"type":"structure","members":{"Topics":{"type":"list","members":{"type":"structure","members":{"TopicArn":{}}}},"NextToken":{}}}},"publish":{"name":"Publish","input":{"type":"structure","members":{"TopicArn":{},"TargetArn":{},"Message":{"required":true},"Subject":{},"MessageStructure":{}}},"output":{"type":"structure","members":{"MessageId":{}}}},"removePermission":{"name":"RemovePermission","input":{"type":"structure","members":{"TopicArn":{"required":true},"Label":{"required":true}}},"output":{"type":"structure","members":{}}},"setEndpointAttributes":{"name":"SetEndpointAttributes","input":{"type":"structure","members":{"EndpointArn":{"required":true},"Attributes":{"type":"map","keys":{},"members":{},"required":true}}},"output":{"type":"structure","members":{}}},"setPlatformApplicationAttributes":{"name":"SetPlatformApplicationAttributes","input":{"type":"structure","members":{"PlatformApplicationArn":{"required":true},"Attributes":{"type":"map","keys":{},"members":{},"required":true}}},"output":{"type":"structure","members":{}}},"setSubscriptionAttributes":{"name":"SetSubscriptionAttributes","input":{"type":"structure","members":{"SubscriptionArn":{"required":true},"AttributeName":{"required":true},"AttributeValue":{}}},"output":{"type":"structure","members":{}}},"setTopicAttributes":{"name":"SetTopicAttributes","input":{"type":"structure","members":{"TopicArn":{"required":true},"AttributeName":{"required":true},"AttributeValue":{}}},"output":{"type":"structure","members":{}}},"subscribe":{"name":"Subscribe","input":{"type":"structure","members":{"TopicArn":{"required":true},"Protocol":{"required":true},"Endpoint":{}}},"output":{"type":"structure","members":{"SubscriptionArn":{}}}},"unsubscribe":{"name":"Unsubscribe","input":{"type":"structure","members":{"SubscriptionArn":{"required":true}}},"output":{"type":"structure","members":{}}}},"pagination":{"listEndpointsByPlatformApplication":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Endpoints"},"listPlatformApplications":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"PlatformApplications"},"listSubscriptions":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Subscriptions"},"listSubscriptionsByTopic":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Subscriptions"},"listTopics":{"inputToken":"NextToken","outputToken":"NextToken","resultKey":"Topics"}}});
AWS.Service.defineServiceApi(require("./services/sqs"), "2012-11-05", {"format":"query","apiVersion":"2012-11-05","endpointPrefix":"sqs","resultWrapped":true,"serviceAbbreviation":"Amazon SQS","serviceFullName":"Amazon Simple Queue Service","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"addPermission":{"name":"AddPermission","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Label":{"required":true},"AWSAccountIds":{"type":"list","members":{"name":"AWSAccountId"},"flattened":true,"required":true},"Actions":{"type":"list","members":{"name":"ActionName"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{}}},"changeMessageVisibility":{"name":"ChangeMessageVisibility","input":{"type":"structure","members":{"QueueUrl":{"required":true},"ReceiptHandle":{"required":true},"VisibilityTimeout":{"type":"integer","required":true}}},"output":{"type":"structure","members":{}}},"changeMessageVisibilityBatch":{"name":"ChangeMessageVisibilityBatch","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Entries":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"ReceiptHandle":{"required":true},"VisibilityTimeout":{"type":"integer"}},"name":"ChangeMessageVisibilityBatchRequestEntry"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{"ChangeMessageVisibilityBatchResultEntry":{"type":"list","members":{"type":"structure","members":{"Id":{}},"name":"ChangeMessageVisibilityBatchResultEntry"},"flattened":true,"name":"Successful"},"BatchResultErrorEntry":{"type":"list","members":{"type":"structure","members":{"Id":{},"SenderFault":{"type":"boolean"},"Code":{},"Message":{}},"name":"BatchResultErrorEntry"},"flattened":true,"name":"Failed"}}}},"createQueue":{"name":"CreateQueue","input":{"type":"structure","members":{"QueueName":{"required":true},"Attributes":{"type":"map","keys":{"name":"Name"},"members":{"name":"Value"},"flattened":true,"name":"Attribute"}}},"output":{"type":"structure","members":{"QueueUrl":{}}}},"deleteMessage":{"name":"DeleteMessage","input":{"type":"structure","members":{"QueueUrl":{"required":true},"ReceiptHandle":{"required":true}}},"output":{"type":"structure","members":{}}},"deleteMessageBatch":{"name":"DeleteMessageBatch","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Entries":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"ReceiptHandle":{"required":true}},"name":"DeleteMessageBatchRequestEntry"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{"DeleteMessageBatchResultEntry":{"type":"list","members":{"type":"structure","members":{"Id":{}},"name":"DeleteMessageBatchResultEntry"},"flattened":true,"name":"Successful"},"BatchResultErrorEntry":{"type":"list","members":{"type":"structure","members":{"Id":{},"SenderFault":{"type":"boolean"},"Code":{},"Message":{}},"name":"BatchResultErrorEntry"},"flattened":true,"name":"Failed"}}}},"deleteQueue":{"name":"DeleteQueue","input":{"type":"structure","members":{"QueueUrl":{"required":true}}},"output":{"type":"structure","members":{}}},"getQueueAttributes":{"name":"GetQueueAttributes","input":{"type":"structure","members":{"QueueUrl":{"required":true},"AttributeNames":{"type":"list","members":{"name":"AttributeName"},"flattened":true}}},"output":{"type":"structure","members":{"Attribute":{"type":"map","keys":{"name":"Name"},"members":{"name":"Value"},"flattened":true,"name":"Attributes"}}}},"getQueueUrl":{"name":"GetQueueUrl","input":{"type":"structure","members":{"QueueName":{"required":true},"QueueOwnerAWSAccountId":{}}},"output":{"type":"structure","members":{"QueueUrl":{}}}},"listDeadLetterSourceQueues":{"name":"ListDeadLetterSourceQueues","input":{"type":"structure","members":{"QueueUrl":{"required":true}}},"output":{"type":"structure","members":{"QueueUrl":{"type":"list","members":{"name":"QueueUrl"},"flattened":true,"name":"queueUrls"}}}},"listQueues":{"name":"ListQueues","input":{"type":"structure","members":{"QueueNamePrefix":{}}},"output":{"type":"structure","members":{"QueueUrl":{"type":"list","members":{"name":"QueueUrl"},"flattened":true,"name":"QueueUrls"}}}},"receiveMessage":{"name":"ReceiveMessage","input":{"type":"structure","members":{"QueueUrl":{"required":true},"AttributeNames":{"type":"list","members":{"name":"AttributeName"},"flattened":true},"MaxNumberOfMessages":{"type":"integer"},"VisibilityTimeout":{"type":"integer"},"WaitTimeSeconds":{"type":"integer"}}},"output":{"type":"structure","members":{"Message":{"type":"list","members":{"type":"structure","members":{"MessageId":{},"ReceiptHandle":{},"MD5OfBody":{},"Body":{},"Attribute":{"type":"map","keys":{"name":"Name"},"members":{"name":"Value"},"flattened":true,"name":"Attributes"}},"name":"Message"},"flattened":true,"name":"Messages"}}}},"removePermission":{"name":"RemovePermission","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Label":{"required":true}}},"output":{"type":"structure","members":{}}},"sendMessage":{"name":"SendMessage","input":{"type":"structure","members":{"QueueUrl":{"required":true},"MessageBody":{"required":true},"DelaySeconds":{"type":"integer"}}},"output":{"type":"structure","members":{"MD5OfMessageBody":{},"MessageId":{}}}},"sendMessageBatch":{"name":"SendMessageBatch","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Entries":{"type":"list","members":{"type":"structure","members":{"Id":{"required":true},"MessageBody":{"required":true},"DelaySeconds":{"type":"integer"}},"name":"SendMessageBatchRequestEntry"},"flattened":true,"required":true}}},"output":{"type":"structure","members":{"SendMessageBatchResultEntry":{"type":"list","members":{"type":"structure","members":{"Id":{},"MessageId":{},"MD5OfMessageBody":{}},"name":"SendMessageBatchResultEntry"},"flattened":true,"name":"Successful"},"BatchResultErrorEntry":{"type":"list","members":{"type":"structure","members":{"Id":{},"SenderFault":{"type":"boolean"},"Code":{},"Message":{}},"name":"BatchResultErrorEntry"},"flattened":true,"name":"Failed"}}}},"setQueueAttributes":{"name":"SetQueueAttributes","input":{"type":"structure","members":{"QueueUrl":{"required":true},"Attributes":{"type":"map","keys":{"name":"Name"},"members":{"name":"Value"},"flattened":true,"name":"Attribute","required":true}}},"output":{"type":"structure","members":{}}}},"pagination":{"listQueues":{"resultKey":"QueueUrls"}}});
AWS.Service.defineServiceApi(require("./services/storagegateway"), "2012-06-30", {"format":"json","apiVersion":"2012-06-30","endpointPrefix":"storagegateway","jsonVersion":"1.1","serviceFullName":"AWS Storage Gateway","signatureVersion":"v4","targetPrefix":"StorageGateway_20120630","timestampFormat":"iso8601","operations":{"activateGateway":{"name":"ActivateGateway","input":{"type":"structure","members":{"ActivationKey":{"required":true},"GatewayName":{"required":true},"GatewayTimezone":{"required":true},"GatewayRegion":{"required":true},"GatewayType":{}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addCache":{"name":"AddCache","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addUploadBuffer":{"name":"AddUploadBuffer","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addWorkingStorage":{"name":"AddWorkingStorage","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"createCachediSCSIVolume":{"name":"CreateCachediSCSIVolume","input":{"type":"structure","members":{"GatewayARN":{"required":true},"VolumeSizeInBytes":{"type":"integer","required":true},"SnapshotId":{},"TargetName":{"required":true},"NetworkInterfaceId":{"required":true},"ClientToken":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"TargetARN":{}}}},"createSnapshot":{"name":"CreateSnapshot","input":{"type":"structure","members":{"VolumeARN":{"required":true},"SnapshotDescription":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"SnapshotId":{}}}},"createSnapshotFromVolumeRecoveryPoint":{"name":"CreateSnapshotFromVolumeRecoveryPoint","input":{"type":"structure","members":{"VolumeARN":{"required":true},"SnapshotDescription":{"required":true}}},"output":{"type":"structure","members":{"SnapshotId":{},"VolumeARN":{},"VolumeRecoveryPointTime":{}}}},"createStorediSCSIVolume":{"name":"CreateStorediSCSIVolume","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskId":{"required":true},"SnapshotId":{},"PreserveExistingData":{"type":"boolean","required":true},"TargetName":{"required":true},"NetworkInterfaceId":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"VolumeSizeInBytes":{"type":"integer"},"TargetARN":{}}}},"deleteBandwidthRateLimit":{"name":"DeleteBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true},"BandwidthType":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"deleteChapCredentials":{"name":"DeleteChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true},"InitiatorName":{"required":true}}},"output":{"type":"structure","members":{"TargetARN":{},"InitiatorName":{}}}},"deleteGateway":{"name":"DeleteGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"deleteSnapshotSchedule":{"name":"DeleteSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{}}}},"deleteVolume":{"name":"DeleteVolume","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{}}}},"describeBandwidthRateLimit":{"name":"DescribeBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"AverageUploadRateLimitInBitsPerSec":{"type":"integer"},"AverageDownloadRateLimitInBitsPerSec":{"type":"integer"}}}},"describeCache":{"name":"DescribeCache","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"CacheAllocatedInBytes":{"type":"integer"},"CacheUsedPercentage":{"type":"float"},"CacheDirtyPercentage":{"type":"float"},"CacheHitPercentage":{"type":"float"},"CacheMissPercentage":{"type":"float"}}}},"describeCachediSCSIVolumes":{"name":"DescribeCachediSCSIVolumes","input":{"type":"structure","members":{"VolumeARNs":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"CachediSCSIVolumes":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeId":{},"VolumeType":{},"VolumeStatus":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeProgress":{"type":"float"},"SourceSnapshotId":{},"VolumeiSCSIAttributes":{"type":"structure","members":{"TargetARN":{},"NetworkInterfaceId":{},"NetworkInterfacePort":{"type":"integer"},"LunNumber":{"type":"integer"},"ChapEnabled":{"type":"boolean"}}}}}}}}},"describeChapCredentials":{"name":"DescribeChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true}}},"output":{"type":"structure","members":{"ChapCredentials":{"type":"list","members":{"type":"structure","members":{"TargetARN":{},"SecretToAuthenticateInitiator":{},"InitiatorName":{},"SecretToAuthenticateTarget":{}}}}}}},"describeGatewayInformation":{"name":"DescribeGatewayInformation","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"GatewayId":{},"GatewayTimezone":{},"GatewayState":{},"GatewayNetworkInterfaces":{"type":"list","members":{"type":"structure","members":{"Ipv4Address":{},"MacAddress":{},"Ipv6Address":{}}}},"GatewayType":{},"NextUpdateAvailabilityDate":{}}}},"describeMaintenanceStartTime":{"name":"DescribeMaintenanceStartTime","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"HourOfDay":{"type":"integer"},"MinuteOfHour":{"type":"integer"},"DayOfWeek":{"type":"integer"},"Timezone":{}}}},"describeSnapshotSchedule":{"name":"DescribeSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"StartAt":{"type":"integer"},"RecurrenceInHours":{"type":"integer"},"Description":{},"Timezone":{}}}},"describeStorediSCSIVolumes":{"name":"DescribeStorediSCSIVolumes","input":{"type":"structure","members":{"VolumeARNs":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"StorediSCSIVolumes":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeId":{},"VolumeType":{},"VolumeStatus":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeProgress":{"type":"float"},"VolumeDiskId":{},"SourceSnapshotId":{},"PreservedExistingData":{"type":"boolean"},"VolumeiSCSIAttributes":{"type":"structure","members":{"TargetARN":{},"NetworkInterfaceId":{},"NetworkInterfacePort":{"type":"integer"},"LunNumber":{"type":"integer"},"ChapEnabled":{"type":"boolean"}}}}}}}}},"describeUploadBuffer":{"name":"DescribeUploadBuffer","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"UploadBufferUsedInBytes":{"type":"integer"},"UploadBufferAllocatedInBytes":{"type":"integer"}}}},"describeWorkingStorage":{"name":"DescribeWorkingStorage","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"WorkingStorageUsedInBytes":{"type":"integer"},"WorkingStorageAllocatedInBytes":{"type":"integer"}}}},"listGateways":{"name":"ListGateways","input":{"type":"structure","members":{"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"Gateways":{"type":"list","members":{"type":"structure","members":{"GatewayARN":{}}}},"Marker":{}}}},"listLocalDisks":{"name":"ListLocalDisks","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"Disks":{"type":"list","members":{"type":"structure","members":{"DiskId":{},"DiskPath":{},"DiskNode":{},"DiskSizeInBytes":{"type":"integer"},"DiskAllocationType":{},"DiskAllocationResource":{}}}}}}},"listVolumeRecoveryPoints":{"name":"ListVolumeRecoveryPoints","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"VolumeRecoveryPointInfos":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeUsageInBytes":{"type":"integer"},"VolumeRecoveryPointTime":{}}}}}}},"listVolumes":{"name":"ListVolumes","input":{"type":"structure","members":{"GatewayARN":{"required":true},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{},"Marker":{},"VolumeInfos":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeType":{}}}}}}},"shutdownGateway":{"name":"ShutdownGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"startGateway":{"name":"StartGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateBandwidthRateLimit":{"name":"UpdateBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true},"AverageUploadRateLimitInBitsPerSec":{"type":"integer"},"AverageDownloadRateLimitInBitsPerSec":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateChapCredentials":{"name":"UpdateChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true},"SecretToAuthenticateInitiator":{"required":true},"InitiatorName":{"required":true},"SecretToAuthenticateTarget":{}}},"output":{"type":"structure","members":{"TargetARN":{},"InitiatorName":{}}}},"updateGatewayInformation":{"name":"UpdateGatewayInformation","input":{"type":"structure","members":{"GatewayARN":{"required":true},"GatewayName":{},"GatewayTimezone":{}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateGatewaySoftwareNow":{"name":"UpdateGatewaySoftwareNow","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateMaintenanceStartTime":{"name":"UpdateMaintenanceStartTime","input":{"type":"structure","members":{"GatewayARN":{"required":true},"HourOfDay":{"type":"integer","required":true},"MinuteOfHour":{"type":"integer","required":true},"DayOfWeek":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateSnapshotSchedule":{"name":"UpdateSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true},"StartAt":{"type":"integer","required":true},"RecurrenceInHours":{"type":"integer","required":true},"Description":{}}},"output":{"type":"structure","members":{"VolumeARN":{}}}}},"pagination":{"describeCachediSCSIVolumes":{"resultKey":"CachediSCSIVolumes"},"describeStorediSCSIVolumes":{"resultKey":"StorediSCSIVolumes"},"listGateways":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"Gateways"},"listLocalDisks":{"resultKey":"Disks"},"listVolumeRecoveryPoints":{"resultKey":"VolumeRecoveryPointInfos"},"listVolumes":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"VolumeInfos"}}});
AWS.Service.defineServiceApi(require("./services/storagegateway"), "2013-06-30", {"format":"json","apiVersion":"2013-06-30","endpointPrefix":"storagegateway","jsonVersion":"1.1","serviceFullName":"AWS Storage Gateway","signatureVersion":"v4","targetPrefix":"StorageGateway_20130630","timestampFormat":"iso8601","operations":{"activateGateway":{"name":"ActivateGateway","input":{"type":"structure","members":{"ActivationKey":{"required":true},"GatewayName":{"required":true},"GatewayTimezone":{"required":true},"GatewayRegion":{"required":true},"GatewayType":{},"TapeDriveType":{},"MediumChangerType":{}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addCache":{"name":"AddCache","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addUploadBuffer":{"name":"AddUploadBuffer","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"addWorkingStorage":{"name":"AddWorkingStorage","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"cancelArchival":{"name":"CancelArchival","input":{"type":"structure","members":{"GatewayARN":{"required":true},"TapeARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"cancelRetrieval":{"name":"CancelRetrieval","input":{"type":"structure","members":{"GatewayARN":{"required":true},"TapeARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"createCachediSCSIVolume":{"name":"CreateCachediSCSIVolume","input":{"type":"structure","members":{"GatewayARN":{"required":true},"VolumeSizeInBytes":{"type":"integer","required":true},"SnapshotId":{},"TargetName":{"required":true},"NetworkInterfaceId":{"required":true},"ClientToken":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"TargetARN":{}}}},"createSnapshot":{"name":"CreateSnapshot","input":{"type":"structure","members":{"VolumeARN":{"required":true},"SnapshotDescription":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"SnapshotId":{}}}},"createSnapshotFromVolumeRecoveryPoint":{"name":"CreateSnapshotFromVolumeRecoveryPoint","input":{"type":"structure","members":{"VolumeARN":{"required":true},"SnapshotDescription":{"required":true}}},"output":{"type":"structure","members":{"SnapshotId":{},"VolumeARN":{},"VolumeRecoveryPointTime":{}}}},"createStorediSCSIVolume":{"name":"CreateStorediSCSIVolume","input":{"type":"structure","members":{"GatewayARN":{"required":true},"DiskId":{"required":true},"SnapshotId":{},"PreserveExistingData":{"type":"boolean","required":true},"TargetName":{"required":true},"NetworkInterfaceId":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"VolumeSizeInBytes":{"type":"integer"},"TargetARN":{}}}},"createTapes":{"name":"CreateTapes","input":{"type":"structure","members":{"GatewayARN":{"required":true},"TapeSizeInBytes":{"type":"integer","required":true},"ClientToken":{"required":true},"NumTapesToCreate":{"type":"integer","required":true},"TapeBarcodePrefix":{"required":true}}},"output":{"type":"structure","members":{"TapeARNs":{"type":"list","members":{}}}}},"deleteBandwidthRateLimit":{"name":"DeleteBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true},"BandwidthType":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"deleteChapCredentials":{"name":"DeleteChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true},"InitiatorName":{"required":true}}},"output":{"type":"structure","members":{"TargetARN":{},"InitiatorName":{}}}},"deleteGateway":{"name":"DeleteGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"deleteSnapshotSchedule":{"name":"DeleteSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{}}}},"deleteTape":{"name":"DeleteTape","input":{"type":"structure","members":{"GatewayARN":{"required":true},"TapeARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"deleteTapeArchive":{"name":"DeleteTapeArchive","input":{"type":"structure","members":{"TapeARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"deleteVolume":{"name":"DeleteVolume","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{}}}},"describeBandwidthRateLimit":{"name":"DescribeBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"AverageUploadRateLimitInBitsPerSec":{"type":"integer"},"AverageDownloadRateLimitInBitsPerSec":{"type":"integer"}}}},"describeCache":{"name":"DescribeCache","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"CacheAllocatedInBytes":{"type":"integer"},"CacheUsedPercentage":{"type":"float"},"CacheDirtyPercentage":{"type":"float"},"CacheHitPercentage":{"type":"float"},"CacheMissPercentage":{"type":"float"}}}},"describeCachediSCSIVolumes":{"name":"DescribeCachediSCSIVolumes","input":{"type":"structure","members":{"VolumeARNs":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"CachediSCSIVolumes":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeId":{},"VolumeType":{},"VolumeStatus":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeProgress":{"type":"float"},"SourceSnapshotId":{},"VolumeiSCSIAttributes":{"type":"structure","members":{"TargetARN":{},"NetworkInterfaceId":{},"NetworkInterfacePort":{"type":"integer"},"LunNumber":{"type":"integer"},"ChapEnabled":{"type":"boolean"}}}}}}}}},"describeChapCredentials":{"name":"DescribeChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true}}},"output":{"type":"structure","members":{"ChapCredentials":{"type":"list","members":{"type":"structure","members":{"TargetARN":{},"SecretToAuthenticateInitiator":{},"InitiatorName":{},"SecretToAuthenticateTarget":{}}}}}}},"describeGatewayInformation":{"name":"DescribeGatewayInformation","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"GatewayId":{},"GatewayTimezone":{},"GatewayState":{},"GatewayNetworkInterfaces":{"type":"list","members":{"type":"structure","members":{"Ipv4Address":{},"MacAddress":{},"Ipv6Address":{}}}},"GatewayType":{},"NextUpdateAvailabilityDate":{}}}},"describeMaintenanceStartTime":{"name":"DescribeMaintenanceStartTime","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"HourOfDay":{"type":"integer"},"MinuteOfHour":{"type":"integer"},"DayOfWeek":{"type":"integer"},"Timezone":{}}}},"describeSnapshotSchedule":{"name":"DescribeSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true}}},"output":{"type":"structure","members":{"VolumeARN":{},"StartAt":{"type":"integer"},"RecurrenceInHours":{"type":"integer"},"Description":{},"Timezone":{}}}},"describeStorediSCSIVolumes":{"name":"DescribeStorediSCSIVolumes","input":{"type":"structure","members":{"VolumeARNs":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"StorediSCSIVolumes":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeId":{},"VolumeType":{},"VolumeStatus":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeProgress":{"type":"float"},"VolumeDiskId":{},"SourceSnapshotId":{},"PreservedExistingData":{"type":"boolean"},"VolumeiSCSIAttributes":{"type":"structure","members":{"TargetARN":{},"NetworkInterfaceId":{},"NetworkInterfacePort":{"type":"integer"},"LunNumber":{"type":"integer"},"ChapEnabled":{"type":"boolean"}}}}}}}}},"describeTapeArchives":{"name":"DescribeTapeArchives","input":{"type":"structure","members":{"TapeARNs":{"type":"list","members":{}},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"TapeArchives":{"type":"list","members":{"type":"structure","members":{"TapeARN":{},"TapeBarcode":{},"TapeSizeInBytes":{"type":"integer"},"CompletionTime":{"type":"timestamp"},"RetrievedTo":{},"TapeStatus":{}}}},"Marker":{}}}},"describeTapeRecoveryPoints":{"name":"DescribeTapeRecoveryPoints","input":{"type":"structure","members":{"GatewayARN":{"required":true},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{},"TapeRecoveryPointInfos":{"type":"list","members":{"type":"structure","members":{"TapeARN":{},"TapeRecoveryPointTime":{"type":"timestamp"},"TapeSizeInBytes":{"type":"integer"},"TapeStatus":{}}}},"Marker":{}}}},"describeTapes":{"name":"DescribeTapes","input":{"type":"structure","members":{"GatewayARN":{"required":true},"TapeARNs":{"type":"list","members":{}},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"Tapes":{"type":"list","members":{"type":"structure","members":{"TapeARN":{},"TapeBarcode":{},"TapeSizeInBytes":{"type":"integer"},"TapeStatus":{},"VTLDevice":{},"Progress":{"type":"float"}}}},"Marker":{}}}},"describeUploadBuffer":{"name":"DescribeUploadBuffer","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"UploadBufferUsedInBytes":{"type":"integer"},"UploadBufferAllocatedInBytes":{"type":"integer"}}}},"describeVTLDevices":{"name":"DescribeVTLDevices","input":{"type":"structure","members":{"GatewayARN":{"required":true},"VTLDeviceARNs":{"type":"list","members":{}},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{},"VTLDevices":{"type":"list","members":{"type":"structure","members":{"VTLDeviceARN":{},"VTLDeviceType":{},"VTLDeviceVendor":{},"VTLDeviceProductIdentifier":{},"DeviceiSCSIAttributes":{"type":"structure","members":{"TargetARN":{},"NetworkInterfaceId":{},"NetworkInterfacePort":{"type":"integer"},"ChapEnabled":{"type":"boolean"}}}}}},"Marker":{}}}},"describeWorkingStorage":{"name":"DescribeWorkingStorage","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"DiskIds":{"type":"list","members":{}},"WorkingStorageUsedInBytes":{"type":"integer"},"WorkingStorageAllocatedInBytes":{"type":"integer"}}}},"disableGateway":{"name":"DisableGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"listGateways":{"name":"ListGateways","input":{"type":"structure","members":{"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"Gateways":{"type":"list","members":{"type":"structure","members":{"GatewayARN":{},"GatewayType":{},"GatewayOperationalState":{}}}},"Marker":{}}}},"listLocalDisks":{"name":"ListLocalDisks","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"Disks":{"type":"list","members":{"type":"structure","members":{"DiskId":{},"DiskPath":{},"DiskNode":{},"DiskSizeInBytes":{"type":"integer"},"DiskAllocationType":{},"DiskAllocationResource":{}}}}}}},"listVolumeRecoveryPoints":{"name":"ListVolumeRecoveryPoints","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{},"VolumeRecoveryPointInfos":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeSizeInBytes":{"type":"integer"},"VolumeUsageInBytes":{"type":"integer"},"VolumeRecoveryPointTime":{}}}}}}},"listVolumes":{"name":"ListVolumes","input":{"type":"structure","members":{"GatewayARN":{"required":true},"Marker":{},"Limit":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{},"Marker":{},"VolumeInfos":{"type":"list","members":{"type":"structure","members":{"VolumeARN":{},"VolumeType":{}}}}}}},"retrieveTapeArchive":{"name":"RetrieveTapeArchive","input":{"type":"structure","members":{"TapeARN":{"required":true},"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"retrieveTapeRecoveryPoint":{"name":"RetrieveTapeRecoveryPoint","input":{"type":"structure","members":{"TapeARN":{"required":true},"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"TapeARN":{}}}},"shutdownGateway":{"name":"ShutdownGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"startGateway":{"name":"StartGateway","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateBandwidthRateLimit":{"name":"UpdateBandwidthRateLimit","input":{"type":"structure","members":{"GatewayARN":{"required":true},"AverageUploadRateLimitInBitsPerSec":{"type":"integer"},"AverageDownloadRateLimitInBitsPerSec":{"type":"integer"}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateChapCredentials":{"name":"UpdateChapCredentials","input":{"type":"structure","members":{"TargetARN":{"required":true},"SecretToAuthenticateInitiator":{"required":true},"InitiatorName":{"required":true},"SecretToAuthenticateTarget":{}}},"output":{"type":"structure","members":{"TargetARN":{},"InitiatorName":{}}}},"updateGatewayInformation":{"name":"UpdateGatewayInformation","input":{"type":"structure","members":{"GatewayARN":{"required":true},"GatewayName":{},"GatewayTimezone":{}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateGatewaySoftwareNow":{"name":"UpdateGatewaySoftwareNow","input":{"type":"structure","members":{"GatewayARN":{"required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateMaintenanceStartTime":{"name":"UpdateMaintenanceStartTime","input":{"type":"structure","members":{"GatewayARN":{"required":true},"HourOfDay":{"type":"integer","required":true},"MinuteOfHour":{"type":"integer","required":true},"DayOfWeek":{"type":"integer","required":true}}},"output":{"type":"structure","members":{"GatewayARN":{}}}},"updateSnapshotSchedule":{"name":"UpdateSnapshotSchedule","input":{"type":"structure","members":{"VolumeARN":{"required":true},"StartAt":{"type":"integer","required":true},"RecurrenceInHours":{"type":"integer","required":true},"Description":{}}},"output":{"type":"structure","members":{"VolumeARN":{}}}}},"pagination":{"describeCachediSCSIVolumes":{"resultKey":"CachediSCSIVolumes"},"describeStorediSCSIVolumes":{"resultKey":"StorediSCSIVolumes"},"describeTapeArchives":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"TapeArchives"},"describeTapeRecoveryPoints":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"TapeRecoveryPointInfos"},"describeTapes":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"Tapes"},"describeVTLDevices":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"VTLDevices"},"listGateways":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"Gateways"},"listLocalDisks":{"resultKey":"Disks"},"listVolumeRecoveryPoints":{"resultKey":"VolumeRecoveryPointInfos"},"listVolumes":{"inputToken":"Marker","outputToken":"Marker","limitKey":"Limit","resultKey":"VolumeInfos"}}});
AWS.Service.defineServiceApi(require("./services/sts"), "2011-06-15", {"format":"query","apiVersion":"2011-06-15","endpointPrefix":"sts","globalEndpoint":"sts.amazonaws.com","resultWrapped":true,"serviceAbbreviation":"AWS STS","serviceFullName":"AWS Security Token Service","signatureVersion":"v4","timestampFormat":"iso8601","operations":{"assumeRole":{"name":"AssumeRole","input":{"type":"structure","members":{"RoleArn":{"required":true},"RoleSessionName":{"required":true},"Policy":{},"DurationSeconds":{"type":"integer"},"ExternalId":{}}},"output":{"type":"structure","members":{"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretAccessKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}},"AssumedRoleUser":{"type":"structure","members":{"AssumedRoleId":{},"Arn":{}}},"PackedPolicySize":{"type":"integer"}}}},"assumeRoleWithSAML":{"name":"AssumeRoleWithSAML","input":{"type":"structure","members":{"RoleArn":{"required":true},"PrincipalArn":{"required":true},"SAMLAssertion":{"required":true},"Policy":{},"DurationSeconds":{"type":"integer"}}},"output":{"type":"structure","members":{"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretAccessKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}},"AssumedRoleUser":{"type":"structure","members":{"AssumedRoleId":{},"Arn":{}}},"PackedPolicySize":{"type":"integer"}}}},"assumeRoleWithWebIdentity":{"name":"AssumeRoleWithWebIdentity","input":{"type":"structure","members":{"RoleArn":{"required":true},"RoleSessionName":{"required":true},"WebIdentityToken":{"required":true},"ProviderId":{},"Policy":{},"DurationSeconds":{"type":"integer"}}},"output":{"type":"structure","members":{"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretAccessKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}},"SubjectFromWebIdentityToken":{},"AssumedRoleUser":{"type":"structure","members":{"AssumedRoleId":{},"Arn":{}}},"PackedPolicySize":{"type":"integer"}}}},"decodeAuthorizationMessage":{"name":"DecodeAuthorizationMessage","input":{"type":"structure","members":{"EncodedMessage":{"required":true}}},"output":{"type":"structure","members":{"DecodedMessage":{}}}},"getFederationToken":{"name":"GetFederationToken","input":{"type":"structure","members":{"Name":{"required":true},"Policy":{},"DurationSeconds":{"type":"integer"}}},"output":{"type":"structure","members":{"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretAccessKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}},"FederatedUser":{"type":"structure","members":{"FederatedUserId":{},"Arn":{}}},"PackedPolicySize":{"type":"integer"}}}},"getSessionToken":{"name":"GetSessionToken","input":{"type":"structure","members":{"DurationSeconds":{"type":"integer"},"SerialNumber":{},"TokenCode":{}}},"output":{"type":"structure","members":{"Credentials":{"type":"structure","members":{"AccessKeyId":{},"SecretAccessKey":{},"SessionToken":{},"Expiration":{"type":"timestamp"}}}}}}}});
AWS.Service.defineServiceApi(require("./services/support"), "2013-04-15", {"format":"json","apiVersion":"2013-04-15","endpointPrefix":"support","jsonVersion":"1.1","serviceFullName":"AWS Support","signatureVersion":"v4","targetPrefix":"AWSSupport_20130415","timestampFormat":"iso8601","operations":{"addCommunicationToCase":{"name":"AddCommunicationToCase","input":{"type":"structure","members":{"caseId":{},"communicationBody":{"required":true},"ccEmailAddresses":{"type":"list","members":{}}}},"output":{"type":"structure","members":{"result":{"type":"boolean"}}}},"createCase":{"name":"CreateCase","input":{"type":"structure","members":{"subject":{"required":true},"serviceCode":{},"severityCode":{},"categoryCode":{},"communicationBody":{"required":true},"ccEmailAddresses":{"type":"list","members":{}},"language":{},"issueType":{}}},"output":{"type":"structure","members":{"caseId":{}}}},"describeCases":{"name":"DescribeCases","input":{"type":"structure","members":{"caseIdList":{"type":"list","members":{}},"displayId":{},"afterTime":{},"beforeTime":{},"includeResolvedCases":{"type":"boolean"},"nextToken":{},"maxResults":{"type":"integer"},"language":{}}},"output":{"type":"structure","members":{"cases":{"type":"list","members":{"type":"structure","members":{"caseId":{},"displayId":{},"subject":{},"status":{},"serviceCode":{},"categoryCode":{},"severityCode":{},"submittedBy":{},"timeCreated":{},"recentCommunications":{"type":"structure","members":{"communications":{"type":"list","members":{"type":"structure","members":{"caseId":{},"body":{},"submittedBy":{},"timeCreated":{}}}},"nextToken":{}}},"ccEmailAddresses":{"type":"list","members":{}},"language":{}}}},"nextToken":{}}}},"describeCommunications":{"name":"DescribeCommunications","input":{"type":"structure","members":{"caseId":{"required":true},"beforeTime":{},"afterTime":{},"nextToken":{},"maxResults":{"type":"integer"}}},"output":{"type":"structure","members":{"communications":{"type":"list","members":{"type":"structure","members":{"caseId":{},"body":{},"submittedBy":{},"timeCreated":{}}}},"nextToken":{}}}},"describeServices":{"name":"DescribeServices","input":{"type":"structure","members":{"serviceCodeList":{"type":"list","members":{}},"language":{}}},"output":{"type":"structure","members":{"services":{"type":"list","members":{"type":"structure","members":{"code":{},"name":{},"categories":{"type":"list","members":{"type":"structure","members":{"code":{},"name":{}}}}}}}}}},"describeSeverityLevels":{"name":"DescribeSeverityLevels","input":{"type":"structure","members":{"language":{}}},"output":{"type":"structure","members":{"severityLevels":{"type":"list","members":{"type":"structure","members":{"code":{},"name":{}}}}}}},"describeTrustedAdvisorCheckRefreshStatuses":{"name":"DescribeTrustedAdvisorCheckRefreshStatuses","input":{"type":"structure","members":{"checkIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"statuses":{"type":"list","members":{"type":"structure","members":{"checkId":{},"status":{},"millisUntilNextRefreshable":{"type":"integer"}}}}}}},"describeTrustedAdvisorCheckResult":{"name":"DescribeTrustedAdvisorCheckResult","input":{"type":"structure","members":{"checkId":{"required":true},"language":{}}},"output":{"type":"structure","members":{"result":{"type":"structure","members":{"checkId":{},"timestamp":{},"status":{},"resourcesSummary":{"type":"structure","members":{"resourcesProcessed":{"type":"integer"},"resourcesFlagged":{"type":"integer"},"resourcesIgnored":{"type":"integer"},"resourcesSuppressed":{"type":"integer"}}},"categorySpecificSummary":{"type":"structure","members":{"costOptimizing":{"type":"structure","members":{"estimatedMonthlySavings":{"type":"float"},"estimatedPercentMonthlySavings":{"type":"float"}}}}},"flaggedResources":{"type":"list","members":{"type":"structure","members":{"status":{},"region":{},"resourceId":{},"isSuppressed":{"type":"boolean"},"metadata":{"type":"list","members":{}}}}}}}}}},"describeTrustedAdvisorCheckSummaries":{"name":"DescribeTrustedAdvisorCheckSummaries","input":{"type":"structure","members":{"checkIds":{"type":"list","members":{},"required":true}}},"output":{"type":"structure","members":{"summaries":{"type":"list","members":{"type":"structure","members":{"checkId":{},"timestamp":{},"status":{},"hasFlaggedResources":{"type":"boolean"},"resourcesSummary":{"type":"structure","members":{"resourcesProcessed":{"type":"integer"},"resourcesFlagged":{"type":"integer"},"resourcesIgnored":{"type":"integer"},"resourcesSuppressed":{"type":"integer"}}},"categorySpecificSummary":{"type":"structure","members":{"costOptimizing":{"type":"structure","members":{"estimatedMonthlySavings":{"type":"float"},"estimatedPercentMonthlySavings":{"type":"float"}}}}}}}}}}},"describeTrustedAdvisorChecks":{"name":"DescribeTrustedAdvisorChecks","input":{"type":"structure","members":{"language":{"required":true}}},"output":{"type":"structure","members":{"checks":{"type":"list","members":{"type":"structure","members":{"id":{},"name":{},"description":{},"category":{},"metadata":{"type":"list","members":{}}}}}}}},"refreshTrustedAdvisorCheck":{"name":"RefreshTrustedAdvisorCheck","input":{"type":"structure","members":{"checkId":{"required":true}}},"output":{"type":"structure","members":{"status":{"type":"structure","members":{"checkId":{},"status":{},"millisUntilNextRefreshable":{"type":"integer"}}}}}},"resolveCase":{"name":"ResolveCase","input":{"type":"structure","members":{"caseId":{}}},"output":{"type":"structure","members":{"initialCaseStatus":{},"finalCaseStatus":{}}}}},"pagination":{"describeCases":{"inputToken":"nextToken","outputToken":"nextToken","limitKey":"maxResults","resultKey":"cases"},"describeCommunications":{"inputToken":"nextToken","outputToken":"nextToken","limitKey":"maxResults","resultKey":"communications"},"describeServices":{"resultKey":"services"},"describeTrustedAdvisorCheckRefreshStatuses":{"resultKey":"statuses"},"describeTrustedAdvisorCheckSummaries":{"resultKey":"summaries"}}});
},{"./core":32,"./services/autoscaling":52,"./services/cloudformation":53,"./services/cloudfront":54,"./services/cloudsearch":55,"./services/cloudtrail":56,"./services/cloudwatch":57,"./services/datapipeline":58,"./services/directconnect":59,"./services/dynamodb":60,"./services/ec2":61,"./services/elasticache":62,"./services/elasticbeanstalk":63,"./services/elastictranscoder":64,"./services/elb":65,"./services/emr":66,"./services/glacier":67,"./services/iam":68,"./services/importexport":69,"./services/kinesis":70,"./services/opsworks":71,"./services/rds":72,"./services/redshift":73,"./services/route53":74,"./services/s3":75,"./services/ses":76,"./services/simpledb":77,"./services/simpleworkflow":78,"./services/sns":79,"./services/sqs":80,"./services/storagegateway":81,"./services/sts":82,"./services/support":83}],52:[function(require,module,exports){
var AWS = require('../core');

AWS.AutoScaling = AWS.Service.defineService('autoscaling', ['2011-01-01']);

module.exports = AWS.AutoScaling;

},{"../core":32}],53:[function(require,module,exports){
var AWS = require('../core');

AWS.CloudFormation = AWS.Service.defineService('cloudformation', ['2010-05-15']);

module.exports = AWS.CloudFormation;

},{"../core":32}],54:[function(require,module,exports){
var AWS = require('../core');

AWS.CloudFront = AWS.Service.defineService('cloudfront', ['2012-05-05', '2013-05-12*', '2013-08-26*', '2013-09-27*', '2013-11-11']);

module.exports = AWS.CloudFront;

},{"../core":32}],55:[function(require,module,exports){
var AWS = require('../core');

AWS.CloudSearch = AWS.Service.defineService('cloudsearch', ['2011-02-01']);

module.exports = AWS.CloudSearch;

},{"../core":32}],56:[function(require,module,exports){
var AWS = require('../core');

AWS.CloudTrail = AWS.Service.defineService('cloudtrail', ['2013-11-01']);

module.exports = AWS.CloudTrail;

},{"../core":32}],57:[function(require,module,exports){
var AWS = require('../core');

AWS.CloudWatch = AWS.Service.defineService('cloudwatch', ['2010-08-01']);

module.exports = AWS.CloudWatch;

},{"../core":32}],58:[function(require,module,exports){
var AWS = require('../core');

AWS.DataPipeline = AWS.Service.defineService('datapipeline', ['2012-10-29']);

module.exports = AWS.DataPipeline;

},{"../core":32}],59:[function(require,module,exports){
var AWS = require('../core');

AWS.DirectConnect = AWS.Service.defineService('directconnect', ['2012-10-25']);

module.exports = AWS.DirectConnect;

},{"../core":32}],60:[function(require,module,exports){
var AWS = require('../core');

AWS.DynamoDB = AWS.Service.defineService('dynamodb', ['2012-08-10', '2011-12-05'], {
  setupRequestListeners: function setupRequestListeners(request) {
    if (request.service.config.dynamoDbCrc32) {
      request.addListener('extractData', this.checkCrc32);
    }
  },


  checkCrc32: function checkCrc32(resp) {
    if (!resp.request.service.crc32IsValid(resp)) {
      resp.error = AWS.util.error(new Error(), {
        code: 'CRC32CheckFailed',
        message: 'CRC32 integrity check failed',
        retryable: true
      });
    }
  },


  crc32IsValid: function crc32IsValid(resp) {
    var crc = resp.httpResponse.headers['x-amz-crc32'];
    if (!crc) return true; // no (valid) CRC32 header
    return parseInt(crc, 10) == AWS.util.crypto.crc32(resp.httpResponse.body);
  },


  defaultRetryCount: 10,


  retryDelays: function retryDelays() {
    var retryCount = this.numRetries();
    var delays = [];
    for (var i = 0; i < retryCount; ++i) {
      if (i === 0) {
        delays.push(0);
      } else {
        delays.push(50 * Math.pow(2, i - 1));
      }
    }
    return delays;
  }
});

module.exports = AWS.DynamoDB;

},{"../core":32}],61:[function(require,module,exports){
var AWS = require('../core');

AWS.EC2 = AWS.Service.defineService('ec2', ['2013-06-15*', '2013-07-15*', '2013-08-15*', '2013-10-01*', '2013-10-15'], {
  setupRequestListeners: function setupRequestListeners(request) {
    request.removeListener('extractError', AWS.EventListeners.Query.EXTRACT_ERROR);
    request.addListener('extractError', this.extractError);
  },


  extractError: function extractError(resp) {
    var httpResponse = resp.httpResponse;
    var data = new AWS.XML.Parser({}).parse(httpResponse.body.toString() || '');
    if (data.Errors)
      resp.error = AWS.util.error(new Error(), {
        code: data.Errors.Error.Code,
        message: data.Errors.Error.Message
      });
    else
      resp.error = AWS.util.error(new Error(), {
        code: httpResponse.statusCode,
        message: null
      });
  }
});

module.exports = AWS.EC2;

},{"../core":32}],62:[function(require,module,exports){
var AWS = require('../core');

AWS.ElastiCache = AWS.Service.defineService('elasticache', ['2012-11-15*', '2013-06-15']);

module.exports = AWS.ElastiCache;

},{"../core":32}],63:[function(require,module,exports){
var AWS = require('../core');

AWS.ElasticBeanstalk = AWS.Service.defineService('elasticbeanstalk', ['2010-12-01']);

module.exports = AWS.ElasticBeanstalk;

},{"../core":32}],64:[function(require,module,exports){
var AWS = require('../core');

AWS.ElasticTranscoder = AWS.Service.defineService('elastictranscoder', ['2012-09-25'], {
  setupRequestListeners: function setupRequestListeners(request) {
    request.addListener('extractError', this.extractErrorCode);
  },


  extractErrorCode: function extractErrorCode(resp) {
    var errorType = resp.httpResponse.headers['x-amzn-errortype'];
    if (errorType) {
      resp.error.name = resp.error.code = errorType.split(':')[0];
    }
  }
});

module.exports = AWS.ElasticTranscoder;

},{"../core":32}],65:[function(require,module,exports){
var AWS = require('../core');

AWS.ELB = AWS.Service.defineService('elb', ['2012-06-01']);

module.exports = AWS.ELB;

},{"../core":32}],66:[function(require,module,exports){
var AWS = require('../core');

AWS.EMR = AWS.Service.defineService('emr', ['2009-03-31']);

module.exports = AWS.EMR;

},{"../core":32}],67:[function(require,module,exports){
var AWS = require('../core');

AWS.Glacier = AWS.Service.defineService('glacier', ['2012-06-01'], {
  setupRequestListeners: function setupRequestListeners(request) {
    request.on('validate', this.validateAccountId);
    request.on('build', this.addGlacierApiVersion);
    request.on('build', this.addTreeHashHeaders);
  },

  validateAccountId: function validateAccountId(request) {
    if (request.params.accountId !== undefined) return;
    request.params = AWS.util.copy(request.params);
    request.params.accountId = '-';
  },

  addGlacierApiVersion: function addGlacierApiVersion(request) {
    var version = request.service.api.apiVersion;
    request.httpRequest.headers['x-amz-glacier-version'] = version;
  },

  addTreeHashHeaders: function addTreeHashHeaders(request) {
    if (request.params.body === undefined) return;

    var hashes = request.service.computeChecksums(request.params.body);
    request.httpRequest.headers['x-amz-content-sha256'] = hashes.linearHash;

    if (!request.httpRequest.headers['x-amz-sha256-tree-hash']) {
      request.httpRequest.headers['x-amz-sha256-tree-hash'] = hashes.treeHash;
    }
  }
});

AWS.util.update(AWS.Glacier.prototype, {



  computeChecksums: function computeChecksums(data) {
    if (!AWS.util.Buffer.isBuffer(data)) data = new AWS.util.Buffer(data);

    var mb = 1024 * 1024;
    var hashes = [];
    var hash = AWS.util.crypto.createHash('sha256');

    for (var i = 0; i < data.length; i += mb) {
      var chunk = data.slice(i, Math.min(i + mb, data.length));
      hash.update(chunk);
      hashes.push(AWS.util.crypto.sha256(chunk));
    }

    return {
      linearHash: hash.digest('hex'),
      treeHash: this.buildHashTree(hashes)
    };
  },


  buildHashTree: function buildHashTree(hashes) {
    while (hashes.length > 1) {
      var tmpHashes = [];
      for (var i = 0; i < hashes.length; i += 2) {
        if (hashes[i+1]) {
          var tmpHash = new AWS.util.Buffer(64);
          tmpHash.write(hashes[i], 0, 32, 'binary');
          tmpHash.write(hashes[i+1], 32, 32, 'binary');
          tmpHashes.push(AWS.util.crypto.sha256(tmpHash));
        } else {
          tmpHashes.push(hashes[i]);
        }
      }
      hashes = tmpHashes;
    }

    return AWS.util.crypto.toHex(hashes[0]);
  }
});

module.exports = AWS.Glacier;

},{"../core":32}],68:[function(require,module,exports){
var AWS = require('../core');

AWS.IAM = AWS.Service.defineService('iam', ['2010-05-08']);

module.exports = AWS.IAM;

},{"../core":32}],69:[function(require,module,exports){
var AWS = require('../core');

AWS.ImportExport = AWS.Service.defineService('importexport', ['2010-06-01']);

module.exports = AWS.ImportExport;

},{"../core":32}],70:[function(require,module,exports){
var AWS = require('../core');

AWS.Kinesis = AWS.Service.defineService('kinesis', ['2013-12-02']);

module.exports = AWS.Kinesis;

},{"../core":32}],71:[function(require,module,exports){
var AWS = require('../core');

AWS.OpsWorks = AWS.Service.defineService('opsworks', ['2013-02-18']);

module.exports = AWS.OpsWorks;

},{"../core":32}],72:[function(require,module,exports){
var AWS = require('../core');

AWS.RDS = AWS.Service.defineService('rds', ['2013-01-10', '2013-02-12', '2013-05-15*', '2013-09-09']);

module.exports = AWS.RDS;

},{"../core":32}],73:[function(require,module,exports){
var AWS = require('../core');

AWS.Redshift = AWS.Service.defineService('redshift', ['2012-12-01']);

module.exports = AWS.Redshift;

},{"../core":32}],74:[function(require,module,exports){
var AWS = require('../core');

AWS.Route53 = AWS.Service.defineService('route53', ['2012-12-12'], {

  setupRequestListeners: function setupRequestListeners(request) {
    request.on('build', this.sanitizeUrl);
  },


  sanitizeUrl: function sanitizeUrl(request) {
    var path = request.httpRequest.path;
    request.httpRequest.path = path.replace(/\/%2F\w+%2F/, '/');
  },


  setEndpoint: function setEndpoint(endpoint) {
    if (endpoint) {
      AWS.Service.prototype.setEndpoint(endpoint);
    } else {
      var opts = {sslEnabled: true}; // SSL is always enabled for Route53
      this.endpoint = new AWS.Endpoint(this.api.globalEndpoint, opts);
    }
  }
});

module.exports = AWS.Route53;

},{"../core":32}],75:[function(require,module,exports){
var AWS = require('../core');

AWS.S3 = AWS.Service.defineService('s3', ['2006-03-01'], {

  initialize: function initialize(options) {
    AWS.Service.prototype.initialize.call(this, options);
    this.setEndpoint((options || {}).endpoint, options);
  },

  setupRequestListeners: function setupRequestListeners(request) {
    request.addListener('build', this.addContentType);
    request.addListener('build', this.populateURI);
    request.addListener('build', this.computeContentMd5);
    request.addListener('build', this.computeSha256);
    request.removeListener('validate',
      AWS.EventListeners.Core.VALIDATE_REGION);
    request.addListener('extractError', this.extractError);
    request.addListener('extractData', this.extractData);
  },


  populateURI: function populateURI(req) {
    var httpRequest = req.httpRequest;
    var b = req.params.Bucket;

    if (b) {
      if (!req.service.pathStyleBucketName(b)) {
        httpRequest.endpoint.host = httpRequest.endpoint.hostname = b + '.' +
          httpRequest.endpoint.hostname;

        httpRequest.virtualHostedBucket = b; // needed for signing the request
        httpRequest.path = httpRequest.path.replace(new RegExp('^/' + b), '');
        if (httpRequest.path[0] !== '/') {
          httpRequest.path = '/' + httpRequest.path;
        }
      }
    }
  },


  addContentType: function addContentType(req) {
    var httpRequest = req.httpRequest;
    if (!httpRequest.headers['Content-Type']) { // always have a Content-Type
      httpRequest.headers['Content-Type'] = 'application/octet-stream';
    }
    if (AWS.util.isBrowser() && navigator.userAgent.match(/Firefox/)) {
      if (!httpRequest.headers['Content-Type'].match(/;/)) {
        var charset = '; charset=UTF-8';
        httpRequest.headers['Content-Type'] += charset;
      }
    }
  },


  computableChecksumOperations: {
    putBucketCors: true,
    putBucketLifecycle: true,
    putBucketTagging: true,
    deleteObjects: true
  },


  willComputeChecksums: function willComputeChecksums(req) {
    if (this.computableChecksumOperations[req.operation]) return true;
    if (!this.config.computeChecksums) return false;

    if (!AWS.util.Buffer.isBuffer(req.httpRequest.body) &&
        typeof req.httpRequest.body !== 'string') {
      return false;
    }

    var rules = req.service.api.operations[req.operation].input.members;

    if (req.service.getSignerClass(req) === AWS.Signers.V4) {
      if (rules.ContentMD5 && !rules.ContentMD5.required) return false;
    }

    if (rules.ContentMD5 && !req.params.ContentMD5) return true;
  },


  computeContentMd5: function computeContentMd5(req) {
    if (req.service.willComputeChecksums(req)) {
      var md5 = AWS.util.crypto.md5(req.httpRequest.body, 'base64');
      req.httpRequest.headers['Content-MD5'] = md5;
    }
  },

  computeSha256: function computeSha256(req) {
    if (req.service.getSignerClass(req) === AWS.Signers.V4) {
      req.httpRequest.headers['X-Amz-Content-Sha256'] =
        AWS.util.crypto.sha256(req.httpRequest.body || '', 'hex');
    }
  },


  pathStyleBucketName: function pathStyleBucketName(bucketName) {
    if (this.config.s3ForcePathStyle) return true;

    if (this.dnsCompatibleBucketName(bucketName)) {
      return (this.config.sslEnabled && bucketName.match(/\./)) ? true : false;
    } else {
      return true; // not dns compatible names must always use path style
    }
  },


  dnsCompatibleBucketName: function dnsCompatibleBucketName(bucketName) {
    var b = bucketName;
    var domain = new RegExp(/^[a-z0-9][a-z0-9\.\-]{1,61}[a-z0-9]$/);
    var ipAddress = new RegExp(/(\d+\.){3}\d+/);
    var dots = new RegExp(/\.\./);
    return (b.match(domain) && !b.match(ipAddress) && !b.match(dots)) ? true : false;
  },


  escapePathParam: function escapePathParam(value) {
    return AWS.util.uriEscapePath(String(value));
  },


  successfulResponse: function successfulResponse(resp) {
    var req = resp.request;
    var httpResponse = resp.httpResponse;
    if (req.operation === 'completeMultipartUpload' &&
        httpResponse.body.toString().match('<Error>'))
      return false;
    else
      return httpResponse.statusCode < 300;
  },


  retryableError: function retryableError(error, request) {
    if (request.operation == 'completeMultipartUpload' &&
        error.statusCode === 200) {
      return true;
    } else {
      var _super = AWS.Service.prototype.retryableError;
      return _super.call(this, error, request);
    }
  },


  extractData: function extractData(resp) {
    var req = resp.request;
    if (req.operation === 'getBucketLocation') {

      var match = resp.httpResponse.body.toString().match(/>(.+)<\/Location/);
      if (match) {
        delete resp.data['_'];
        resp.data.LocationConstraint = match[1];
      }
    }
  },


  extractError: function extractError(resp) {
    var codes = {
      304: 'NotModified',
      403: 'Forbidden',
      400: 'BadRequest',
      404: 'NotFound'
    };

    var code = resp.httpResponse.statusCode;
    var body = resp.httpResponse.body;
    if (codes[code] && body.length === 0) {
      resp.error = AWS.util.error(new Error(), {
        code: codes[resp.httpResponse.statusCode],
        message: null
      });
    } else {
      var data = new AWS.XML.Parser({}).parse(body.toString());
      resp.error = AWS.util.error(new Error(), {
        code: data.Code || code,
        message: data.Message || null
      });
    }
  },


  setEndpoint: function setEndpoint(endpoint) {
    if (endpoint) {
      this.endpoint = new AWS.Endpoint(endpoint, this.config);
    } else if (this.config.region && this.config.region !== 'us-east-1') {
      var sep = '-';
      if (this.isRegionV4()) sep = '.';
      var hostname = 's3' + sep + this.config.region + this.endpointSuffix();
      this.endpoint = new AWS.Endpoint(hostname);
    } else {
      this.endpoint = new AWS.Endpoint(this.api.globalEndpoint, this.config);
    }
  },


  getSignedUrl: function getSignedUrl(operation, params, callback) {
    params = params || {};
    var expires = params.Expires || 900;
    delete params.Expires; // we can't validate this
    var events = ['validate', 'build', 'sign'];
    var request = this.makeRequest(operation, params);

    var expiresHeader = 'presigned-expires';

    function signedUrlBuilder() {
      delete request.httpRequest.headers['User-Agent'];
      delete request.httpRequest.headers['X-Amz-User-Agent'];

      if (request.service.getSignerClass() === AWS.Signers.V4) {
        if (expires > 604800) { // one week expiry is invalid
          var message = 'getSignedUrl() does not support expiry time greater ' +
                        'than a week with SigV4 signing.';
          throw AWS.util.error(new Error(), {
            code: 'InvalidExpiryTime', message: message, retryable: false
          });
        }
        request.httpRequest.headers[expiresHeader] = expires;
      } else {
        request.httpRequest.headers[expiresHeader] = parseInt(
          AWS.util.date.unixTimestamp() + expires, 10).toString();
      }
    }

    function signedUrlSigner() {
      var queryParams = {};

      AWS.util.each(request.httpRequest.headers, function (key, value) {
        if (key === expiresHeader) key = 'Expires';
        queryParams[key] = value;
      });
      delete request.httpRequest.headers[expiresHeader];

      var auth = queryParams['Authorization'].split(' ');
      if (auth[0] === 'AWS') {
        auth = auth[1].split(':');
        queryParams['AWSAccessKeyId'] = auth[0];
        queryParams['Signature'] = auth[1];
      } else if (auth[0] === 'AWS4-HMAC-SHA256') { // SigV4 signing
        auth.shift();
        var rest = auth.join(' ');
        var signature = rest.match(/Signature=(.*?)(?:,|\s|\r?\n|$)/)[1];
        queryParams['X-Amz-Signature'] = signature;
        delete queryParams['Expires'];
      }
      delete queryParams['Authorization'];
      delete queryParams['Host'];

      var endpoint = request.httpRequest.endpoint;
      var parsedUrl = AWS.util.urlParse(request.httpRequest.path);
      var querystring = AWS.util.queryParamsToString(queryParams);
      endpoint.pathname = parsedUrl.pathname;
      endpoint.search = !parsedUrl.search ? querystring :
                        parsedUrl.search + '&' + querystring;
    }

    request.on('build', signedUrlBuilder);
    request.on('sign', signedUrlSigner);
    request.removeListener('build', this.addContentType);
    if (!params.Body) { // no Content-MD5/SHA-256 if body is not provided
      request.removeListener('build', this.computeContentMd5);
      request.removeListener('build', this.computeSha256);
    }

    if (callback) {
      request.emitEvents(events, new AWS.Response(request), function (err) {
        if (err) callback(err, null);
        else callback(null, AWS.util.urlFormat(request.httpRequest.endpoint));
      });
    } else {
      AWS.util.arrayEach(events, function (item) {
        request.emitEvent(item, [request]);
      });
      return AWS.util.urlFormat(request.httpRequest.endpoint);
    }
  }
});

AWS.S3.prototype.createBucket = function createBucket(params, callback) {
  if (!params) params = {};
  var hostname = this.endpoint.hostname;
  if (hostname != this.api.globalEndpoint && !params.CreateBucketConfiguration) {
    params.CreateBucketConfiguration = { LocationConstraint: this.config.region };
  }
  return this.makeRequest('createBucket', params, callback);
};

module.exports = AWS.S3;

},{"../core":32}],76:[function(require,module,exports){
var AWS = require('../core');

AWS.SES = AWS.Service.defineService('ses', ['2010-12-01'], {

  initialize: function initialize(options) {
    options = options || {};
    options.region = options.region || 'us-east-1';
    AWS.Service.prototype.initialize.call(this, options);
  },


  defaultEndpoint: 'us-east-1',


  setupRequestListeners: function setupRequestListeners(request) {
    request.removeListener('validate',
      AWS.EventListeners.Core.VALIDATE_REGION);
  }
});

module.exports = AWS.SES;

},{"../core":32}],77:[function(require,module,exports){
var AWS = require('../core');

AWS.SimpleDB = AWS.Service.defineService('simpledb', ['2009-04-15'], {

  setEndpoint: function setEndpoint(endpoint) {
    if (this.config.region === 'us-east-1') {
      var prefix = this.api.endpointPrefix;
      this.endpoint = new AWS.Endpoint(prefix + '.amazonaws.com');
    } else {
      AWS.Service.prototype.setEndpoint.call(this, endpoint);
    }
  }
});

module.exports = AWS.SimpleDB;

},{"../core":32}],78:[function(require,module,exports){
var AWS = require('../core');

AWS.SimpleWorkflow = AWS.Service.defineService('simpleworkflow', ['2012-01-25']);

module.exports = AWS.SimpleWorkflow;

},{"../core":32}],79:[function(require,module,exports){
var AWS = require('../core');

AWS.SNS = AWS.Service.defineService('sns', ['2010-03-31']);

module.exports = AWS.SNS;

},{"../core":32}],80:[function(require,module,exports){
var AWS = require('../core');

AWS.SQS = AWS.Service.defineService('sqs', ['2012-11-05'], {
  setupRequestListeners: function setupRequestListeners(request) {
    request.addListener('build', this.buildEndpoint);

    if (request.service.config.computeChecksums) {
      if (request.operation === 'sendMessage') {
        request.addListener('extractData', this.verifySendMessageChecksum);
      } else if (request.operation === 'sendMessageBatch') {
        request.addListener('extractData', this.verifySendMessageBatchChecksum);
      } else if (request.operation === 'receiveMessage') {
        request.addListener('extractData', this.verifyReceiveMessageChecksum);
      }
    }
  },

  verifySendMessageChecksum: function verifySendMessageChecksum(response) {
    if (!response.data) return;

    var md5 = response.data.MD5OfMessageBody;
    var body = this.params.MessageBody;
    var calculatedMd5 = this.service.calculateChecksum(body);
    if (calculatedMd5 !== md5) {
      var msg = 'Got "' + response.data.MD5OfMessageBody +
        '", expecting "' + calculatedMd5 + '".';
      this.service.throwInvalidChecksumError(response,
        [response.data.MessageId], msg);
    }
  },

  verifySendMessageBatchChecksum: function verifySendMessageBatchChecksum(response) {
    if (!response.data) return;

    var service = this.service;
    var entries = {};
    var errors = [];
    var messageIds = [];
    AWS.util.arrayEach(response.data.Successful, function (entry) {
      entries[entry.Id] = entry;
    });
    AWS.util.arrayEach(this.params.Entries, function (entry) {
      if (entries[entry.Id]) {
        var md5 = entries[entry.Id].MD5OfMessageBody;
        var body = entry.MessageBody;
        if (!service.isChecksumValid(md5, body)) {
          errors.push(entry.Id);
          messageIds.push(entries[entry.Id].MessageId);
        }
      }
    });

    if (errors.length > 0) {
      service.throwInvalidChecksumError(response, messageIds,
        'Invalid messages: ' + errors.join(', '));
    }
  },

  verifyReceiveMessageChecksum: function verifyReceiveMessageChecksum(response) {
    if (!response.data) return;

    var service = this.service;
    var messageIds = [];
    AWS.util.arrayEach(response.data.Messages, function(message) {
      var md5 = message.MD5OfBody;
      var body = message.Body;
      if (!service.isChecksumValid(md5, body)) {
        messageIds.push(message.MessageId);
      }
    });

    if (messageIds.length > 0) {
      service.throwInvalidChecksumError(response, messageIds,
        'Invalid messages: ' + messageIds.join(', '));
    }
  },

  throwInvalidChecksumError: function throwInvalidChecksumError(response, ids, message) {
    response.error = AWS.util.error(new Error(), {
      retryable: true,
      code: 'InvalidChecksum',
      messageIds: ids,
      message: response.request.operation +
               ' returned an invalid MD5 response. ' + message
    });
  },

  isChecksumValid: function isChecksumValid(checksum, data) {
    return this.calculateChecksum(data) === checksum;
  },

  calculateChecksum: function calculateChecksum(data) {
    return AWS.util.crypto.md5(data, 'hex');
  },

  buildEndpoint: function buildEndpoint(request) {
    var url = request.httpRequest.params.QueueUrl;
    if (url) {
      request.httpRequest.endpoint = new AWS.Endpoint(url);


      var matches = request.httpRequest.endpoint.host.match(/^sqs\.(.+?)\./);
      if (matches) request.httpRequest.region = matches[1];
    }
  }
});

module.exports = AWS.SQS;

},{"../core":32}],81:[function(require,module,exports){
var AWS = require('../core');

AWS.StorageGateway = AWS.Service.defineService('storagegateway', ['2013-06-30', '2012-06-30']);

module.exports = AWS.StorageGateway;

},{"../core":32}],82:[function(require,module,exports){
var AWS = require('../core');

AWS.STS = AWS.Service.defineService('sts', ['2011-06-15'], {

  credentialsFrom: function credentialsFrom(data, credentials) {
    if (!data) return null;
    if (!credentials) credentials = new AWS.TemporaryCredentials();
    credentials.expired = false;
    credentials.accessKeyId = data.Credentials.AccessKeyId;
    credentials.secretAccessKey = data.Credentials.SecretAccessKey;
    credentials.sessionToken = data.Credentials.SessionToken;
    credentials.expireTime = data.Credentials.Expiration;
    return credentials;
  }
});

AWS.STS.prototype.assumeRoleWithWebIdentity = function assumeRoleWithWebIdentity(params, callback) {
  return this.makeUnauthenticatedRequest('assumeRoleWithWebIdentity', params, callback);
};

AWS.STS.prototype.assumeRoleWithSAML = function assumeRoleWithSAML(params, callback) {
  return this.makeUnauthenticatedRequest('assumeRoleWithSAML', params, callback);
};

module.exports = AWS.STS;

},{"../core":32}],83:[function(require,module,exports){
var AWS = require('../core');

AWS.Support = AWS.Service.defineService('support', ['2013-04-15']);

module.exports = AWS.Support;

},{"../core":32}],84:[function(require,module,exports){
var AWS = require('../core');
require('./v3');
var inherit = AWS.util.inherit;


AWS.Signers.CloudFront = inherit(AWS.Signers.S3, {

  stringToSign: function stringToSign() {
    return this.request.headers['X-Amz-Date'];
  }
});

module.exports = AWS.Signers.CloudFront;

},{"../core":32,"./v3":88}],85:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


AWS.Signers.RequestSigner = inherit({
  constructor: function RequestSigner(request) {
    this.request = request;
  }
});

AWS.Signers.RequestSigner.getVersion = function getVersion(version) {
  switch (version) {
    case 'v2': return AWS.Signers.V2;
    case 'v3': return AWS.Signers.V3;
    case 'v4': return AWS.Signers.V4;
    case 's3': return AWS.Signers.S3;
    case 'v3https': return AWS.Signers.V3Https;
    case 'cloudfront': return AWS.Signers.CloudFront;
  }
  throw new Error('Unknown signing version ' + version);
};

require('./v2');
require('./v3');
require('./v3https');
require('./v4');
require('./s3');
require('./cloudfront');

},{"../core":32,"./cloudfront":84,"./s3":86,"./v2":87,"./v3":88,"./v3https":89,"./v4":90}],86:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


AWS.Signers.S3 = inherit(AWS.Signers.RequestSigner, {

  subResources: {
    'acl': 1,
    'cors': 1,
    'lifecycle': 1,
    'delete': 1,
    'location': 1,
    'logging': 1,
    'notification': 1,
    'partNumber': 1,
    'policy': 1,
    'requestPayment': 1,
    'restore': 1,
    'tagging': 1,
    'torrent': 1,
    'uploadId': 1,
    'uploads': 1,
    'versionId': 1,
    'versioning': 1,
    'versions': 1,
    'website': 1
  },

  responseHeaders: {
    'response-content-type': 1,
    'response-content-language': 1,
    'response-expires': 1,
    'response-cache-control': 1,
    'response-content-disposition': 1,
    'response-content-encoding': 1
  },

  addAuthorization: function addAuthorization(credentials, date) {
    if (!this.request.headers['presigned-expires']) {
      this.request.headers['X-Amz-Date'] = AWS.util.date.rfc822(date);
    }

    if (credentials.sessionToken) {
      this.request.headers['x-amz-security-token'] = credentials.sessionToken;
    }

    var signature = this.sign(credentials.secretAccessKey, this.stringToSign());
    var auth = 'AWS ' + credentials.accessKeyId + ':' + signature;

    this.request.headers['Authorization'] = auth;
  },

  stringToSign: function stringToSign() {
    var r = this.request;

    var parts = [];
    parts.push(r.method);
    parts.push(r.headers['Content-MD5'] || '');
    parts.push(r.headers['Content-Type'] || '');

    parts.push(r.headers['presigned-expires'] || '');

    var headers = this.canonicalizedAmzHeaders();
    if (headers) parts.push(headers);
    parts.push(this.canonicalizedResource());

    return parts.join('\n');

  },

  canonicalizedAmzHeaders: function canonicalizedAmzHeaders() {

    var amzHeaders = [];

    AWS.util.each(this.request.headers, function (name) {
      if (name.match(/^x-amz-/i))
        amzHeaders.push(name);
    });

    amzHeaders.sort(function (a, b) {
      return a.toLowerCase() < b.toLowerCase() ? -1 : 1;
    });

    var parts = [];
    AWS.util.arrayEach.call(this, amzHeaders, function (name) {
      parts.push(name.toLowerCase() + ':' + String(this.request.headers[name]));
    });

    return parts.join('\n');

  },

  canonicalizedResource: function canonicalizedResource() {

    var r = this.request;

    var parts = r.path.split('?');
    var path = parts[0];
    var querystring = parts[1];

    var resource = '';

    if (r.virtualHostedBucket)
      resource += '/' + r.virtualHostedBucket;

    resource += path;

    if (querystring) {

      var resources = [];

      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {
        var name = param.split('=')[0];
        var value = param.split('=')[1];

        if (this.subResources[name] || this.responseHeaders[name]) {
          var resource = { name: name };
          if (value !== undefined) {
            if (this.subResources[name]) {
              resource.value = value;
            } else {
              resource.value = decodeURIComponent(value);
            }
          }
          resources.push(resource);
        }
      });

      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });

      if (resources.length) {

        querystring = [];
        AWS.util.arrayEach(resources, function (resource) {
          if (resource.value === undefined)
            querystring.push(resource.name);
          else
            querystring.push(resource.name + '=' + resource.value);
        });

        resource += '?' + querystring.join('&');
      }

    }

    return resource;

  },

  sign: function sign(secret, string) {
    return AWS.util.crypto.hmac(secret, string, 'base64', 'sha1');
  }
});

module.exports = AWS.Signers.S3;

},{"../core":32}],87:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


AWS.Signers.V2 = inherit(AWS.Signers.RequestSigner, {
  addAuthorization: function addAuthorization(credentials, date) {

    if (!date) date = AWS.util.date.getDate();

    var r = this.request;

    r.params.Timestamp = AWS.util.date.iso8601(date);
    r.params.SignatureVersion = '2';
    r.params.SignatureMethod = 'HmacSHA256';
    r.params.AWSAccessKeyId = credentials.accessKeyId;

    if (credentials.sessionToken) {
      r.params.SecurityToken = credentials.sessionToken;
    }

    delete r.params.Signature; // delete old Signature for re-signing
    r.params.Signature = this.signature(credentials);

    r.body = AWS.util.queryParamsToString(r.params);
    r.headers['Content-Length'] = r.body.length;
  },

  signature: function signature(credentials) {
    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');
  },

  stringToSign: function stringToSign() {
    var parts = [];
    parts.push(this.request.method);
    parts.push(this.request.endpoint.host.toLowerCase());
    parts.push(this.request.pathname());
    parts.push(AWS.util.queryParamsToString(this.request.params));
    return parts.join('\n');
  }

});

module.exports = AWS.Signers.V2;

},{"../core":32}],88:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


AWS.Signers.V3 = inherit(AWS.Signers.RequestSigner, {
  addAuthorization: function addAuthorization(credentials, date) {

    var datetime = AWS.util.date.rfc822(date);

    this.request.headers['X-Amz-Date'] = datetime;

    if (credentials.sessionToken) {
      this.request.headers['x-amz-security-token'] = credentials.sessionToken;
    }

    this.request.headers['X-Amzn-Authorization'] =
      this.authorization(credentials, datetime);

  },

  authorization: function authorization(credentials) {
    return 'AWS3 ' +
      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +
      'Algorithm=HmacSHA256,' +
      'SignedHeaders=' + this.signedHeaders() + ',' +
      'Signature=' + this.signature(credentials);
  },

  signedHeaders: function signedHeaders() {
    var headers = [];
    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {
      headers.push(h.toLowerCase());
    });
    return headers.sort().join(';');
  },

  canonicalHeaders: function canonicalHeaders() {
    var headers = this.request.headers;
    var parts = [];
    AWS.util.arrayEach(this.headersToSign(), function iterator(h) {
      parts.push(h.toLowerCase().trim() + ':' + String(headers[h]).trim());
    });
    return parts.sort().join('\n') + '\n';
  },

  headersToSign: function headersToSign() {
    var headers = [];
    AWS.util.each(this.request.headers, function iterator(k) {
      if (k === 'Host' || k === 'Content-Encoding' || k.match(/^X-Amz/i)) {
        headers.push(k);
      }
    });
    return headers;
  },

  signature: function signature(credentials) {
    return AWS.util.crypto.hmac(credentials.secretAccessKey, this.stringToSign(), 'base64');
  },

  stringToSign: function stringToSign() {
    var parts = [];
    parts.push(this.request.method);
    parts.push('/');
    parts.push('');
    parts.push(this.canonicalHeaders());
    parts.push(this.request.body);
    return AWS.util.crypto.sha256(parts.join('\n'));
  }

});

module.exports = AWS.Signers.V3;

},{"../core":32}],89:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;

require('./v3');


AWS.Signers.V3Https = inherit(AWS.Signers.V3, {
  authorization: function authorization(credentials) {
    return 'AWS3-HTTPS ' +
      'AWSAccessKeyId=' + credentials.accessKeyId + ',' +
      'Algorithm=HmacSHA256,' +
      'Signature=' + this.signature(credentials);
  },

  stringToSign: function stringToSign() {
    return this.request.headers['X-Amz-Date'];
  }
});

module.exports = AWS.Signers.V3Https;

},{"../core":32,"./v3":88}],90:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;


var cachedSecret = {};


AWS.Signers.V4 = inherit(AWS.Signers.RequestSigner, {
  constructor: function V4(request, serviceName) {
    AWS.Signers.RequestSigner.call(this, request);
    this.serviceName = serviceName;
  },

  addAuthorization: function addAuthorization(credentials, date) {
    var datetime = AWS.util.date.iso8601(date).replace(/[:\-]|\.\d{3}/g, '');
    this.addHeaders(credentials, datetime);
    this.updateBody(credentials);
    this.request.headers['Authorization'] =
      this.authorization(credentials, datetime);
  },

  addHeaders: function addHeaders(credentials, datetime) {
    this.request.headers['X-Amz-Date'] = datetime;
    if (credentials.sessionToken) {
      this.request.headers['x-amz-security-token'] = credentials.sessionToken;
    }
  },

  updateBody: function updateBody(credentials) {
    if (this.request.params) {
      this.request.params.AWSAccessKeyId = credentials.accessKeyId;

      if (credentials.sessionToken) {
        this.request.params.SecurityToken = credentials.sessionToken;
      }

      this.request.body = AWS.util.queryParamsToString(this.request.params);
      this.request.headers['Content-Length'] = this.request.body.length;
    }
  },

  authorization: function authorization(credentials, datetime) {
    var parts = [];
    var credString = this.credentialString(datetime);
    parts.push('AWS4-HMAC-SHA256 Credential=' +
      credentials.accessKeyId + '/' + credString);
    parts.push('SignedHeaders=' + this.signedHeaders());
    parts.push('Signature=' + this.signature(credentials, datetime));
    return parts.join(', ');
  },

  signature: function signature(credentials, datetime) {
    var cache = cachedSecret[this.serviceName];
    var date = datetime.substr(0, 8);
    if (!cache ||
        cache.akid !== credentials.accessKeyId ||
        cache.region !== this.request.region ||
        cache.date !== date) {
      var kSecret = credentials.secretAccessKey;
      var kDate = AWS.util.crypto.hmac('AWS4' + kSecret, date, 'buffer');
      var kRegion = AWS.util.crypto.hmac(kDate, this.request.region, 'buffer');
      var kService = AWS.util.crypto.hmac(kRegion, this.serviceName, 'buffer');
      var kCredentials = AWS.util.crypto.hmac(kService, 'aws4_request', 'buffer');
      cachedSecret[this.serviceName] = {
        region: this.request.region, date: date,
        key: kCredentials, akid: credentials.accessKeyId
      };
    }

    var key = cachedSecret[this.serviceName].key;
    return AWS.util.crypto.hmac(key, this.stringToSign(datetime), 'hex');
  },

  stringToSign: function stringToSign(datetime) {
    var parts = [];
    parts.push('AWS4-HMAC-SHA256');
    parts.push(datetime);
    parts.push(this.credentialString(datetime));
    parts.push(this.hexEncodedHash(this.canonicalString()));
    return parts.join('\n');
  },

  canonicalString: function canonicalString() {
    var parts = [];
    parts.push(this.request.method);
    parts.push(this.request.pathname());
    parts.push(this.request.search());
    parts.push(this.canonicalHeaders() + '\n');
    parts.push(this.signedHeaders());
    parts.push(this.hexEncodedBodyHash());
    return parts.join('\n');
  },

  canonicalHeaders: function canonicalHeaders() {
    var headers = [];
    AWS.util.each.call(this, this.request.headers, function (key, item) {
      headers.push([key, item]);
    });
    headers.sort(function (a, b) {
      return a[0].toLowerCase() < b[0].toLowerCase() ? -1 : 1;
    });
    var parts = [];
    AWS.util.arrayEach.call(this, headers, function (item) {
      var key = item[0].toLowerCase();
      if (this.isSignableHeader(key)) {
        parts.push(key + ':' +
          this.canonicalHeaderValues(item[1].toString()));
      }
    });
    return parts.join('\n');
  },

  canonicalHeaderValues: function canonicalHeaderValues(values) {
    return values.replace(/\s+/g, ' ').replace(/^\s+|\s+$/g, '');
  },

  signedHeaders: function signedHeaders() {
    var keys = [];
    AWS.util.each.call(this, this.request.headers, function (key) {
      key = key.toLowerCase();
      if (this.isSignableHeader(key)) keys.push(key);
    });
    return keys.sort().join(';');
  },

  credentialString: function credentialString(datetime) {
    var parts = [];
    parts.push(datetime.substr(0, 8));
    parts.push(this.request.region);
    parts.push(this.serviceName);
    parts.push('aws4_request');
    return parts.join('/');
  },

  hexEncodedHash: function hash(string) {
    return AWS.util.crypto.sha256(string, 'hex');
  },

  hexEncodedBodyHash: function hexEncodedBodyHash() {
    if (this.request.headers['X-Amz-Content-Sha256']) {
      return this.request.headers['X-Amz-Content-Sha256'];
    } else {
      return this.hexEncodedHash(this.request.body || '');
    }
  },

  unsignableHeaders: ['authorization', 'content-type', 'user-agent',
                      'x-amz-user-agent', 'x-amz-content-sha256'],

  isSignableHeader: function isSignableHeader(key) {
    return this.unsignableHeaders.indexOf(key) < 0;
  }

});

module.exports = AWS.Signers.V4;

},{"../core":32}],91:[function(require,module,exports){
(function (process){/*global escape:true */

var AWS = require('./core');
var cryptoLib = require('crypto');


var Buffer = require('buffer').Buffer;



AWS.util = {
  engine: function engine() {
    if (AWS.util.isBrowser() && typeof navigator !== 'undefined') {
      return navigator.userAgent;
    } else {
      return process.platform + '/' + process.version;
    }
  },

  userAgent: function userAgent() {
    var name = AWS.util.isBrowser() ? 'js' : 'nodejs';
    var agent = 'aws-sdk-' + name + '/' + AWS.VERSION;
    if (name === 'nodejs') agent += ' ' + AWS.util.engine();
    return agent;
  },

  isBrowser: function isBrowser() { return typeof window !== 'undefined'; },
  isNode: function isNode() { return !AWS.util.isBrowser(); },

  uriEscape: function uriEscape(string) {

    var output = encodeURIComponent(string);
    output = output.replace(/[^A-Za-z0-9_.~\-%]+/g, escape);

    output = output.replace(/[*]/g, function(ch) {
      return '%' + ch.charCodeAt(0).toString(16).toUpperCase();
    });

    return output;
  },

  uriEscapePath: function uriEscapePath(string) {
    var parts = [];
    AWS.util.arrayEach(string.split('/'), function (part) {
      parts.push(AWS.util.uriEscape(part));
    });
    return parts.join('/');
  },

  urlParse: function urlParse(url) {
    return require('url').parse(url);
  },

  urlFormat: function urlFormat(url) {
    return require('url').format(url);
  },

  queryParamsToString: function queryParamsToString(params) {
    var items = [];
    var escape = AWS.util.uriEscape;
    var sortedKeys = Object.keys(params).sort();

    AWS.util.arrayEach(sortedKeys, function(name) {
      var value = params[name];
      var ename = escape(name);
      var result = ename;
      if (Array.isArray(value)) {
        var vals = [];
        AWS.util.arrayEach(value, function(item) { vals.push(escape(item)); });
        result = ename + '=' + vals.sort().join('&' + ename + '=');
      } else if (value !== undefined && value !== null) {
        result = ename + '=' + escape(value);
      }
      items.push(result);
    });

    return items.join('&');
  },

  readFileSync: function readFileSync(path) {
    if (typeof window !== 'undefined') return null;
    return require('fs').readFileSync(path, 'utf-8');
  },

  base64: {

    encode: function encode64(string) {
      return new Buffer(string).toString('base64');
    },

    decode: function decode64(string) {
      return new Buffer(string, 'base64').toString();
    }

  },

  Buffer: Buffer,

  buffer: {

    concat: function(buffers) {
      var length = 0,
          offset = 0,
          buffer = null, i;

      for (i = 0; i < buffers.length; i++) {
        length += buffers[i].length;
      }

      buffer = new Buffer(length);

      for (i = 0; i < buffers.length; i++) {
        buffers[i].copy(buffer, offset);
        offset += buffers[i].length;
      }

      return buffer;
    }
  },

  string: {
    byteLength: function byteLength(string) {
      if (string === null || string === undefined) return 0;
      if (typeof string === 'string') string = new Buffer(string);

      if (typeof string.byteLength === 'number') {
        return string.byteLength;
      } else if (typeof string.length === 'number') {
        return string.length;
      } else if (typeof string.size === 'number') {
        return string.size;
      } else if (typeof string.path === 'string') {
        return require('fs').lstatSync(string.path).size;
      } else {
        throw AWS.util.error(new Error('Cannot determine length of ' + string),
          { object: string });
      }
    }
  },

  jamespath: {
    query: function query(expression, data) {
      if (!data) return [];

      var results = [];
      var expressions = expression.split(/\s+or\s+/);
      AWS.util.arrayEach.call(this, expressions, function (expr) {
        var objects = [data];
        var tokens = expr.split('.');
        AWS.util.arrayEach.call(this, tokens, function (token) {
          var match = token.match('^(.+?)(?:\\[(-?\\d+|\\*)\\])?$');
          var newObjects = [];
          AWS.util.arrayEach.call(this, objects, function (obj) {
            if (match[1] === '*') {
              AWS.util.arrayEach.call(this, obj, function (value) {
                newObjects.push(value);
              });
            } else if (obj.hasOwnProperty(match[1])) {
              newObjects.push(obj[match[1]]);
            }
          });
          objects = newObjects;

          if (match[2]) {
            newObjects = [];
            AWS.util.arrayEach.call(this, objects, function (obj) {
              if (Array.isArray(obj)) {
                if (match[2] === '*') {
                  newObjects = newObjects.concat(obj);
                } else {
                  var idx = parseInt(match[2], 10);
                  if (idx < 0) idx = obj.length + idx; // negative indexing
                  newObjects.push(obj[idx]);
                }
              }
            });
            objects = newObjects;
          }

          if (objects.length === 0) return AWS.util.abort;
        });

        if (objects.length > 0) {
          results = objects;
          return AWS.util.abort;
        }
      });

      return results;
    },

    find: function find(expression, data) {
      return AWS.util.jamespath.query(expression, data)[0];
    }
  },


  date: {


    getDate: function getDate() { return new Date(); },


    iso8601: function iso8601(date) {
      if (date === undefined) { date = AWS.util.date.getDate(); }
      return date.toISOString();
    },


    rfc822: function rfc822(date) {
      if (date === undefined) { date = AWS.util.date.getDate(); }
      return date.toUTCString();
    },


    unixTimestamp: function unixTimestamp(date) {
      if (date === undefined) { date = AWS.util.date.getDate(); }
      return date.getTime() / 1000;
    },


    from: function format(date) {
      if (typeof date === 'number') {
        return new Date(date * 1000); // unix timestamp
      } else {
        return new Date(date);
      }
    },


    format: function format(date, formatter) {
      if (!formatter) formatter = 'iso8601';
      return AWS.util.date[formatter](AWS.util.date.from(date));
    }

  },

  crypto: {
    crc32Table: [
     0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,
     0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,
     0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,
     0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,
     0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,
     0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,
     0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,
     0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,
     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,
     0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,
     0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,
     0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,
     0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,
     0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,
     0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,
     0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,
     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,
     0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,
     0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,
     0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,
     0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,
     0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,
     0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,
     0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,
     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,
     0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,
     0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,
     0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
     0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,
     0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,
     0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,
     0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,
     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,
     0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,
     0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,
     0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,
     0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,
     0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,
     0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,
     0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,
     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,
     0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,
     0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,
     0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,
     0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,
     0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,
     0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,
     0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,
     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,
     0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,
     0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,
     0x2D02EF8D],

    crc32: function crc32(data) {

      var tbl = AWS.util.crypto.crc32Table;
      var crc = 0 ^ -1;

      if (typeof data === 'string') {
        data = new Buffer(data);
      }

      for (var i = 0; i < data.length; i++) {
        var code = data.readUInt8(i);
        crc = (crc>>>8) ^ tbl[(crc^code)&0xFF];
      }
      return (crc ^ -1) >>> 0;
    },

    hmac: function hmac(key, string, digest, fn) {
      if (!digest) digest = 'binary';
      if (digest === 'buffer') { digest = undefined; }
      if (!fn) fn = 'sha256';
      if (typeof string === 'string') string = new Buffer(string);
      return cryptoLib.createHmac(fn, key).update(string).digest(digest);
    },

    md5: function md5(data, digest) {
      if (!digest) { digest = 'binary'; }
      if (digest === 'buffer') { digest = undefined; }
      if (typeof data === 'string') data = new Buffer(data);
      return AWS.util.crypto.createHash('md5').update(data).digest(digest);
    },

    sha256: function sha256(string, digest) {
      if (!digest) { digest = 'binary'; }
      if (digest === 'buffer') { digest = undefined; }
      if (typeof string === 'string') string = new Buffer(string);
      return AWS.util.crypto.createHash('sha256').update(string).digest(digest);
    },

    toHex: function toHex(data) {
      var out = [];
      for (var i = 0; i < data.length; i++) {
        out.push(('0' + data.charCodeAt(i).toString(16)).substr(-2, 2));
      }
      return out.join('');
    },

    createHash: function createHash(algorithm) {
      return cryptoLib.createHash(algorithm);
    }

  },




  abort: {},

  each: function each(object, iterFunction) {
    for (var key in object) {
      if (object.hasOwnProperty(key)) {
        var ret = iterFunction.call(this, key, object[key]);
        if (ret === AWS.util.abort) break;
      }
    }
  },

  arrayEach: function arrayEach(array, iterFunction) {
    for (var idx in array) {
      if (array.hasOwnProperty(idx)) {
        var ret = iterFunction.call(this, array[idx], parseInt(idx, 10));
        if (ret === AWS.util.abort) break;
      }
    }
  },

  update: function update(obj1, obj2) {
    AWS.util.each(obj2, function iterator(key, item) {
      obj1[key] = item;
    });
    return obj1;
  },

  merge: function merge(obj1, obj2) {
    return AWS.util.update(AWS.util.copy(obj1), obj2);
  },

  copy: function copy(object) {
    if (object === null || object === undefined) return object;
    var dupe = {};

    for (var key in object) {
      dupe[key] = object[key];
    }
    return dupe;
  },

  isEmpty: function isEmpty(obj) {
    for (var prop in obj) {
      if (obj.hasOwnProperty(prop)) {
        return false;
      }
    }
    return true;
  },

  isType: function isType(obj, type) {
    if (typeof type === 'function') type = AWS.util.typeName(type);
    return Object.prototype.toString.call(obj) === '[object ' + type + ']';
  },

  typeName: function typeName(type) {
    if (type.hasOwnProperty('name')) return type.name;
    var str = type.toString();
    var match = str.match(/^\s*function (.+)\(/);
    return match ? match[1] : str;
  },

  error: function error(err, options) {
    var originalError = null;
    if (typeof err.message === 'string' && err.message !== '') {
      if (typeof options === 'string' || (options && options.message)) {
        originalError = AWS.util.copy(err);
        originalError.message = err.message;
      }
    }
    err.message = err.message || null;

    if (typeof options === 'string') {
      err.message = options;
    } else {
      AWS.util.update(err, options);
    }

    if (typeof Object.defineProperty === 'function') {
      Object.defineProperty(err, 'name', {writable: true, enumerable: false});
      Object.defineProperty(err, 'message', {enumerable: true});
    }

    err.name = err.name || err.code || 'Error';
    err.time = new Date();

    if (originalError) err.originalError = originalError;

    return err;
  },


  inherit: function inherit(klass, features) {
    var newObject = null;
    if (features === undefined) {
      features = klass;
      klass = Object;
      newObject = {};
    } else {


      var ctor = function __ctor_wrapper__() {};
      ctor.prototype = klass.prototype;
      newObject = new ctor();
    }

    if (features.constructor === Object) {
      features.constructor = function() {
        if (klass !== Object) {
          return klass.apply(this, arguments);
        }
      };
    }

    features.constructor.prototype = newObject;
    AWS.util.update(features.constructor.prototype, features);
    features.constructor.__super__ = klass;
    return features.constructor;
  },


  mixin: function mixin() {
    var klass = arguments[0];
    for (var i = 1; i < arguments.length; i++) {

      for (var prop in arguments[i].prototype) {
        var fn = arguments[i].prototype[prop];
        if (prop != 'constructor') {
          klass.prototype[prop] = fn;
        }
      }
    }
    return klass;
  },


  hideProperties: function hideProperties(obj, props) {
    if (typeof Object.defineProperty !== 'function') return;

    AWS.util.arrayEach(props, function (key) {
      Object.defineProperty(obj, key, {
        enumerable: false, writable: true, configurable: true });
    });
  }
};

module.exports = AWS.util;
}).call(this,require("C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js"))
},{"./core":32,"C:\\Users\\rufei_000\\Documents\\GitHub\\aws-sdk-js\\dist-tools\\node_modules\\browserify\\node_modules\\insert-module-globals\\node_modules\\process\\browser.js":10,"buffer":11,"crypto":3,"fs":1,"url":26}],92:[function(require,module,exports){
var AWS = require('../core');
var builder = require('xmlbuilder');
var inherit = AWS.util.inherit;


AWS.XML.Builder = inherit({

  constructor: function XMLBuilder(root, rules, options) {
    this.root = root;
    this.rules = rules;
    this.xmlns = options.xmlnamespace;
    this.timestampFormat = options.timestampFormat;
  },

  toXML: function toXML(params) {
    var xml = builder.create(this.root);
    if (this.xmlns) xml.att('xmlns', this.xmlns);
    this.serializeStructure(this.rules, params, xml);
    return xml.root().toString();
  },

  serializeStructure: function serializeStructure(rules, params, xml) {

    AWS.util.each.call(this, rules || {}, function (memberName, memberRules) {
      var value = params[memberName];
      if (value !== undefined) {
        if (memberRules.attribute) {
          xml.att(memberRules.name, value);
        } else {
          this.serializeMember(memberName, memberRules, value, xml);
        }
      }
    });
  },

  serializeList: function serializeList(name, rules, list, xml) {
    if (rules.flattened) {
      AWS.util.arrayEach.call(this, list, function (value) {
        this.serializeMember(rules.name || name, rules.members, value, xml);
      });
    } else {
      xml = xml.ele(rules.name || name);
      AWS.util.arrayEach.call(this, list, function (value) {
        var memberName = rules.members.name || 'member';
        this.serializeMember(memberName, rules.members, value, xml);
      });
    }
  },

  serializeMember: function serializeMember(memberName, rules, params, xml) {
    var name = memberName;
    if (rules.type === 'structure') {
      xml = xml.ele(name);
      this.serializeStructure(rules.members, params, xml);
    } else if (rules.type === 'list') {
      this.serializeList(name, rules, params, xml);
    } else if (rules.type === 'timestamp') {
      var timestampFormat = rules.format || this.timestampFormat;
      var date = AWS.util.date.format(params, timestampFormat);
      xml = xml.ele(name, String(date));
    } else {
      xml = xml.ele(name, String(params));
    }
    this.applyNamespaces(xml, rules);
  },

  applyNamespaces: function applyNamespaces(xml, rules) {
    if (rules.xmlns) {
      var attr = 'xmlns';
      if (rules.xmlns.prefix) attr += ':' + rules.xmlns.prefix;
      xml.att(attr, rules.xmlns.uri);
    }
  }


});

},{"../core":32,"xmlbuilder":98}],93:[function(require,module,exports){
var AWS = require('../core');
var inherit = AWS.util.inherit;
var xml2js = require('xml2js');


AWS.XML.Parser = inherit({

  constructor: function XMLParser(rules) {
    this.rules = (rules || {}).members || {};
  },

  options: {
    explicitCharkey: false, // undocumented
    trim: false,            // trim the leading/trailing whitespace from text nodes
    normalize: false,       // trim interior whitespace inside text nodes
    explicitRoot: false,    // return the root node in the resulting object?
    emptyTag: null,         // the default value for empty nodes
    explicitArray: true,    // always put child nodes in an array
    ignoreAttrs: false,     // ignore attributes, only create text nodes
    mergeAttrs: false,      // merge attributes and child elements
    validator: null         // a callable validator
  },

  parse: function parse(xml) {

    var result = null;
    var error = null;
    var parser = new xml2js.Parser(this.options);
    parser.parseString(xml, function (e, r) {
      error = e;
      result = r;
    });

    if (result) {
      delete result.xmlns;
      return this.parseStructure(result, this.rules);
    } else if (error) {
      throw AWS.util.error(error, {code: 'XMLParserError'});
    } else { // empty xml document
      return this.parseStructure({}, this.rules);
    }

  },

  parseStructure: function parseStructure(structure, rules) {
    var data = {};

    AWS.util.each.call(this, rules, function(memberName, memberRules) {
      if (memberRules.type == 'list') {
        data[memberRules.name || memberName] = [];
      }
    });

    AWS.util.each.call(this, structure, function (xmlName, value) {
      if (xmlName == '$') {
        AWS.util.each.call(this, value, function (attrName, attrValue) {
          if (rules[attrName]) {
            var rule = rules[attrName];
            data[rule.name || xmlName] = this.parseMember([attrValue], rule);
          }
        });
      } else {
        var rule = rules[xmlName] || {};
        data[rule.name || xmlName] = this.parseMember(value, rule);
      }
    });

    return data;
  },

  parseMap: function parseMap(map, rules) {
    var data = {};
    var keyRules = rules.keys || {};
    var valueRules = rules.members || {};
    var keyName = keyRules.name || 'key';
    var valueName = valueRules.name || 'value';
    if (!rules.flattened) {
      map = map[0].entry;
    }
    AWS.util.arrayEach.call(this, map, function (entry) {
      var value = this.parseMember(entry[valueName], valueRules);
      data[entry[keyName][0]] = value;
    });
    return data;
  },

  parseList: function parseList(list, rules) {
    var data = [];
    var memberRules = rules.members || {};
    var memberName = memberRules.name || 'member';
    if (rules.flattened) {
      AWS.util.arrayEach.call(this, list, function (value) {
        data.push(this.parseMember([value], memberRules));
      });
    } else {
      AWS.util.arrayEach.call(this, list, function (member) {
        AWS.util.arrayEach.call(this, member[memberName], function (value) {
          data.push(this.parseMember([value], memberRules));
        });
      });
    }
    return data;
  },

  parseMember: function parseMember(values, rules) {


    if (values[0] === null) {
      if (rules.type === 'structure') return {};
      if (rules.type === 'list') return [];
      if (rules.type === 'map') return {};
      return null;
    }

    if (values[0]['$'] && values[0]['$'].encoding == 'base64') {
      return AWS.util.base64.decode(values[0]['_']);
    }

    if (!rules.type) {
      if (typeof values[0] === 'string') {
        rules.type = 'string';
      } else if (values[0]['_']) {
        rules.type = 'string';
        values = [values[0]['_']];
      } else {
        rules.type = 'structure';
      }
    }

    if (rules.type === 'string') {

      return values[0];

    } else if (rules.type === 'structure') {

      return this.parseStructure(values[0], rules.members || {});

    } else if (rules.type === 'list') {

      return this.parseList(values, rules);

    } else if (rules.type === 'map') {

      return this.parseMap(values, rules);

    } else if (rules.type === 'integer') {

      return parseInt(values[0], 10);

    } else if (rules.type === 'float') {

      return parseFloat(values[0]);

    } else if (rules.type === 'timestamp') {

      return this.parseTimestamp(values[0]);

    } else if (rules.type === 'boolean') {

      return values[0] === 'true';

    } else {

      var msg = 'unhandled type: ' + rules.type;
      throw AWS.util.error(new Error(msg), {code: 'XMLParserError'});

    }

  },

  parseTimestamp: function parseTimestamp(value) {

    if (value.match(/^\d+$/)) { // unix timestamp

      return new Date(value * 1000);

    } else if (value.match(/^\d{4}/)) { // iso8601

      return new Date(value);

    } else if (value.match(/^\w{3},/)) { // rfc822

      return new Date(value);

    } else {

      throw AWS.util.error(
        new Error('unhandled timestamp format: ' + value),
        {code: 'TimestampParserError'});

    }

  }

});

},{"../core":32,"xml2js":94}],94:[function(require,module,exports){
(function() {
  var events, isEmpty, sax,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  sax = require('sax');

  events = require('events');

  isEmpty = function(thing) {
    return typeof thing === "object" && (thing != null) && Object.keys(thing).length === 0;
  };

  exports.defaults = {
    "0.1": {
      explicitCharkey: false,
      trim: true,
      normalize: true,
      normalizeTags: false,
      attrkey: "@",
      charkey: "#",
      explicitArray: false,
      ignoreAttrs: false,
      mergeAttrs: false,
      explicitRoot: false,
      validator: null,
      xmlns: false
    },
    "0.2": {
      explicitCharkey: false,
      trim: false,
      normalize: false,
      normalizeTags: false,
      attrkey: "$",
      charkey: "_",
      explicitArray: true,
      ignoreAttrs: false,
      mergeAttrs: false,
      explicitRoot: true,
      validator: null,
      xmlns: false
    }
  };

  exports.ValidationError = (function(_super) {

    __extends(ValidationError, _super);

    function ValidationError(message) {
      this.message = message;
    }

    return ValidationError;

  })(Error);

  exports.Parser = (function(_super) {

    __extends(Parser, _super);

    function Parser(opts) {
      this.parseString = __bind(this.parseString, this);

      this.reset = __bind(this.reset, this);

      var key, value, _ref;
      this.options = {};
      _ref = exports.defaults["0.2"];
      for (key in _ref) {
        if (!__hasProp.call(_ref, key)) continue;
        value = _ref[key];
        this.options[key] = value;
      }
      for (key in opts) {
        if (!__hasProp.call(opts, key)) continue;
        value = opts[key];
        this.options[key] = value;
      }
      if (this.options.xmlns) {
        this.options.xmlnskey = this.options.attrkey + "ns";
      }
      this.reset();
    }

    Parser.prototype.reset = function() {
      var attrkey, charkey, err, stack,
        _this = this;
      this.removeAllListeners();
      this.saxParser = sax.parser(true, {
        trim: false,
        normalize: false,
        xmlns: this.options.xmlns
      });
      err = false;
      this.saxParser.onerror = function(error) {
        if (!err) {
          err = true;
          return _this.emit("error", error);
        }
      };
      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;
      this.resultObject = null;
      stack = [];
      attrkey = this.options.attrkey;
      charkey = this.options.charkey;
      this.saxParser.onopentag = function(node) {
        var key, obj, _ref;
        obj = {};
        obj[charkey] = "";
        if (!_this.options.ignoreAttrs) {
          _ref = node.attributes;
          for (key in _ref) {
            if (!__hasProp.call(_ref, key)) continue;
            if (!(attrkey in obj) && !_this.options.mergeAttrs) {
              obj[attrkey] = {};
            }
            if (_this.options.mergeAttrs) {
              obj[key] = node.attributes[key];
            } else {
              obj[attrkey][key] = node.attributes[key];
            }
          }
        }
        obj["#name"] = _this.options.normalizeTags ? node.name.toLowerCase() : node.name;
        if (_this.options.xmlns) {
          obj[_this.options.xmlnskey] = {
            uri: node.uri,
            local: node.local
          };
        }
        return stack.push(obj);
      };
      this.saxParser.onclosetag = function() {
        var node, nodeName, obj, old, s, xpath;
        obj = stack.pop();
        nodeName = obj["#name"];
        delete obj["#name"];
        s = stack[stack.length - 1];
        if (obj[charkey].match(/^\s*$/)) {
          delete obj[charkey];
        } else {
          if (_this.options.trim) {
            obj[charkey] = obj[charkey].trim();
          }
          if (_this.options.normalize) {
            obj[charkey] = obj[charkey].replace(/\s{2,}/g, " ").trim();
          }
          if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {
            obj = obj[charkey];
          }
        }
        if (_this.options.emptyTag !== void 0 && isEmpty(obj)) {
          obj = _this.options.emptyTag;
        }
        if (_this.options.validator != null) {
          xpath = "/" + ((function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = stack.length; _i < _len; _i++) {
              node = stack[_i];
              _results.push(node["#name"]);
            }
            return _results;
          })()).concat(nodeName).join("/");
          obj = _this.options.validator(xpath, s && s[nodeName], obj);
        }
        if (stack.length > 0) {
          if (!_this.options.explicitArray) {
            if (!(nodeName in s)) {
              return s[nodeName] = obj;
            } else if (s[nodeName] instanceof Array) {
              return s[nodeName].push(obj);
            } else {
              old = s[nodeName];
              s[nodeName] = [old];
              return s[nodeName].push(obj);
            }
          } else {
            if (!(s[nodeName] instanceof Array)) {
              s[nodeName] = [];
            }
            return s[nodeName].push(obj);
          }
        } else {
          if (_this.options.explicitRoot) {
            old = obj;
            obj = {};
            obj[nodeName] = old;
          }
          _this.resultObject = obj;
          return _this.emit("end", _this.resultObject);
        }
      };
      return this.saxParser.ontext = this.saxParser.oncdata = function(text) {
        var s;
        s = stack[stack.length - 1];
        if (s) {
          return s[charkey] += text;
        }
      };
    };

    Parser.prototype.parseString = function(str, cb) {
      if ((cb != null) && typeof cb === "function") {
        this.on("end", function(result) {
          this.reset();
          return cb(null, result);
        });
        this.on("error", function(err) {
          this.reset();
          return cb(err);
        });
      }
      if (str.toString().trim() === '') {
        this.emit("end", null);
        return true;
      }
      try {
        return this.saxParser.write(str.toString());
      } catch (ex) {
        return this.emit("error", ex.message);
      }
    };

    return Parser;

  })(events.EventEmitter);

  exports.parseString = function(str, a, b) {
    var cb, options, parser;
    if (b != null) {
      if (typeof b === 'function') {
        cb = b;
      }
      if (typeof a === 'object') {
        options = a;
      }
    } else {
      if (typeof a === 'function') {
        cb = a;
      }
      options = {};
    }
    parser = new exports.Parser(options);
    return parser.parseString(str, cb);
  };

}).call(this);

},{"events":8,"sax":95}],95:[function(require,module,exports){
(function (Buffer){// wrapper for non-node envs
;(function (sax) {

sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }
sax.SAXParser = SAXParser
sax.SAXStream = SAXStream
sax.createStream = createStream

sax.MAX_BUFFER_LENGTH = 64 * 1024

var buffers = [
  "comment", "sgmlDecl", "textNode", "tagName", "doctype",
  "procInstName", "procInstBody", "entity", "attribName",
  "attribValue", "cdata", "script"
]

sax.EVENTS = // for discoverability.
  [ "text"
  , "processinginstruction"
  , "sgmldeclaration"
  , "doctype"
  , "comment"
  , "attribute"
  , "opentag"
  , "closetag"
  , "opencdata"
  , "cdata"
  , "closecdata"
  , "error"
  , "end"
  , "ready"
  , "script"
  , "opennamespace"
  , "closenamespace"
  ]

function SAXParser (strict, opt) {
  if (!(this instanceof SAXParser)) return new SAXParser(strict, opt)

  var parser = this
  clearBuffers(parser)
  parser.q = parser.c = ""
  parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH
  parser.opt = opt || {}
  parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags
  parser.looseCase = parser.opt.lowercase ? "toLowerCase" : "toUpperCase"
  parser.tags = []
  parser.closed = parser.closedRoot = parser.sawRoot = false
  parser.tag = parser.error = null
  parser.strict = !!strict
  parser.noscript = !!(strict || parser.opt.noscript)
  parser.state = S.BEGIN
  parser.ENTITIES = Object.create(sax.ENTITIES)
  parser.attribList = []

  if (parser.opt.xmlns) parser.ns = Object.create(rootNS)

  parser.trackPosition = parser.opt.position !== false
  if (parser.trackPosition) {
    parser.position = parser.line = parser.column = 0
  }
  emit(parser, "onready")
}

if (!Object.create) Object.create = function (o) {
  function f () { this.__proto__ = o }
  f.prototype = o
  return new f
}

if (!Object.getPrototypeOf) Object.getPrototypeOf = function (o) {
  return o.__proto__
}

if (!Object.keys) Object.keys = function (o) {
  var a = []
  for (var i in o) if (o.hasOwnProperty(i)) a.push(i)
  return a
}

function checkBufferLength (parser) {
  var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)
    , maxActual = 0
  for (var i = 0, l = buffers.length; i < l; i ++) {
    var len = parser[buffers[i]].length
    if (len > maxAllowed) {
      switch (buffers[i]) {
        case "textNode":
          closeText(parser)
        break

        case "cdata":
          emitNode(parser, "oncdata", parser.cdata)
          parser.cdata = ""
        break

        case "script":
          emitNode(parser, "onscript", parser.script)
          parser.script = ""
        break

        default:
          error(parser, "Max buffer length exceeded: "+buffers[i])
      }
    }
    maxActual = Math.max(maxActual, len)
  }
  parser.bufferCheckPosition = (sax.MAX_BUFFER_LENGTH - maxActual)
                             + parser.position
}

function clearBuffers (parser) {
  for (var i = 0, l = buffers.length; i < l; i ++) {
    parser[buffers[i]] = ""
  }
}

function flushBuffers (parser) {
  closeText(parser)
  if (parser.cdata !== "") {
    emitNode(parser, "oncdata", parser.cdata)
    parser.cdata = ""
  }
  if (parser.script !== "") {
    emitNode(parser, "onscript", parser.script)
    parser.script = ""
  }
}

SAXParser.prototype =
  { end: function () { end(this) }
  , write: write
  , resume: function () { this.error = null; return this }
  , close: function () { return this.write(null) }
  , flush: function () { flushBuffers(this) }
  }

try {
  var Stream = require("stream").Stream
} catch (ex) {
  var Stream = function () {}
}


var streamWraps = sax.EVENTS.filter(function (ev) {
  return ev !== "error" && ev !== "end"
})

function createStream (strict, opt) {
  return new SAXStream(strict, opt)
}

function SAXStream (strict, opt) {
  if (!(this instanceof SAXStream)) return new SAXStream(strict, opt)

  Stream.apply(this)

  this._parser = new SAXParser(strict, opt)
  this.writable = true
  this.readable = true


  var me = this

  this._parser.onend = function () {
    me.emit("end")
  }

  this._parser.onerror = function (er) {
    me.emit("error", er)

    me._parser.error = null
  }

  this._decoder = null;

  streamWraps.forEach(function (ev) {
    Object.defineProperty(me, "on" + ev, {
      get: function () { return me._parser["on" + ev] },
      set: function (h) {
        if (!h) {
          me.removeAllListeners(ev)
          return me._parser["on"+ev] = h
        }
        me.on(ev, h)
      },
      enumerable: true,
      configurable: false
    })
  })
}

SAXStream.prototype = Object.create(Stream.prototype,
  { constructor: { value: SAXStream } })

SAXStream.prototype.write = function (data) {
  if (typeof Buffer === 'function' &&
      typeof Buffer.isBuffer === 'function' &&
      Buffer.isBuffer(data)) {
    if (!this._decoder) {
      var SD = require('string_decoder').StringDecoder
      this._decoder = new SD('utf8')
    }
    data = this._decoder.write(data);
  }

  this._parser.write(data.toString())
  this.emit("data", data)
  return true
}

SAXStream.prototype.end = function (chunk) {
  if (chunk && chunk.length) this.write(chunk)
  this._parser.end()
  return true
}

SAXStream.prototype.on = function (ev, handler) {
  var me = this
  if (!me._parser["on"+ev] && streamWraps.indexOf(ev) !== -1) {
    me._parser["on"+ev] = function () {
      var args = arguments.length === 1 ? [arguments[0]]
               : Array.apply(null, arguments)
      args.splice(0, 0, ev)
      me.emit.apply(me, args)
    }
  }

  return Stream.prototype.on.call(me, ev, handler)
}



var whitespace = "\r\n\t "
  , number = "0124356789"
  , letter = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  , quote = "'\""
  , entity = number+letter+"#"
  , attribEnd = whitespace + ">"
  , CDATA = "[CDATA["
  , DOCTYPE = "DOCTYPE"
  , XML_NAMESPACE = "http://www.w3.org/XML/1998/namespace"
  , XMLNS_NAMESPACE = "http://www.w3.org/2000/xmlns/"
  , rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }

whitespace = charClass(whitespace)
number = charClass(number)
letter = charClass(letter)

var nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/

var nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/

quote = charClass(quote)
entity = charClass(entity)
attribEnd = charClass(attribEnd)

function charClass (str) {
  return str.split("").reduce(function (s, c) {
    s[c] = true
    return s
  }, {})
}

function isRegExp (c) {
  return Object.prototype.toString.call(c) === '[object RegExp]'
}

function is (charclass, c) {
  return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]
}

function not (charclass, c) {
  return !is(charclass, c)
}

var S = 0
sax.STATE =
{ BEGIN                     : S++
, TEXT                      : S++ // general stuff
, TEXT_ENTITY               : S++ // &amp and such.
, OPEN_WAKA                 : S++ // <
, SGML_DECL                 : S++ // <!BLARG
, SGML_DECL_QUOTED          : S++ // <!BLARG foo "bar
, DOCTYPE                   : S++ // <!DOCTYPE
, DOCTYPE_QUOTED            : S++ // <!DOCTYPE "//blah
, DOCTYPE_DTD               : S++ // <!DOCTYPE "//blah" [ ...
, DOCTYPE_DTD_QUOTED        : S++ // <!DOCTYPE "//blah" [ "foo
, COMMENT_STARTING          : S++ // <!-
, COMMENT                   : S++ // <!--
, COMMENT_ENDING            : S++ // <!-- blah -
, COMMENT_ENDED             : S++ // <!-- blah --
, CDATA                     : S++ // <![CDATA[ something
, CDATA_ENDING              : S++ // ]
, CDATA_ENDING_2            : S++ // ]]
, PROC_INST                 : S++ // <?hi
, PROC_INST_BODY            : S++ // <?hi there
, PROC_INST_ENDING          : S++ // <?hi "there" ?
, OPEN_TAG                  : S++ // <strong
, OPEN_TAG_SLASH            : S++ // <strong /
, ATTRIB                    : S++ // <a
, ATTRIB_NAME               : S++ // <a foo
, ATTRIB_NAME_SAW_WHITE     : S++ // <a foo _
, ATTRIB_VALUE              : S++ // <a foo=
, ATTRIB_VALUE_QUOTED       : S++ // <a foo="bar
, ATTRIB_VALUE_CLOSED       : S++ // <a foo="bar"
, ATTRIB_VALUE_UNQUOTED     : S++ // <a foo=bar
, ATTRIB_VALUE_ENTITY_Q     : S++ // <foo bar="&quot;"
, ATTRIB_VALUE_ENTITY_U     : S++ // <foo bar=&quot;
, CLOSE_TAG                 : S++ // </a
, CLOSE_TAG_SAW_WHITE       : S++ // </a   >
, SCRIPT                    : S++ // <script> ...
, SCRIPT_ENDING             : S++ // <script> ... <
}

sax.ENTITIES =
{ "amp" : "&"
, "gt" : ">"
, "lt" : "<"
, "quot" : "\""
, "apos" : "'"
, "AElig" : 198
, "Aacute" : 193
, "Acirc" : 194
, "Agrave" : 192
, "Aring" : 197
, "Atilde" : 195
, "Auml" : 196
, "Ccedil" : 199
, "ETH" : 208
, "Eacute" : 201
, "Ecirc" : 202
, "Egrave" : 200
, "Euml" : 203
, "Iacute" : 205
, "Icirc" : 206
, "Igrave" : 204
, "Iuml" : 207
, "Ntilde" : 209
, "Oacute" : 211
, "Ocirc" : 212
, "Ograve" : 210
, "Oslash" : 216
, "Otilde" : 213
, "Ouml" : 214
, "THORN" : 222
, "Uacute" : 218
, "Ucirc" : 219
, "Ugrave" : 217
, "Uuml" : 220
, "Yacute" : 221
, "aacute" : 225
, "acirc" : 226
, "aelig" : 230
, "agrave" : 224
, "aring" : 229
, "atilde" : 227
, "auml" : 228
, "ccedil" : 231
, "eacute" : 233
, "ecirc" : 234
, "egrave" : 232
, "eth" : 240
, "euml" : 235
, "iacute" : 237
, "icirc" : 238
, "igrave" : 236
, "iuml" : 239
, "ntilde" : 241
, "oacute" : 243
, "ocirc" : 244
, "ograve" : 242
, "oslash" : 248
, "otilde" : 245
, "ouml" : 246
, "szlig" : 223
, "thorn" : 254
, "uacute" : 250
, "ucirc" : 251
, "ugrave" : 249
, "uuml" : 252
, "yacute" : 253
, "yuml" : 255
, "copy" : 169
, "reg" : 174
, "nbsp" : 160
, "iexcl" : 161
, "cent" : 162
, "pound" : 163
, "curren" : 164
, "yen" : 165
, "brvbar" : 166
, "sect" : 167
, "uml" : 168
, "ordf" : 170
, "laquo" : 171
, "not" : 172
, "shy" : 173
, "macr" : 175
, "deg" : 176
, "plusmn" : 177
, "sup1" : 185
, "sup2" : 178
, "sup3" : 179
, "acute" : 180
, "micro" : 181
, "para" : 182
, "middot" : 183
, "cedil" : 184
, "ordm" : 186
, "raquo" : 187
, "frac14" : 188
, "frac12" : 189
, "frac34" : 190
, "iquest" : 191
, "times" : 215
, "divide" : 247
, "OElig" : 338
, "oelig" : 339
, "Scaron" : 352
, "scaron" : 353
, "Yuml" : 376
, "fnof" : 402
, "circ" : 710
, "tilde" : 732
, "Alpha" : 913
, "Beta" : 914
, "Gamma" : 915
, "Delta" : 916
, "Epsilon" : 917
, "Zeta" : 918
, "Eta" : 919
, "Theta" : 920
, "Iota" : 921
, "Kappa" : 922
, "Lambda" : 923
, "Mu" : 924
, "Nu" : 925
, "Xi" : 926
, "Omicron" : 927
, "Pi" : 928
, "Rho" : 929
, "Sigma" : 931
, "Tau" : 932
, "Upsilon" : 933
, "Phi" : 934
, "Chi" : 935
, "Psi" : 936
, "Omega" : 937
, "alpha" : 945
, "beta" : 946
, "gamma" : 947
, "delta" : 948
, "epsilon" : 949
, "zeta" : 950
, "eta" : 951
, "theta" : 952
, "iota" : 953
, "kappa" : 954
, "lambda" : 955
, "mu" : 956
, "nu" : 957
, "xi" : 958
, "omicron" : 959
, "pi" : 960
, "rho" : 961
, "sigmaf" : 962
, "sigma" : 963
, "tau" : 964
, "upsilon" : 965
, "phi" : 966
, "chi" : 967
, "psi" : 968
, "omega" : 969
, "thetasym" : 977
, "upsih" : 978
, "piv" : 982
, "ensp" : 8194
, "emsp" : 8195
, "thinsp" : 8201
, "zwnj" : 8204
, "zwj" : 8205
, "lrm" : 8206
, "rlm" : 8207
, "ndash" : 8211
, "mdash" : 8212
, "lsquo" : 8216
, "rsquo" : 8217
, "sbquo" : 8218
, "ldquo" : 8220
, "rdquo" : 8221
, "bdquo" : 8222
, "dagger" : 8224
, "Dagger" : 8225
, "bull" : 8226
, "hellip" : 8230
, "permil" : 8240
, "prime" : 8242
, "Prime" : 8243
, "lsaquo" : 8249
, "rsaquo" : 8250
, "oline" : 8254
, "frasl" : 8260
, "euro" : 8364
, "image" : 8465
, "weierp" : 8472
, "real" : 8476
, "trade" : 8482
, "alefsym" : 8501
, "larr" : 8592
, "uarr" : 8593
, "rarr" : 8594
, "darr" : 8595
, "harr" : 8596
, "crarr" : 8629
, "lArr" : 8656
, "uArr" : 8657
, "rArr" : 8658
, "dArr" : 8659
, "hArr" : 8660
, "forall" : 8704
, "part" : 8706
, "exist" : 8707
, "empty" : 8709
, "nabla" : 8711
, "isin" : 8712
, "notin" : 8713
, "ni" : 8715
, "prod" : 8719
, "sum" : 8721
, "minus" : 8722
, "lowast" : 8727
, "radic" : 8730
, "prop" : 8733
, "infin" : 8734
, "ang" : 8736
, "and" : 8743
, "or" : 8744
, "cap" : 8745
, "cup" : 8746
, "int" : 8747
, "there4" : 8756
, "sim" : 8764
, "cong" : 8773
, "asymp" : 8776
, "ne" : 8800
, "equiv" : 8801
, "le" : 8804
, "ge" : 8805
, "sub" : 8834
, "sup" : 8835
, "nsub" : 8836
, "sube" : 8838
, "supe" : 8839
, "oplus" : 8853
, "otimes" : 8855
, "perp" : 8869
, "sdot" : 8901
, "lceil" : 8968
, "rceil" : 8969
, "lfloor" : 8970
, "rfloor" : 8971
, "lang" : 9001
, "rang" : 9002
, "loz" : 9674
, "spades" : 9824
, "clubs" : 9827
, "hearts" : 9829
, "diams" : 9830
}

Object.keys(sax.ENTITIES).forEach(function (key) {
    var e = sax.ENTITIES[key]
    var s = typeof e === 'number' ? String.fromCharCode(e) : e
    sax.ENTITIES[key] = s
})

for (var S in sax.STATE) sax.STATE[sax.STATE[S]] = S

S = sax.STATE

function emit (parser, event, data) {
  parser[event] && parser[event](data)
}

function emitNode (parser, nodeType, data) {
  if (parser.textNode) closeText(parser)
  emit(parser, nodeType, data)
}

function closeText (parser) {
  parser.textNode = textopts(parser.opt, parser.textNode)
  if (parser.textNode) emit(parser, "ontext", parser.textNode)
  parser.textNode = ""
}

function textopts (opt, text) {
  if (opt.trim) text = text.trim()
  if (opt.normalize) text = text.replace(/\s+/g, " ")
  return text
}

function error (parser, er) {
  closeText(parser)
  if (parser.trackPosition) {
    er += "\nLine: "+parser.line+
          "\nColumn: "+parser.column+
          "\nChar: "+parser.c
  }
  er = new Error(er)
  parser.error = er
  emit(parser, "onerror", er)
  return parser
}

function end (parser) {
  if (!parser.closedRoot) strictFail(parser, "Unclosed root tag")
  if ((parser.state !== S.BEGIN) && (parser.state !== S.TEXT)) error(parser, "Unexpected end")
  closeText(parser)
  parser.c = ""
  parser.closed = true
  emit(parser, "onend")
  SAXParser.call(parser, parser.strict, parser.opt)
  return parser
}

function strictFail (parser, message) {
  if (typeof parser !== 'object' || !(parser instanceof SAXParser))
    throw new Error('bad call to strictFail');
  if (parser.strict) error(parser, message)
}

function newTag (parser) {
  if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()
  var parent = parser.tags[parser.tags.length - 1] || parser
    , tag = parser.tag = { name : parser.tagName, attributes : {} }

  if (parser.opt.xmlns) tag.ns = parent.ns
  parser.attribList.length = 0
}

function qname (name, attribute) {
  var i = name.indexOf(":")
    , qualName = i < 0 ? [ "", name ] : name.split(":")
    , prefix = qualName[0]
    , local = qualName[1]

  if (attribute && name === "xmlns") {
    prefix = "xmlns"
    local = ""
  }

  return { prefix: prefix, local: local }
}

function attrib (parser) {
  if (!parser.strict) parser.attribName = parser.attribName[parser.looseCase]()

  if (parser.attribList.indexOf(parser.attribName) !== -1 ||
      parser.tag.attributes.hasOwnProperty(parser.attribName)) {
    return parser.attribName = parser.attribValue = ""
  }

  if (parser.opt.xmlns) {
    var qn = qname(parser.attribName, true)
      , prefix = qn.prefix
      , local = qn.local

    if (prefix === "xmlns") {
      if (local === "xml" && parser.attribValue !== XML_NAMESPACE) {
        strictFail( parser
                  , "xml: prefix must be bound to " + XML_NAMESPACE + "\n"
                  + "Actual: " + parser.attribValue )
      } else if (local === "xmlns" && parser.attribValue !== XMLNS_NAMESPACE) {
        strictFail( parser
                  , "xmlns: prefix must be bound to " + XMLNS_NAMESPACE + "\n"
                  + "Actual: " + parser.attribValue )
      } else {
        var tag = parser.tag
          , parent = parser.tags[parser.tags.length - 1] || parser
        if (tag.ns === parent.ns) {
          tag.ns = Object.create(parent.ns)
        }
        tag.ns[local] = parser.attribValue
      }
    }

    parser.attribList.push([parser.attribName, parser.attribValue])
  } else {
    parser.tag.attributes[parser.attribName] = parser.attribValue
    emitNode( parser
            , "onattribute"
            , { name: parser.attribName
              , value: parser.attribValue } )
  }

  parser.attribName = parser.attribValue = ""
}

function openTag (parser, selfClosing) {
  if (parser.opt.xmlns) {
    var tag = parser.tag

    var qn = qname(parser.tagName)
    tag.prefix = qn.prefix
    tag.local = qn.local
    tag.uri = tag.ns[qn.prefix] || ""

    if (tag.prefix && !tag.uri) {
      strictFail(parser, "Unbound namespace prefix: "
                       + JSON.stringify(parser.tagName))
      tag.uri = qn.prefix
    }

    var parent = parser.tags[parser.tags.length - 1] || parser
    if (tag.ns && parent.ns !== tag.ns) {
      Object.keys(tag.ns).forEach(function (p) {
        emitNode( parser
                , "onopennamespace"
                , { prefix: p , uri: tag.ns[p] } )
      })
    }

    for (var i = 0, l = parser.attribList.length; i < l; i ++) {
      var nv = parser.attribList[i]
      var name = nv[0]
        , value = nv[1]
        , qualName = qname(name, true)
        , prefix = qualName.prefix
        , local = qualName.local
        , uri = prefix == "" ? "" : (tag.ns[prefix] || "")
        , a = { name: name
              , value: value
              , prefix: prefix
              , local: local
              , uri: uri
              }

      if (prefix && prefix != "xmlns" && !uri) {
        strictFail(parser, "Unbound namespace prefix: "
                         + JSON.stringify(prefix))
        a.uri = prefix
      }
      parser.tag.attributes[name] = a
      emitNode(parser, "onattribute", a)
    }
    parser.attribList.length = 0
  }

  parser.tag.isSelfClosing = !!selfClosing

  parser.sawRoot = true
  parser.tags.push(parser.tag)
  emitNode(parser, "onopentag", parser.tag)
  if (!selfClosing) {
    if (!parser.noscript && parser.tagName.toLowerCase() === "script") {
      parser.state = S.SCRIPT
    } else {
      parser.state = S.TEXT
    }
    parser.tag = null
    parser.tagName = ""
  }
  parser.attribName = parser.attribValue = ""
  parser.attribList.length = 0
}

function closeTag (parser) {
  if (!parser.tagName) {
    strictFail(parser, "Weird empty close tag.")
    parser.textNode += "</>"
    parser.state = S.TEXT
    return
  }

  if (parser.script) {
    if (parser.tagName !== "script") {
      parser.script += "</" + parser.tagName + ">"
      parser.tagName = ""
      parser.state = S.SCRIPT
      return
    }
    emitNode(parser, "onscript", parser.script)
    parser.script = ""
  }

  var t = parser.tags.length
  var tagName = parser.tagName
  if (!parser.strict) tagName = tagName[parser.looseCase]()
  var closeTo = tagName
  while (t --) {
    var close = parser.tags[t]
    if (close.name !== closeTo) {
      strictFail(parser, "Unexpected close tag")
    } else break
  }

  if (t < 0) {
    strictFail(parser, "Unmatched closing tag: "+parser.tagName)
    parser.textNode += "</" + parser.tagName + ">"
    parser.state = S.TEXT
    return
  }
  parser.tagName = tagName
  var s = parser.tags.length
  while (s --> t) {
    var tag = parser.tag = parser.tags.pop()
    parser.tagName = parser.tag.name
    emitNode(parser, "onclosetag", parser.tagName)

    var x = {}
    for (var i in tag.ns) x[i] = tag.ns[i]

    var parent = parser.tags[parser.tags.length - 1] || parser
    if (parser.opt.xmlns && tag.ns !== parent.ns) {
      Object.keys(tag.ns).forEach(function (p) {
        var n = tag.ns[p]
        emitNode(parser, "onclosenamespace", { prefix: p, uri: n })
      })
    }
  }
  if (t === 0) parser.closedRoot = true
  parser.tagName = parser.attribValue = parser.attribName = ""
  parser.attribList.length = 0
  parser.state = S.TEXT
}

function parseEntity (parser) {
  var entity = parser.entity
    , entityLC = entity.toLowerCase()
    , num
    , numStr = ""
  if (parser.ENTITIES[entity])
    return parser.ENTITIES[entity]
  if (parser.ENTITIES[entityLC])
    return parser.ENTITIES[entityLC]
  entity = entityLC
  if (entity.charAt(0) === "#") {
    if (entity.charAt(1) === "x") {
      entity = entity.slice(2)
      num = parseInt(entity, 16)
      numStr = num.toString(16)
    } else {
      entity = entity.slice(1)
      num = parseInt(entity, 10)
      numStr = num.toString(10)
    }
  }
  entity = entity.replace(/^0+/, "")
  if (numStr.toLowerCase() !== entity) {
    strictFail(parser, "Invalid character entity")
    return "&"+parser.entity + ";"
  }

  return String.fromCodePoint(num)
}

function write (chunk) {
  var parser = this
  if (this.error) throw this.error
  if (parser.closed) return error(parser,
    "Cannot write after close. Assign an onready handler.")
  if (chunk === null) return end(parser)
  var i = 0, c = ""
  while (parser.c = c = chunk.charAt(i++)) {
    if (parser.trackPosition) {
      parser.position ++
      if (c === "\n") {
        parser.line ++
        parser.column = 0
      } else parser.column ++
    }
    switch (parser.state) {

      case S.BEGIN:
        if (c === "<") {
          parser.state = S.OPEN_WAKA
          parser.startTagPosition = parser.position
        } else if (not(whitespace,c)) {
          strictFail(parser, "Non-whitespace before first tag.")
          parser.textNode = c
          parser.state = S.TEXT
        }
      continue

      case S.TEXT:
        if (parser.sawRoot && !parser.closedRoot) {
          var starti = i-1
          while (c && c!=="<" && c!=="&") {
            c = chunk.charAt(i++)
            if (c && parser.trackPosition) {
              parser.position ++
              if (c === "\n") {
                parser.line ++
                parser.column = 0
              } else parser.column ++
            }
          }
          parser.textNode += chunk.substring(starti, i-1)
        }
        if (c === "<") {
          parser.state = S.OPEN_WAKA
          parser.startTagPosition = parser.position
        } else {
          if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot))
            strictFail(parser, "Text data outside of root node.")
          if (c === "&") parser.state = S.TEXT_ENTITY
          else parser.textNode += c
        }
      continue

      case S.SCRIPT:
        if (c === "<") {
          parser.state = S.SCRIPT_ENDING
        } else parser.script += c
      continue

      case S.SCRIPT_ENDING:
        if (c === "/") {
          parser.state = S.CLOSE_TAG
        } else {
          parser.script += "<" + c
          parser.state = S.SCRIPT
        }
      continue

      case S.OPEN_WAKA:
        if (c === "!") {
          parser.state = S.SGML_DECL
          parser.sgmlDecl = ""
        } else if (is(whitespace, c)) {
        } else if (is(nameStart,c)) {
          parser.state = S.OPEN_TAG
          parser.tagName = c
        } else if (c === "/") {
          parser.state = S.CLOSE_TAG
          parser.tagName = ""
        } else if (c === "?") {
          parser.state = S.PROC_INST
          parser.procInstName = parser.procInstBody = ""
        } else {
          strictFail(parser, "Unencoded <")
          if (parser.startTagPosition + 1 < parser.position) {
            var pad = parser.position - parser.startTagPosition
            c = new Array(pad).join(" ") + c
          }
          parser.textNode += "<" + c
          parser.state = S.TEXT
        }
      continue

      case S.SGML_DECL:
        if ((parser.sgmlDecl+c).toUpperCase() === CDATA) {
          emitNode(parser, "onopencdata")
          parser.state = S.CDATA
          parser.sgmlDecl = ""
          parser.cdata = ""
        } else if (parser.sgmlDecl+c === "--") {
          parser.state = S.COMMENT
          parser.comment = ""
          parser.sgmlDecl = ""
        } else if ((parser.sgmlDecl+c).toUpperCase() === DOCTYPE) {
          parser.state = S.DOCTYPE
          if (parser.doctype || parser.sawRoot) strictFail(parser,
            "Inappropriately located doctype declaration")
          parser.doctype = ""
          parser.sgmlDecl = ""
        } else if (c === ">") {
          emitNode(parser, "onsgmldeclaration", parser.sgmlDecl)
          parser.sgmlDecl = ""
          parser.state = S.TEXT
        } else if (is(quote, c)) {
          parser.state = S.SGML_DECL_QUOTED
          parser.sgmlDecl += c
        } else parser.sgmlDecl += c
      continue

      case S.SGML_DECL_QUOTED:
        if (c === parser.q) {
          parser.state = S.SGML_DECL
          parser.q = ""
        }
        parser.sgmlDecl += c
      continue

      case S.DOCTYPE:
        if (c === ">") {
          parser.state = S.TEXT
          emitNode(parser, "ondoctype", parser.doctype)
          parser.doctype = true // just remember that we saw it.
        } else {
          parser.doctype += c
          if (c === "[") parser.state = S.DOCTYPE_DTD
          else if (is(quote, c)) {
            parser.state = S.DOCTYPE_QUOTED
            parser.q = c
          }
        }
      continue

      case S.DOCTYPE_QUOTED:
        parser.doctype += c
        if (c === parser.q) {
          parser.q = ""
          parser.state = S.DOCTYPE
        }
      continue

      case S.DOCTYPE_DTD:
        parser.doctype += c
        if (c === "]") parser.state = S.DOCTYPE
        else if (is(quote,c)) {
          parser.state = S.DOCTYPE_DTD_QUOTED
          parser.q = c
        }
      continue

      case S.DOCTYPE_DTD_QUOTED:
        parser.doctype += c
        if (c === parser.q) {
          parser.state = S.DOCTYPE_DTD
          parser.q = ""
        }
      continue

      case S.COMMENT:
        if (c === "-") parser.state = S.COMMENT_ENDING
        else parser.comment += c
      continue

      case S.COMMENT_ENDING:
        if (c === "-") {
          parser.state = S.COMMENT_ENDED
          parser.comment = textopts(parser.opt, parser.comment)
          if (parser.comment) emitNode(parser, "oncomment", parser.comment)
          parser.comment = ""
        } else {
          parser.comment += "-" + c
          parser.state = S.COMMENT
        }
      continue

      case S.COMMENT_ENDED:
        if (c !== ">") {
          strictFail(parser, "Malformed comment")
          parser.comment += "--" + c
          parser.state = S.COMMENT
        } else parser.state = S.TEXT
      continue

      case S.CDATA:
        if (c === "]") parser.state = S.CDATA_ENDING
        else parser.cdata += c
      continue

      case S.CDATA_ENDING:
        if (c === "]") parser.state = S.CDATA_ENDING_2
        else {
          parser.cdata += "]" + c
          parser.state = S.CDATA
        }
      continue

      case S.CDATA_ENDING_2:
        if (c === ">") {
          if (parser.cdata) emitNode(parser, "oncdata", parser.cdata)
          emitNode(parser, "onclosecdata")
          parser.cdata = ""
          parser.state = S.TEXT
        } else if (c === "]") {
          parser.cdata += "]"
        } else {
          parser.cdata += "]]" + c
          parser.state = S.CDATA
        }
      continue

      case S.PROC_INST:
        if (c === "?") parser.state = S.PROC_INST_ENDING
        else if (is(whitespace, c)) parser.state = S.PROC_INST_BODY
        else parser.procInstName += c
      continue

      case S.PROC_INST_BODY:
        if (!parser.procInstBody && is(whitespace, c)) continue
        else if (c === "?") parser.state = S.PROC_INST_ENDING
        else parser.procInstBody += c
      continue

      case S.PROC_INST_ENDING:
        if (c === ">") {
          emitNode(parser, "onprocessinginstruction", {
            name : parser.procInstName,
            body : parser.procInstBody
          })
          parser.procInstName = parser.procInstBody = ""
          parser.state = S.TEXT
        } else {
          parser.procInstBody += "?" + c
          parser.state = S.PROC_INST_BODY
        }
      continue

      case S.OPEN_TAG:
        if (is(nameBody, c)) parser.tagName += c
        else {
          newTag(parser)
          if (c === ">") openTag(parser)
          else if (c === "/") parser.state = S.OPEN_TAG_SLASH
          else {
            if (not(whitespace, c)) strictFail(
              parser, "Invalid character in tag name")
            parser.state = S.ATTRIB
          }
        }
      continue

      case S.OPEN_TAG_SLASH:
        if (c === ">") {
          openTag(parser, true)
          closeTag(parser)
        } else {
          strictFail(parser, "Forward-slash in opening tag not followed by >")
          parser.state = S.ATTRIB
        }
      continue

      case S.ATTRIB:
        if (is(whitespace, c)) continue
        else if (c === ">") openTag(parser)
        else if (c === "/") parser.state = S.OPEN_TAG_SLASH
        else if (is(nameStart, c)) {
          parser.attribName = c
          parser.attribValue = ""
          parser.state = S.ATTRIB_NAME
        } else strictFail(parser, "Invalid attribute name")
      continue

      case S.ATTRIB_NAME:
        if (c === "=") parser.state = S.ATTRIB_VALUE
        else if (c === ">") {
          strictFail(parser, "Attribute without value")
          parser.attribValue = parser.attribName
          attrib(parser)
          openTag(parser)
        }
        else if (is(whitespace, c)) parser.state = S.ATTRIB_NAME_SAW_WHITE
        else if (is(nameBody, c)) parser.attribName += c
        else strictFail(parser, "Invalid attribute name")
      continue

      case S.ATTRIB_NAME_SAW_WHITE:
        if (c === "=") parser.state = S.ATTRIB_VALUE
        else if (is(whitespace, c)) continue
        else {
          strictFail(parser, "Attribute without value")
          parser.tag.attributes[parser.attribName] = ""
          parser.attribValue = ""
          emitNode(parser, "onattribute",
                   { name : parser.attribName, value : "" })
          parser.attribName = ""
          if (c === ">") openTag(parser)
          else if (is(nameStart, c)) {
            parser.attribName = c
            parser.state = S.ATTRIB_NAME
          } else {
            strictFail(parser, "Invalid attribute name")
            parser.state = S.ATTRIB
          }
        }
      continue

      case S.ATTRIB_VALUE:
        if (is(whitespace, c)) continue
        else if (is(quote, c)) {
          parser.q = c
          parser.state = S.ATTRIB_VALUE_QUOTED
        } else {
          strictFail(parser, "Unquoted attribute value")
          parser.state = S.ATTRIB_VALUE_UNQUOTED
          parser.attribValue = c
        }
      continue

      case S.ATTRIB_VALUE_QUOTED:
        if (c !== parser.q) {
          if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_Q
          else parser.attribValue += c
          continue
        }
        attrib(parser)
        parser.q = ""
        parser.state = S.ATTRIB_VALUE_CLOSED
      continue

      case S.ATTRIB_VALUE_CLOSED:
        if (is(whitespace, c)) {
          parser.state = S.ATTRIB
        } else if (c === ">") openTag(parser)
        else if (c === "/") parser.state = S.OPEN_TAG_SLASH
        else if (is(nameStart, c)) {
          strictFail(parser, "No whitespace between attributes")
          parser.attribName = c
          parser.attribValue = ""
          parser.state = S.ATTRIB_NAME
        } else strictFail(parser, "Invalid attribute name")
      continue

      case S.ATTRIB_VALUE_UNQUOTED:
        if (not(attribEnd,c)) {
          if (c === "&") parser.state = S.ATTRIB_VALUE_ENTITY_U
          else parser.attribValue += c
          continue
        }
        attrib(parser)
        if (c === ">") openTag(parser)
        else parser.state = S.ATTRIB
      continue

      case S.CLOSE_TAG:
        if (!parser.tagName) {
          if (is(whitespace, c)) continue
          else if (not(nameStart, c)) {
            if (parser.script) {
              parser.script += "</" + c
              parser.state = S.SCRIPT
            } else {
              strictFail(parser, "Invalid tagname in closing tag.")
            }
          } else parser.tagName = c
        }
        else if (c === ">") closeTag(parser)
        else if (is(nameBody, c)) parser.tagName += c
        else if (parser.script) {
          parser.script += "</" + parser.tagName
          parser.tagName = ""
          parser.state = S.SCRIPT
        } else {
          if (not(whitespace, c)) strictFail(parser,
            "Invalid tagname in closing tag")
          parser.state = S.CLOSE_TAG_SAW_WHITE
        }
      continue

      case S.CLOSE_TAG_SAW_WHITE:
        if (is(whitespace, c)) continue
        if (c === ">") closeTag(parser)
        else strictFail(parser, "Invalid characters in closing tag")
      continue

      case S.TEXT_ENTITY:
      case S.ATTRIB_VALUE_ENTITY_Q:
      case S.ATTRIB_VALUE_ENTITY_U:
        switch(parser.state) {
          case S.TEXT_ENTITY:
            var returnState = S.TEXT, buffer = "textNode"
          break

          case S.ATTRIB_VALUE_ENTITY_Q:
            var returnState = S.ATTRIB_VALUE_QUOTED, buffer = "attribValue"
          break

          case S.ATTRIB_VALUE_ENTITY_U:
            var returnState = S.ATTRIB_VALUE_UNQUOTED, buffer = "attribValue"
          break
        }
        if (c === ";") {
          parser[buffer] += parseEntity(parser)
          parser.entity = ""
          parser.state = returnState
        }
        else if (is(entity, c)) parser.entity += c
        else {
          strictFail(parser, "Invalid character entity")
          parser[buffer] += "&" + parser.entity + c
          parser.entity = ""
          parser.state = returnState
        }
      continue

      default:
        throw new Error(parser, "Unknown state: " + parser.state)
    }
  } // while
  if (parser.position >= parser.bufferCheckPosition) checkBufferLength(parser)
  return parser
}


if (!String.fromCodePoint) {
        (function() {
                var stringFromCharCode = String.fromCharCode;
                var floor = Math.floor;
                var fromCodePoint = function() {
                        var MAX_SIZE = 0x4000;
                        var codeUnits = [];
                        var highSurrogate;
                        var lowSurrogate;
                        var index = -1;
                        var length = arguments.length;
                        if (!length) {
                                return '';
                        }
                        var result = '';
                        while (++index < length) {
                                var codePoint = Number(arguments[index]);
                                if (
                                        !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
                                        codePoint < 0 || // not a valid Unicode code point
                                        codePoint > 0x10FFFF || // not a valid Unicode code point
                                        floor(codePoint) != codePoint // not an integer
                                ) {
                                        throw RangeError('Invalid code point: ' + codePoint);
                                }
                                if (codePoint <= 0xFFFF) { // BMP code point
                                        codeUnits.push(codePoint);
                                } else { // Astral code point; split in surrogate halves
                                        codePoint -= 0x10000;
                                        highSurrogate = (codePoint >> 10) + 0xD800;
                                        lowSurrogate = (codePoint % 0x400) + 0xDC00;
                                        codeUnits.push(highSurrogate, lowSurrogate);
                                }
                                if (index + 1 == length || codeUnits.length > MAX_SIZE) {
                                        result += stringFromCharCode.apply(null, codeUnits);
                                        codeUnits.length = 0;
                                }
                        }
                        return result;
                };
                if (Object.defineProperty) {
                        Object.defineProperty(String, 'fromCodePoint', {
                                'value': fromCodePoint,
                                'configurable': true,
                                'writable': true
                        });
                } else {
                        String.fromCodePoint = fromCodePoint;
                }
        }());
}

})(typeof exports === "undefined" ? sax = {} : exports)
}).call(this,require("buffer").Buffer)
},{"buffer":11,"stream":19,"string_decoder":25}],96:[function(require,module,exports){
(function() {
  var XMLBuilder, XMLFragment;

  XMLFragment = require('./XMLFragment');

  XMLBuilder = (function() {

    function XMLBuilder(name, xmldec, doctype) {
      var att, child, _ref;
      this.children = [];
      this.rootObject = null;
      if (this.is(name, 'Object')) {
        _ref = [name, xmldec], xmldec = _ref[0], doctype = _ref[1];
        name = null;
      }
      if (name != null) {
        name = '' + name || '';
        if (xmldec == null) {
          xmldec = {
            'version': '1.0'
          };
        }
      }
      if ((xmldec != null) && !(xmldec.version != null)) {
        throw new Error("Version number is required");
      }
      if (xmldec != null) {
        xmldec.version = '' + xmldec.version || '';
        if (!xmldec.version.match(/1\.[0-9]+/)) {
          throw new Error("Invalid version number: " + xmldec.version);
        }
        att = {
          version: xmldec.version
        };
        if (xmldec.encoding != null) {
          xmldec.encoding = '' + xmldec.encoding || '';
          if (!xmldec.encoding.match(/[A-Za-z](?:[A-Za-z0-9._-]|-)*/)) {
            throw new Error("Invalid encoding: " + xmldec.encoding);
          }
          att.encoding = xmldec.encoding;
        }
        if (xmldec.standalone != null) {
          att.standalone = xmldec.standalone ? "yes" : "no";
        }
        child = new XMLFragment(this, '?xml', att);
        this.children.push(child);
      }
      if (doctype != null) {
        att = {};
        if (name != null) {
          att.name = name;
        }
        if (doctype.ext != null) {
          doctype.ext = '' + doctype.ext || '';
          att.ext = doctype.ext;
        }
        child = new XMLFragment(this, '!DOCTYPE', att);
        this.children.push(child);
      }
      if (name != null) {
        this.begin(name);
      }
    }

    XMLBuilder.prototype.begin = function(name, xmldec, doctype) {
      var doc, root;
      if (!(name != null)) {
        throw new Error("Root element needs a name");
      }
      if (this.rootObject) {
        this.children = [];
        this.rootObject = null;
      }
      if (xmldec != null) {
        doc = new XMLBuilder(name, xmldec, doctype);
        return doc.root();
      }
      name = '' + name || '';
      root = new XMLFragment(this, name, {});
      root.isRoot = true;
      root.documentObject = this;
      this.children.push(root);
      this.rootObject = root;
      return root;
    };

    XMLBuilder.prototype.root = function() {
      return this.rootObject;
    };

    XMLBuilder.prototype.end = function(options) {
      return toString(options);
    };

    XMLBuilder.prototype.toString = function(options) {
      var child, r, _i, _len, _ref;
      r = '';
      _ref = this.children;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        child = _ref[_i];
        r += child.toString(options);
      }
      return r;
    };

    XMLBuilder.prototype.is = function(obj, type) {
      var clas;
      clas = Object.prototype.toString.call(obj).slice(8, -1);
      return (obj != null) && clas === type;
    };

    return XMLBuilder;

  })();

  module.exports = XMLBuilder;

}).call(this);

},{"./XMLFragment":97}],97:[function(require,module,exports){
(function() {
  var XMLFragment,
    __hasProp = {}.hasOwnProperty;

  XMLFragment = (function() {

    function XMLFragment(parent, name, attributes, text) {
      this.isRoot = false;
      this.documentObject = null;
      this.parent = parent;
      this.name = name;
      this.attributes = attributes;
      this.value = text;
      this.children = [];
    }

    XMLFragment.prototype.element = function(name, attributes, text) {
      var child, key, val, _ref, _ref1;
      if (!(name != null)) {
        throw new Error("Missing element name");
      }
      name = '' + name || '';
      this.assertLegalChar(name);
      if (attributes == null) {
        attributes = {};
      }
      if (this.is(attributes, 'String') && this.is(text, 'Object')) {
        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];
      } else if (this.is(attributes, 'String')) {
        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];
      }
      for (key in attributes) {
        if (!__hasProp.call(attributes, key)) continue;
        val = attributes[key];
        val = '' + val || '';
        attributes[key] = this.escape(val);
      }
      child = new XMLFragment(this, name, attributes);
      if (text != null) {
        text = '' + text || '';
        text = this.escape(text);
        this.assertLegalChar(text);
        child.raw(text);
      }
      this.children.push(child);
      return child;
    };

    XMLFragment.prototype.insertBefore = function(name, attributes, text) {
      var child, i, key, val, _ref, _ref1;
      if (this.isRoot) {
        throw new Error("Cannot insert elements at root level");
      }
      if (!(name != null)) {
        throw new Error("Missing element name");
      }
      name = '' + name || '';
      this.assertLegalChar(name);
      if (attributes == null) {
        attributes = {};
      }
      if (this.is(attributes, 'String') && this.is(text, 'Object')) {
        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];
      } else if (this.is(attributes, 'String')) {
        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];
      }
      for (key in attributes) {
        if (!__hasProp.call(attributes, key)) continue;
        val = attributes[key];
        val = '' + val || '';
        attributes[key] = this.escape(val);
      }
      child = new XMLFragment(this.parent, name, attributes);
      if (text != null) {
        text = '' + text || '';
        text = this.escape(text);
        this.assertLegalChar(text);
        child.raw(text);
      }
      i = this.parent.children.indexOf(this);
      this.parent.children.splice(i, 0, child);
      return child;
    };

    XMLFragment.prototype.insertAfter = function(name, attributes, text) {
      var child, i, key, val, _ref, _ref1;
      if (this.isRoot) {
        throw new Error("Cannot insert elements at root level");
      }
      if (!(name != null)) {
        throw new Error("Missing element name");
      }
      name = '' + name || '';
      this.assertLegalChar(name);
      if (attributes == null) {
        attributes = {};
      }
      if (this.is(attributes, 'String') && this.is(text, 'Object')) {
        _ref = [text, attributes], attributes = _ref[0], text = _ref[1];
      } else if (this.is(attributes, 'String')) {
        _ref1 = [{}, attributes], attributes = _ref1[0], text = _ref1[1];
      }
      for (key in attributes) {
        if (!__hasProp.call(attributes, key)) continue;
        val = attributes[key];
        val = '' + val || '';
        attributes[key] = this.escape(val);
      }
      child = new XMLFragment(this.parent, name, attributes);
      if (text != null) {
        text = '' + text || '';
        text = this.escape(text);
        this.assertLegalChar(text);
        child.raw(text);
      }
      i = this.parent.children.indexOf(this);
      this.parent.children.splice(i + 1, 0, child);
      return child;
    };

    XMLFragment.prototype.remove = function() {
      var i, _ref;
      if (this.isRoot) {
        throw new Error("Cannot remove the root element");
      }
      i = this.parent.children.indexOf(this);
      [].splice.apply(this.parent.children, [i, i - i + 1].concat(_ref = [])), _ref;
      return this.parent;
    };

    XMLFragment.prototype.text = function(value) {
      var child;
      if (!(value != null)) {
        throw new Error("Missing element text");
      }
      value = '' + value || '';
      value = this.escape(value);
      this.assertLegalChar(value);
      child = new XMLFragment(this, '', {}, value);
      this.children.push(child);
      return this;
    };

    XMLFragment.prototype.cdata = function(value) {
      var child;
      if (!(value != null)) {
        throw new Error("Missing CDATA text");
      }
      value = '' + value || '';
      this.assertLegalChar(value);
      if (value.match(/]]>/)) {
        throw new Error("Invalid CDATA text: " + value);
      }
      child = new XMLFragment(this, '', {}, '<![CDATA[' + value + ']]>');
      this.children.push(child);
      return this;
    };

    XMLFragment.prototype.comment = function(value) {
      var child;
      if (!(value != null)) {
        throw new Error("Missing comment text");
      }
      value = '' + value || '';
      value = this.escape(value);
      this.assertLegalChar(value);
      if (value.match(/--/)) {
        throw new Error("Comment text cannot contain double-hypen: " + value);
      }
      child = new XMLFragment(this, '', {}, '<!-- ' + value + ' -->');
      this.children.push(child);
      return this;
    };

    XMLFragment.prototype.raw = function(value) {
      var child;
      if (!(value != null)) {
        throw new Error("Missing raw text");
      }
      value = '' + value || '';
      child = new XMLFragment(this, '', {}, value);
      this.children.push(child);
      return this;
    };

    XMLFragment.prototype.up = function() {
      if (this.isRoot) {
        throw new Error("This node has no parent. Use doc() if you need to get the document object.");
      }
      return this.parent;
    };

    XMLFragment.prototype.root = function() {
      var child;
      if (this.isRoot) {
        return this;
      }
      child = this.parent;
      while (!child.isRoot) {
        child = child.parent;
      }
      return child;
    };

    XMLFragment.prototype.document = function() {
      return this.root().documentObject;
    };

    XMLFragment.prototype.end = function(options) {
      return this.document().toString(options);
    };

    XMLFragment.prototype.prev = function() {
      var i;
      if (this.isRoot) {
        throw new Error("Root node has no siblings");
      }
      i = this.parent.children.indexOf(this);
      if (i < 1) {
        throw new Error("Already at the first node");
      }
      return this.parent.children[i - 1];
    };

    XMLFragment.prototype.next = function() {
      var i;
      if (this.isRoot) {
        throw new Error("Root node has no siblings");
      }
      i = this.parent.children.indexOf(this);
      if (i === -1 || i === this.parent.children.length - 1) {
        throw new Error("Already at the last node");
      }
      return this.parent.children[i + 1];
    };

    XMLFragment.prototype.clone = function(deep) {
      var clonedSelf;
      clonedSelf = new XMLFragment(this.parent, this.name, this.attributes, this.value);
      if (deep) {
        this.children.forEach(function(child) {
          var clonedChild;
          clonedChild = child.clone(deep);
          clonedChild.parent = clonedSelf;
          return clonedSelf.children.push(clonedChild);
        });
      }
      return clonedSelf;
    };

    XMLFragment.prototype.importXMLBuilder = function(xmlbuilder) {
      var clonedRoot;
      clonedRoot = xmlbuilder.root().clone(true);
      clonedRoot.parent = this;
      this.children.push(clonedRoot);
      clonedRoot.isRoot = false;
      return this;
    };

    XMLFragment.prototype.attribute = function(name, value) {
      var _ref;
      if (!(name != null)) {
        throw new Error("Missing attribute name");
      }
      if (!(value != null)) {
        throw new Error("Missing attribute value");
      }
      name = '' + name || '';
      value = '' + value || '';
      if ((_ref = this.attributes) == null) {
        this.attributes = {};
      }
      this.attributes[name] = this.escape(value);
      return this;
    };

    XMLFragment.prototype.removeAttribute = function(name) {
      if (!(name != null)) {
        throw new Error("Missing attribute name");
      }
      name = '' + name || '';
      delete this.attributes[name];
      return this;
    };

    XMLFragment.prototype.toString = function(options, level) {
      var attName, attValue, child, indent, newline, pretty, r, space, _i, _len, _ref, _ref1;
      pretty = (options != null) && options.pretty || false;
      indent = (options != null) && options.indent || '  ';
      newline = (options != null) && options.newline || '\n';
      level || (level = 0);
      space = new Array(level + 1).join(indent);
      r = '';
      if (pretty) {
        r += space;
      }
      if (!(this.value != null)) {
        r += '<' + this.name;
      } else {
        r += '' + this.value;
      }
      _ref = this.attributes;
      for (attName in _ref) {
        attValue = _ref[attName];
        if (this.name === '!DOCTYPE') {
          r += ' ' + attValue;
        } else {
          r += ' ' + attName + '="' + attValue + '"';
        }
      }
      if (this.children.length === 0) {
        if (!(this.value != null)) {
          r += this.name === '?xml' ? '?>' : this.name === '!DOCTYPE' ? '>' : '/>';
        }
        if (pretty) {
          r += newline;
        }
      } else if (pretty && this.children.length === 1 && this.children[0].value) {
        r += '>';
        r += this.children[0].value;
        r += '</' + this.name + '>';
        r += newline;
      } else {
        r += '>';
        if (pretty) {
          r += newline;
        }
        _ref1 = this.children;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          child = _ref1[_i];
          r += child.toString(options, level + 1);
        }
        if (pretty) {
          r += space;
        }
        r += '</' + this.name + '>';
        if (pretty) {
          r += newline;
        }
      }
      return r;
    };

    XMLFragment.prototype.escape = function(str) {
      return str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/'/g, '&apos;').replace(/"/g, '&quot;');
    };

    XMLFragment.prototype.assertLegalChar = function(str) {
      var chars, chr;
      chars = /[\u0000-\u0008\u000B-\u000C\u000E-\u001F\uD800-\uDFFF\uFFFE-\uFFFF]/;
      chr = str.match(chars);
      if (chr) {
        throw new Error("Invalid character (" + chr + ") in string: " + str);
      }
    };

    XMLFragment.prototype.is = function(obj, type) {
      var clas;
      clas = Object.prototype.toString.call(obj).slice(8, -1);
      return (obj != null) && clas === type;
    };

    XMLFragment.prototype.ele = function(name, attributes, text) {
      return this.element(name, attributes, text);
    };

    XMLFragment.prototype.txt = function(value) {
      return this.text(value);
    };

    XMLFragment.prototype.dat = function(value) {
      return this.cdata(value);
    };

    XMLFragment.prototype.att = function(name, value) {
      return this.attribute(name, value);
    };

    XMLFragment.prototype.com = function(value) {
      return this.comment(value);
    };

    XMLFragment.prototype.doc = function() {
      return this.document();
    };

    XMLFragment.prototype.e = function(name, attributes, text) {
      return this.element(name, attributes, text);
    };

    XMLFragment.prototype.t = function(value) {
      return this.text(value);
    };

    XMLFragment.prototype.d = function(value) {
      return this.cdata(value);
    };

    XMLFragment.prototype.a = function(name, value) {
      return this.attribute(name, value);
    };

    XMLFragment.prototype.c = function(value) {
      return this.comment(value);
    };

    XMLFragment.prototype.r = function(value) {
      return this.raw(value);
    };

    XMLFragment.prototype.u = function() {
      return this.up();
    };

    return XMLFragment;

  })();

  module.exports = XMLFragment;

}).call(this);

},{}],98:[function(require,module,exports){
(function() {
  var XMLBuilder;

  XMLBuilder = require('./XMLBuilder');

  module.exports.create = function(name, xmldec, doctype) {
    if (name != null) {
      return new XMLBuilder(name, xmldec, doctype).root();
    } else {
      return new XMLBuilder();
    }
  };

}).call(this);

},{"./XMLBuilder":96}]},{},[30])